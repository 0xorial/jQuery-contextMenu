{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap dedd46682d1ed8088440","webpack:///./src/js/defaults/index.js","webpack:///./src/js/helpers/index.js","webpack:///./src/js/contextmenu.js","webpack:///./src/js/modules/ContextMenuManager.js","webpack:///./src/js/defaults/position.js","webpack:///./src/js/modules/ContextMenuEventHandler.js","webpack:///./src/js/modules/ContextMenuOperations.js","webpack:///./src/js/modules/ContextMenuItemTypes.js","webpack:///./src/js/modules/html5builder.js","webpack:///./src/js/modules/jqueryContextMenuFunction.js"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_position","selector","appendTo","trigger","autoHide","delay","reposition","hideOnSecondTrigger","selectableSubMenu","className","classNames","hover","disabled","visible","notSelectable","icon","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","iconLoadingClass","zIndex","animation","duration","show","hide","events","$","noop","activated","callback","items","build","types","determinePosition","position","positionSubmenu","setInputValues","opt","data","each","inputs","key","item","type","value","selected","radio","getInputValues","$input","val","prop","zindex","$t","zin","$tt","Math","max","parseInt","css","parent","length","indexOf","toLowerCase","splitAccesskey","k","t","split","keys","charAt","toUpperCase","push","_helpers","menus","namespaces","operations","_ContextMenuOperations2","default","handler","_ContextMenuEventHandler2","manager","_ContextMenuManager2","_defaults2","contextMenu","operation","options","create","fromMenu","_html5builder2","defaults","handle","fn","_jqueryContextMenuFunction2","ContextMenuManager","_classCallCheck","initialized","counter","_this","extend","$document","document","$context","_hasContext","context","first","is","update","menu","Error","match","isEmptyObject","ns","itemClick","itemClickEvent","contextMenuItemObj","contextmenu:focus.contextMenu","focusItem","contextmenu:blur.contextMenu","blurItem","contextmenu.contextMenu","abortevent","mouseenter.contextMenu","itemMouseenter","mouseleave.contextMenu","itemMouseleave","on","contextmenu:hide.contextMenu","hideMenu","prevcommand.contextMenu","prevItem","nextcommand.contextMenu","nextItem","menuMouseenter","menuMouseleave","inputClick","contextmenu","mouseenter","mouseleave","click","$visibleMenu","forEach","filter","contextMenuRoot","$trigger","find","force","$menu","remove","off","support","htmlCommand","htmlMenuitem","id","ui","my","at","of","offset","collision","top","outerHeight","left","outerWidth","e","x","y","$window","window","offsetParentOffset","offsetParent","bottom","scrollTop","height","right","scrollLeft","width","ContextMenuEventHandler","$currentTrigger","hoveract","preventDefault","stopImmediatePropagation","$this","currentTarget","originalEvent","mouseButton","hasClass","built","console","error","log","showMenu","isFunction","pageX","pageY","Event","button","removeData","$related","relatedTarget","closest","mousemove","timer","setTimeout","clearTimeout","target","triggerAction","elementFromPoint","$layer","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","one","isInput","stopPropagation","targetZIndex","getZIndexOfTriggerTarget","style","parentElement","keyCode","keyStop","shiftKey","$selected","blur","$parent","itemdata","children","String","fromCharCode","accesskeys","$node","$s","$children","$prev","prev","last","$round","focus","$next","next","hovering","contextMenuKey","callbacks","addClass","join","not","removeClass","ContextMenuOperations","additionalZValue","layer","pos","_typeof","undefined","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","text","_afterAccesskey","isHtmlName","accesskey","html","$label","_ContextMenuItemTypes2","separator","ak","aks","matched","RegExp","commands","submenu","hasTypes","attr","textarea","checkbox","prependTo","select","then","processPromises","focusInput","blurInput","_icon","substring","eventSelectstart","body","nested","domMenu","display","getBoundingClientRect","ceil","minWidth","maxWidth","index","element","resize","addBack","$item","z-index","opacity","background-color","insertBefore","layerClick","promise","finishPromiseProcess","errorPromise","errorItem","bind","$menuOffset","winHeight","winScrollTop","menuHeight","overflow-x","overflow-y","simple","inputLabel","node","html5builder","nodeName","label","clone","$o","isPlainObject"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jquery.contextMenu\"] = factory();\n\telse\n\t\troot[\"jquery.contextMenu\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dedd46682d1ed8088440","import {determinePosition, positionSubmenu, position} from './position';\n/**\n * @class ContextMenuSettings\n * @instance\n * @interface\n * @classdesc\n ## Register new contextMenu\n\n To register a new contextMenu:\n\n ```javascript\n $.contextMenu( contextMenuOptions );\n ```\n\n ## Update contextMenu state\n\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\n\n ```javascript\n $('.context-menu-one').contextMenu('update'); // update single menu\n $.contextMenu('update') // update all open menus\n ```\n\n * @property {null|string} selector - Selector on which the contextMenu triggers.\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\n * @property {JQuery.Selector|DOMElement} [appendTo=document.body] - Specifies the selector `string` or `DOMElement` the generated menu is to be appended to.\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\n\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\n\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\n * @property {number} zIndex=1 - offset to add to zIndex\n * @property {string} className - Class to be appended to the root menu.\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\n * @property {string} classNames.hover=context-menu-hover\n * @property {string} classNames.disabled=context-menu-disabled\n * @property {string} classNames.visible=context-menu-visible\n * @property {string} classNames.notSelectable=context-menu-not-selectable\n * @property {string} classNames.icon=context-menu-icon\n * @property {string} classNames.iconEdit=context-menu-icon-edit\n * @property {string} classNames.iconCut=context-menu-icon-cut\n * @property {string} classNames.iconCopy=context-menu-icon-copy\n * @property {string} classNames.iconPaste=context-menu-icon-paste\n * @property {string} classNames.iconDelete=context-menu-icon-delete\n * @property {string} classNames.iconAdd=context-menu-icon-add\n * @property {string} classNames.iconQuit=context-menu-icon-quit\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\n * @property {Object} animation - Animation settings\n * @property {number} animation.duration=50\n * @property {string} animation.show='slideDown'\n * @property {string} animation.hide='slideUp'\n * @property {Object} events - Event callbacks\n * @property {Function} events.show - Called when contextmenu is shown.\n * @property {Function} events.hide - Called when contextmenu is hidden.\n * @property {Function} events.activated - Called when contextmenu is activated.\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\n * @property {ContextMenuBuildCallback} build=false\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\n\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\n\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\n\n * @property {(determinePosition)} determinePosition\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\n */\nexport default {\n    // selector of contextMenu trigger\n    selector: null,\n\n    // where to append the menu to\n    appendTo: null,\n\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\n    trigger: 'right',\n\n    // hide menu when mouse leaves trigger / menu elements\n    autoHide: false,\n\n    // ms to wait before showing a hover-triggered context menu\n    delay: 200,\n\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n    // as long as the trigger happened on one of the trigger-element's child nodes\n    reposition: true,\n\n    // Flag denoting if a second trigger should close the menu, as long as\n    // the trigger happened on one of the trigger-element's child nodes.\n    // This overrides the reposition option.\n    hideOnSecondTrigger: false,\n\n    // ability to select submenu\n    selectableSubMenu: false,\n\n    className: '',\n\n    // Default classname configuration to be able avoid conflicts in frameworks\n    classNames: {\n        hover: 'context-menu-hover', // Item hover\n        disabled: 'context-menu-disabled', // Item disabled\n        visible: 'context-menu-visible', // Item visible\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\n\n        icon: 'context-menu-icon',\n        iconEdit: 'context-menu-icon-edit',\n        iconCut: 'context-menu-icon-cut',\n        iconCopy: 'context-menu-icon-copy',\n        iconPaste: 'context-menu-icon-paste',\n        iconDelete: 'context-menu-icon-delete',\n        iconAdd: 'context-menu-icon-add',\n        iconQuit: 'context-menu-icon-quit',\n        iconLoadingClass: 'context-menu-icon-loading'\n    },\n\n    // offset to add to zIndex\n    zIndex: 1,\n\n    // show hide animation settings\n    animation: {\n        duration: 50,\n        show: 'slideDown',\n        hide: 'slideUp'\n    },\n\n    // events\n    events: {\n        show: $.noop,\n        hide: $.noop,\n        activated: $.noop\n    },\n\n    // default callback\n    callback: null,\n\n    // list of contextMenu items\n    items: {},\n\n    // Build callback for creating a menu dynamicly\n    build: false,\n\n    types: {},\n\n    // determine position to show menu at\n    determinePosition,\n\n    // position menu\n    position,\n\n    // position the sub-menu\n    positionSubmenu\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/index.js","\n/**\n * import values into <input> commands\n * @param {ContextMenuData} opt - {@link ContextMenuData} object\n * @param {Object} data - Values to set\n * @return {undefined}\n */\nexport function setInputValues(opt, data) {\n    if (typeof data === 'undefined') {\n        data = {};\n    }\n\n    $.each(opt.inputs, function (key, item) {\n        switch (item.type) {\n            case 'text':\n            case 'textarea':\n                item.value = data[key] || '';\n                break;\n\n            case 'checkbox':\n                item.selected = !!data[key];\n                break;\n\n            case 'radio':\n                item.selected = (data[item.radio] || '') === item.value;\n                break;\n\n            case 'select':\n                item.selected = data[key] || '';\n                break;\n        }\n    });\n}\n\n/**\n * export values from <input> commands\n * @param {ContextMenuData} opt - {@link ContextMenuData} object\n * @param {Object} data - Values object\n * @return {Object} - Values of input elements\n */\nexport function getInputValues(opt, data) {\n    if (typeof data === 'undefined') {\n        data = {};\n    }\n\n    $.each(opt.inputs, function (key, item) {\n        switch (item.type) {\n            case 'text':\n            case 'textarea':\n            case 'select':\n                data[key] = item.$input.val();\n                break;\n\n            case 'checkbox':\n                data[key] = item.$input.prop('checked');\n                break;\n\n            case 'radio':\n                if (item.$input.prop('checked')) {\n                    data[item.radio] = item.value;\n                }\n                break;\n        }\n    });\n\n    return data;\n}\n\n/**\n * @param {JQuery} $t - Element to calculate z-index of.\n * @return {number} - Elements zIndex\n */\nexport function zindex($t) {\n    let zin = 0;\n    let $tt = $t;\n\n    while (true) {\n        zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n        $tt = $tt.parent();\n        if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n            break;\n        }\n    }\n    return zin;\n}\n\n/**\n * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n * @param {string} val - Accesskey value\n * @return {Array} - Seperate keys to handle as accesskey\n */\nexport function splitAccesskey(val) {\n    let t = val.split(/\\s+/);\n    let keys = [];\n\n    for (let i = 0, k; k = t[i]; i++) {\n        k = k.charAt(0).toUpperCase(); // first character only\n        // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n        // a map to look up already used access keys would be nice\n        keys.push(k);\n    }\n\n    return keys;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/helpers/index.js","'use strict';\nimport '../sass/jquery.contextMenu.scss';\n\nimport ContextMenuManager from './modules/ContextMenuManager';\nimport defaults from './defaults';\nimport ContextMenuEventHandler from './modules/ContextMenuEventHandler';\nimport ContextMenuOperations from './modules/ContextMenuOperations';\n\nimport {setInputValues, getInputValues} from './helpers';\nimport fromMenu from './modules/html5builder';\nimport elementFunction from './modules/jqueryContextMenuFunction';\n/**\n * The jQuery namespace.\n * @external \"jQuery\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * @class jQuery.contextMenu\n * @function external:jQuery.contextMenu\n * @instance\n *\n * @param {string} operation\n * @param {ContextMenuSettings} options\n *\n * @property {ContextMenuManager} manager\n * @property {getInputValues} getInputValues\n * @property {setInputValues} setInputValues\n * @property {fromMenu} fromMenu\n * @property {ContextMenuSettings} defaults\n * @property {ContextMenuEventHandler} handle\n * @property {ContextMenuOperations} operations\n * @property {Object<string, ContextMenuData>} menus\n */\nconst menus = {};\nconst namespaces = {};\nconst operations = new ContextMenuOperations();\nconst handler = new ContextMenuEventHandler();\nconst manager = new ContextMenuManager(defaults, handler, operations, menus, namespaces);\n\n\n// manage contextMenu instances\nlet contextMenu = function (operation, options) {\n    manager.create(operation, options);\n};\n\ncontextMenu.manager = manager;\ncontextMenu.setInputValues = setInputValues;\ncontextMenu.getInputValues = getInputValues;\ncontextMenu.fromMenu = fromMenu;\n\n// make defaults accessible\ncontextMenu.defaults = defaults;\ncontextMenu.types = defaults.types;\n\n// export internal functions - undocumented, for hacking only!\ncontextMenu.handle = handler;\ncontextMenu.operations = operations;\ncontextMenu.menus = menus;\ncontextMenu.namespaces = namespaces;\n\n$.fn.contextMenu = elementFunction;\n$.contextMenu = contextMenu;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/contextmenu.js","/**\n * @typedef {jQuery.Event} ContextMenuEvent\n * @augments jQuery.Event\n * @property {ContextMenuData} data\n */\n\n/**\n * @class ContextMenuData\n * @augments ContextMenuSettings\n * @instance\n * @interface\n *\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {JQuery} $layer - The opened layer when the menu is opened.\n * @property {JQuery} $node - The menu node.\n * @property {JQuery} $trigger - The element that triggered opening the menu.\n * @property {JQuery} $selected - Reference to the `<li>` command element.\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\n * @property {ContextMenuManager} manager - The contextmenu manager instance.\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\n * @property {?boolean} isInput - We are currently originating events from an input.\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\n *\n * @property {boolean} hovering Currently hovering, root menu only.\n */\n\n/**\n * @class ContextMenuItem\n * @instance\n * @interface\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\n\n ```javascript\n var items = {\n  firstCommand: itemOptions,\n  separator1: \"-----\",\n  separator2: { \"type\": \"cm_separator\" },\n  command2: itemOptions\n}\n ```\n\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\n\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\n\n *\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemTypes|string} type - Specifies the type of the command. See {@link ContextMenuItemTypes}.\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\n * @property {string} value - The value of the `<input>` element.\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ContextMenuItemTypes}.\n * @property {string} radio - Specifies the group of the `radio` element.\n * @property {string} options - Specifies the options of the `select` element.\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\n * @property {Object<string, ContextMenuItem>} items - Items to show in a sub-menu. You can nest as many as you like.\n * @property {string} accesskey - Character(s) to be used as accesskey.\n\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\n\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\n *\n * @property {?JQuery} $input - The input element if it was build for this item.\n *\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items.\n */\n\n/**\n * Specifies the icon class to set for the item.\n *\n * When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified.\n *\n * When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n *\n * @example\n * var items = {\n    firstCommand: {\n        name: \"Copy\",\n        icon: function(e, $itemElement, itemKey, item, opt, root){\n            // Set the content to the menu trigger selector and add an bootstrap icon to the item.\n            $itemElement.html('<span class=\"glyphicon glyphicon-star\" aria-hidden=\"true\"></span> ' + opt.selector);\n\n            // Add the context-menu-icon-updated class to the item\n            return 'context-menu-icon-updated';\n        }\n    },\n    secondCommand: {\n        name: \"Paste\",\n        icon: \"paste\" // Class context-menu-icon-paste is used on the menu item.\n    }\n}\n *\n * @callback ContextMenuIconCallback\n * @param {ContextMenuEvent|JQuery.Event} e,\n * @param {JQuery} $t\n * @param {string} key\n * @param {ContextMenuItem} item\n * @param {ContextMenuData} opt\n * @param {ContextMenuData} root\n */\n\n/**\n * The Callback is executed in the context of the triggering object.\n *\n * @callback ContextMenuItemCallback\n * @param {JQuery.Event} e - Event that trigged the menu.\n * @param {string} key - Key of the menu item.\n * @param {ContextMenuData} opt - Data of the (sub)menu in which the item resides.\n * @param {ContextMenuData} root - Data of the root menu in which the item resides. Might be the same as `opt` if triggered in the menu root.\n * @return {boolean}\n */\n\n/**\n * @callback ContextMenuBuildCallback\n * @param {JQuery.Event} e - Event that trigged the menu.\n * @param {JQuery} $currentTrigger - Element that trigged the menu.\n * @return {Object.<string,ContextMenuItem>}\n */\n\nexport default class ContextMenuManager {\n    /**\n     * @constructor\n     * @constructs ContextMenuManager\n     *\n     * @property {ContextMenuSettings} defaults\n     * @property {ContextMenuEventHandler} handle\n     * @property {ContextMenuOperations} operations\n     * @property {Object<string, ContextMenuData>} menus\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\n     * @property {boolean} initialized - Flag the menu as initialized.\n     * @param {ContextMenuSettings} defaults\n     * @param {ContextMenuEventHandler} handler\n     * @param {ContextMenuOperations} operations\n     * @param {Object<string, ContextMenuData>} menus\n     * @param {Object.<string,string>} namespaces\n     */\n    constructor(defaults, handler, operations, menus, namespaces) {\n        this.defaults = defaults;\n        this.handler = handler;\n        this.operations = operations;\n        this.namespaces = namespaces;\n        this.initialized = false;\n        this.menus = menus;\n        this.counter = 0;\n    }\n\n    /**\n     * @method create\n     * @memberOf ContextMenuManager\n     * @instance\n     *\n     * @param {(string|ContextMenuSettings)} operation\n     * @param {(string|ContextMenuSettings)} options\n     * @return {ContextMenuManager}\n     */\n    create(operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (typeof options === 'undefined') {\n            options = {};\n        }\n\n        // merge with default options\n        const o = $.extend(true, {manager: this}, this.defaults, options || {});\n        const $document = $(document);\n        let $context = $document;\n        let _hasContext = false;\n\n        if (!o.context || !o.context.length) {\n            o.context = document;\n        } else {\n            // you never know what they throw at you...\n            $context = $(o.context).first();\n            o.context = $context.get(0);\n            _hasContext = !$(o.context).is($(document));\n        }\n\n        switch (operation) {\n            case 'update':\n                // Updates visibility and such\n                if (_hasContext) {\n                    this.operations.update(null, $context);\n                } else {\n                    for (let menu in this.menus) {\n                        if (this.menus.hasOwnProperty(menu)) {\n                            this.operations.update(null, this.menus[menu]);\n                        }\n                    }\n                }\n                break;\n\n            case 'create':\n                // no selector no joy\n                if (!o.selector) {\n                    throw new Error('No selector specified');\n                }\n                // make sure internal classes are not bound to\n                if (o.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n                    throw new Error('Cannot bind to selector \"' + o.selector + '\" as it contains a reserved className');\n                }\n                if (!o.build && (!o.items || $.isEmptyObject(o.items))) {\n                    throw new Error('No Items specified');\n                }\n                this.counter++;\n                o.ns = '.contextMenu' + this.counter;\n                if (!_hasContext) {\n                    this.namespaces[o.selector] = o.ns;\n                }\n                this.menus[o.ns] = o;\n\n                // default to right click\n                if (!o.trigger) {\n                    o.trigger = 'right';\n                }\n\n                if (!this.initialized) {\n                    const itemClick = o.itemClickEvent === 'click' ? 'click.contextMenu' : 'mouseup.contextMenu';\n                    const contextMenuItemObj = {\n                        // 'mouseup.contextMenu': this.handler.itemClick,\n                        // 'click.contextMenu': this.handler.itemClick,\n                        'contextmenu:focus.contextMenu': this.handler.focusItem,\n                        'contextmenu:blur.contextMenu': this.handler.blurItem,\n                        'contextmenu.contextMenu': this.handler.abortevent,\n                        'mouseenter.contextMenu': this.handler.itemMouseenter,\n                        'mouseleave.contextMenu': this.handler.itemMouseleave\n                    };\n                    contextMenuItemObj[itemClick] = this.handler.itemClick;\n\n                    // make sure item click is registered first\n                    $document\n                        .on({\n                            'contextmenu:hide.contextMenu': this.handler.hideMenu,\n                            'prevcommand.contextMenu': this.handler.prevItem,\n                            'nextcommand.contextMenu': this.handler.nextItem,\n                            'contextmenu.contextMenu': this.handler.abortevent,\n                            'mouseenter.contextMenu': this.handler.menuMouseenter,\n                            'mouseleave.contextMenu': this.handler.menuMouseleave\n                        }, '.context-menu-list')\n                        .on('mouseup.contextMenu', '.context-menu-input', this.handler.inputClick)\n                        .on(contextMenuItemObj, '.context-menu-item');\n\n                    this.initialized = true;\n                }\n\n                // engage native contextmenu event\n                $context\n                    .on('contextmenu' + o.ns, o.selector, o, this.handler.contextmenu);\n\n                if (_hasContext) {\n                    // add remove hook, just in case\n                    $context.on('remove' + o.ns, function () {\n                        $(this).contextMenu('destroy');\n                    });\n                }\n\n                switch (o.trigger) {\n                    case 'hover':\n                        $context\n                            .on('mouseenter' + o.ns, o.selector, o, this.handler.mouseenter)\n                            .on('mouseleave' + o.ns, o.selector, o, this.handler.mouseleave);\n                        break;\n\n                    case 'left':\n                        $context.on('click' + o.ns, o.selector, o, this.handler.click);\n                        break;\n                    case 'touchstart':\n                        $context.on('touchstart' + o.ns, o.selector, o, this.handler.click);\n                        break;\n                    /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\n                     break;\n                     */\n                }\n\n                // create menu\n                if (!o.build) {\n                    this.operations.create(null, o);\n                }\n                break;\n\n            case 'destroy':\n                let $visibleMenu;\n                if (_hasContext) {\n                    // get proper options\n                    const context = o.context;\n\n                    Object.keys(this.menus).forEach((ns) => {\n                        let o = this.menus[ns];\n\n                        if (!o) {\n                            return true;\n                        }\n\n                        // Is this menu equest to the context called from\n                        if (!$(context).is(o.selector)) {\n                            return true;\n                        }\n\n                        $visibleMenu = $('.context-menu-list').filter(':visible');\n                        if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                            $visibleMenu.trigger('contextmenu:hide', {force: true});\n                        }\n\n                        if (this.menus[o.ns].$menu) {\n                            this.menus[o.ns].$menu.remove();\n                        }\n                        delete this.menus[o.ns];\n\n                        $(o.context).off(o.ns);\n\n                        return true;\n                    });\n                } else if (!o.selector) {\n                    $document.off('.contextMenu .contextMenuAutoHide');\n\n                    Object.keys(this.menus).forEach((ns) => {\n                        let o = this.menus[ns];\n                        $(o.context).off(o.ns);\n                    });\n\n                    this.namespaces = {};\n                    this.menus = {};\n                    this.counter = 0;\n                    this.initialized = false;\n\n                    $('#context-menu-layer, .context-menu-list').remove();\n                } else if (this.namespaces[o.selector]) {\n                    $visibleMenu = $('.context-menu-list').filter(':visible');\n                    if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(o.selector)) {\n                        $visibleMenu.trigger('contextmenu:hide', {force: true});\n                    }\n\n                    if (this.menus[this.namespaces[o.selector]].$menu) {\n                        this.menus[this.namespaces[o.selector]].$menu.remove();\n                    }\n                    delete this.menus[this.namespaces[o.selector]];\n\n                    $document.off(this.namespaces[o.selector]);\n                }\n                break;\n\n            case 'html5':\n                // if <command> and <menuitem> are not handled by the browser,\n                // or options was a bool true,\n                // initialize $.contextMenu for them\n                if ((!$.support.htmlCommand && !$.support.htmlMenuitem) || (typeof options === 'boolean' && options)) {\n                    $('menu[type=\"context\"]').each(function () {\n                        if (this.id) {\n                            $.contextMenu({\n                                selector: '[contextmenu=' + this.id + ']',\n                                items: $.contextMenu.fromMenu(this)\n                            });\n                        }\n                    }).css('display', 'none');\n                }\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/ContextMenuManager.js","/**\n * Determine the position for a root menu.\n * @memberOf ContextMenuSettings\n * @function ContextMenuSettings#determinePosition\n * @param {(JQuery)} $menu\n */\nexport function determinePosition($menu) {\n    // position to the lower middle of the trigger element\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'center top',\n            at: 'center bottom',\n            of: this,\n            offset: '0 5',\n            collision: 'fit'\n        }).css('display', 'none');\n    } else {\n        // determine contextMenu position\n        const offset = this.offset();\n        offset.top += this.outerHeight();\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n        $menu.css(offset);\n    }\n}\n\n/**\n * Position the root menu.\n * @memberOf ContextMenuSettings\n * @function ContextMenuSettings#position\n * @param {JQuery.Event} e\n * @param {ContextMenuData} opt\n * @param {(number|string)} x\n * @param {(number|string)} y\n */\nexport function position(e, opt, x, y) {\n    const $window = $(window);\n    let offset;\n    // determine contextMenu position\n    if (!x && !y) {\n        opt.determinePosition.call(this, opt.$menu);\n        return;\n    } else if (x === 'maintain' && y === 'maintain') {\n        // x and y must not be changed (after re-show on command click)\n        offset = opt.$menu.position();\n    } else {\n        // x and y are given (by mouse event)\n        const offsetParentOffset = opt.$menu.offsetParent().offset();\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\n    }\n\n    // correct offset if viewport demands it\n    const bottom = $window.scrollTop() + $window.height();\n    const right = $window.scrollLeft() + $window.width();\n    const height = opt.$menu.outerHeight();\n    const width = opt.$menu.outerWidth();\n\n    if (offset.top + height > bottom) {\n        offset.top -= height;\n    }\n\n    if (offset.top < 0) {\n        offset.top = 0;\n    }\n\n    if (offset.left + width > right) {\n        offset.left -= width;\n    }\n\n    if (offset.left < 0) {\n        offset.left = 0;\n    }\n\n    opt.$menu.css(offset);\n}\n\n/**\n * Position a submenu.\n * @memberOf ContextMenuSettings\n * @function ContextMenuSettings#positionSubmenu\n * @param {JQuery.Event} e\n * @param {JQuery} $menu\n */\n// position the sub-menu\nexport function positionSubmenu(e, $menu) {\n    if (typeof $menu === 'undefined') {\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\n        // but the submenu does not exist yet if opt.items is a promise. just return, will\n        // call positionSubmenu after promise is completed.\n        return;\n    }\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'left top-5',\n            at: 'right top',\n            of: this,\n            collision: 'flipfit fit'\n        }).css('display', '');\n    } else {\n        // determine contextMenu position\n        const offset = {\n            top: -9,\n            left: this.outerWidth() - 5\n        };\n        $menu.css(offset);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/position.js","import defaults from '../defaults';\n\nexport default class ContextMenuEventHandler {\n    /**\n     * @constructs ContextMenuEventHandler\n     * @constructor\n     * @property {?JQuery} $currentTrigger\n     * @property {Object} hoveract\n     */\n    constructor() {\n        this.$currentTrigger = null;\n        this.hoveract = {};\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    abortevent(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    contextmenu(e) {\n        const $this = $(e.currentTarget);\n\n        // disable actual context-menu if we are using the right mouse button as the trigger\n        if (e.data.trigger === 'right') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // abort native-triggered events unless we're triggering on right click\n        if ((e.data.trigger !== 'right' && e.data.trigger !== 'demand') && e.originalEvent) {\n            return;\n        }\n\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\n        if (typeof e.mouseButton !== 'undefined' && e.data) {\n            if (!(e.data.trigger === 'left' && e.mouseButton === 0) && !(e.data.trigger === 'right' && e.mouseButton === 2)) {\n                // Mouse click is not valid.\n                return;\n            }\n        }\n\n        // abort event if menu is visible for this trigger\n        if ($this.hasClass('context-menu-active')) {\n            return;\n        }\n\n        if (!$this.hasClass('context-menu-disabled')) {\n            // theoretically need to fire a show event at <menu>\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n            // e.data.$menu.trigger(evt);\n\n            e.data.manager.handler.$currentTrigger = $this;\n            if (e.data.build) {\n                const built = e.data.build(e, this.$currentTrigger);\n                // abort if build() returned false\n                if (built === false) {\n                    return;\n                }\n\n                // dynamically build menu on invocation\n                e.data = $.extend(true, {}, defaults, e.data, built || {});\n\n                // abort if there are no items to display\n                if (!e.data.items || $.isEmptyObject(e.data.items)) {\n                    // Note: jQuery captures and ignores errors from event handlers\n                    if (window.console) {\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                    }\n\n                    throw new Error('No Items specified');\n                }\n\n                // backreference for custom command type creation\n                e.data.$trigger = e.data.manager.handler.$currentTrigger;\n\n                e.data.manager.operations.create(e, e.data);\n            }\n            let showMenu = false;\n            for (let item in e.data.items) {\n                if (e.data.items.hasOwnProperty(item)) {\n                    let visible;\n                    if ($.isFunction(e.data.items[item].visible)) {\n                        visible = e.data.items[item].visible.call($this, e, item, e.data, e.data);\n                    } else if (typeof e.data.items[item] !== 'undefined' && e.data.items[item].visible) {\n                        visible = e.data.items[item].visible === true;\n                    } else {\n                        visible = true;\n                    }\n                    if (visible) {\n                        showMenu = true;\n                    }\n                }\n            }\n            if (showMenu) {\n                // show menu\n                e.data.manager.operations.show.call($this, e, e.data, e.pageX, e.pageY);\n            }\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    click(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        $(this).trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e}));\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousedown(e) {\n        // register mouse down\n        const $this = $(this);\n\n        // hide any previous menus\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && !e.data.manager.handler.$currentTrigger.is($this)) {\n            e.data.manager.handler.$currentTrigger.data('contextMenu').$menu.trigger($.Event('contextmenu', {originalEvent: e}));\n        }\n\n        // activate on right click\n        if (e.button === 2) {\n            e.data.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseup(e) {\n        // show menu\n        const $this = $(this);\n        if ($this.data('contextMenuActive') && e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && e.data.manager.handler.$currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.data.manager.handler.$currentTrigger = $this;\n            $this.trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e}));\n        }\n\n        $this.removeData('contextMenuActive');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseenter(e) {\n        const $this = $(this);\n        const $related = $(e.relatedTarget);\n        const $document = $(document);\n\n        // abort if we're coming from a menu\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        // abort if a menu is shown\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length) {\n            return;\n        }\n\n        e.data.manager.handler.hoveract.pageX = e.pageX;\n        e.data.manager.handler.hoveract.pageY = e.pageY;\n        e.data.manager.handler.hoveract.data = e.data;\n        $document.on('mousemove.contextMenuShow', e.data.manager.handler.mousemove);\n        e.data.manager.handler.hoveract.timer = setTimeout(function () {\n            e.data.manager.handler.hoveract.timer = null;\n            $document.off('mousemove.contextMenuShow');\n            e.data.manager.handler.$currentTrigger = $this;\n            $this.trigger($.Event('contextmenu', {\n                data: e.data.manager.handler.hoveract.data,\n                pageX: e.data.manager.handler.hoveract.pageX,\n                pageY: e.data.manager.handler.hoveract.pageY\n            }));\n        }, e.data.delay);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousemove(e) {\n        e.data.manager.handler.hoveract.pageX = e.pageX;\n        e.data.manager.handler.hoveract.pageY = e.pageY;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseleave(e) {\n        // abort if we're leaving for a menu\n        const $related = $(e.relatedTarget);\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        try {\n            clearTimeout(e.data.manager.handler.hoveract.timer);\n        } catch (e) {\n\n        }\n\n        e.data.manager.handler.hoveract.timer = null;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    layerClick(e) {\n        let $this = $(this);\n        let root = $this.data('contextMenuRoot');\n        let button = e.button;\n        let x = e.pageX;\n        let y = e.pageY;\n        let target;\n        let offset;\n\n        e.preventDefault();\n\n        setTimeout(function () {\n            let $window = $(window);\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n            // find the element that would've been clicked, wasn't the layer in the way\n            if (document.elementFromPoint && root.$layer) {\n                root.$layer.hide();\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\n\n                // also need to try and focus this element if we're in a contenteditable area,\n                // as the layer will prevent the browser mouse action we want\n                if (target.isContentEditable) {\n                    const range = document.createRange();\n                    const sel = window.getSelection();\n                    range.selectNode(target);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n                $(target).trigger(e);\n                root.$layer.show();\n            }\n\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.$menu.trigger('contextmenu:hide', {originalEvent: e});\n                return;\n            }\n\n            if (root.reposition && triggerAction) {\n                if (document.elementFromPoint) {\n                    if (root.$trigger.is(target)) {\n                        root.position.call(root.$trigger, e, root, x, y);\n                        return;\n                    }\n                } else {\n                    offset = root.$trigger.offset();\n                    const $window = $(window);\n                    // while this looks kinda awful, it's the best way to avoid\n                    // unnecessarily calculating any positions\n                    offset.top += $window.scrollTop();\n                    if (offset.top <= e.pageY) {\n                        offset.left += $window.scrollLeft();\n                        if (offset.left <= e.pageX) {\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\n                            if (offset.bottom >= e.pageY) {\n                                offset.right = offset.left + root.$trigger.outerWidth();\n                                if (offset.right >= e.pageX) {\n                                    // reposition\n                                    root.position.call(root.$trigger, e, root, x, y);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (target && triggerAction) {\n                root.$trigger.one('contextmenu:hidden', function () {\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\n                });\n            }\n\n            if (root !== null && typeof root !== 'undefined' && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.$menu.trigger('contextmenu:hide', {originalEvent: e});\n            }\n        }, 50);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {ContextMenuItem} opt\n     */\n    keyStop(e, opt) {\n        if (!opt.isInput) {\n            e.preventDefault();\n        }\n\n        e.stopPropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    key(e) {\n        let opt = {};\n\n        // Only get the data from this.$currentTrigger if it exists\n        if (e.data.manager.handler.$currentTrigger) {\n            opt = e.data.manager.handler.$currentTrigger.data('contextMenu') || {};\n        }\n        // If the trigger happen on a element that are above the contextmenu do this\n        if (typeof opt.zIndex === 'undefined') {\n            opt.zIndex = 0;\n        }\n        const getZIndexOfTriggerTarget = function (target) {\n            if (target.style.zIndex !== '') {\n                return target.style.zIndex;\n            } else {\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.offsetParent);\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.parentElement);\n                }\n            }\n        };\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\n\n        // If targetZIndex is heigher then opt.zIndex dont progress any futher.\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\n        // and its above the contextmenu it wont steal keys events\n        if (opt.$menu && parseInt(targetZIndex, 10) > parseInt(opt.$menu.css('zIndex'), 10)) {\n            return;\n        }\n        switch (e.keyCode) {\n            case 9:\n            case 38: // up\n                e.data.manager.handler.keyStop(e, opt);\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\n                if (opt.isInput) {\n                    if (e.keyCode === 9 && e.shiftKey) {\n                        e.preventDefault();\n                        if (opt.$selected) {\n                            opt.$selected.find('input, textarea, select').blur();\n                        }\n                        if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                            opt.$menu.trigger('prevcommand', {originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 38 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else if (e.keyCode !== 9 || e.shiftKey) {\n                    if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                        opt.$menu.trigger('prevcommand', {originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n            // omitting break;\n            // case 9: // tab - reached through omitted break;\n            case 40: // down\n                e.data.manager.handler.keyStop(e, opt);\n                if (opt.isInput) {\n                    if (e.keyCode === 9) {\n                        e.preventDefault();\n                        if (opt.$selected) {\n                            opt.$selected.find('input, textarea, select').blur();\n                        }\n                        if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                            opt.$menu.trigger('nextcommand', {originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 40 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else {\n                    if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                        opt.$menu.trigger('nextcommand', {originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n\n            case 37: // left\n                e.data.manager.handler.keyStop(e, opt);\n                if (opt.isInput || !opt.$selected || !opt.$selected.length) {\n                    break;\n                }\n\n                if (!opt.$selected.parent().hasClass('context-menu-root')) {\n                    const $parent = opt.$selected.parent().parent();\n                    opt.$selected.trigger('contextmenu:blur', {originalEvent: e});\n                    opt.$selected = $parent;\n                    return;\n                }\n                break;\n\n            case 39: // right\n                e.data.manager.handler.keyStop(e, opt);\n                if (opt.isInput || !opt.$selected || !opt.$selected.length) {\n                    break;\n                }\n\n                const itemdata = opt.$selected.data('contextMenu') || {};\n                if (itemdata.$menu && opt.$selected.hasClass('context-menu-submenu')) {\n                    opt.$selected = null;\n                    itemdata.$selected = null;\n                    itemdata.$menu.trigger('nextcommand', {originalEvent: e});\n                    return;\n                }\n                break;\n\n            case 35: // end\n            case 36: // home\n                if (opt.$selected && opt.$selected.find('input, textarea, select').length) {\n                    break;\n                } else {\n                    ((opt.$selected && opt.$selected.parent()) || opt.$menu)\n                        .children(':not(.' + opt.classNames.disabled + ', .' + opt.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\n                        .trigger('contextmenu:focus', {originalEvent: e});\n                    e.preventDefault();\n                    break;\n                }\n            case 13: // enter\n                e.data.manager.handler.keyStop(e, opt);\n                if (opt.isInput) {\n                    if (opt.$selected && !opt.$selected.is('textarea, select')) {\n                        e.preventDefault();\n                        return;\n                    }\n                    break;\n                }\n                if (typeof opt.$selected !== 'undefined' && opt.$selected !== null) {\n                    opt.$selected.trigger('mouseup', {originalEvent: e});\n                }\n                return;\n            case 32: // space\n            case 33: // page up\n            case 34: // page down\n                // prevent browser from scrolling down while menu is visible\n                e.data.manager.handler.keyStop(e, opt);\n                return;\n\n            case 27: // esc\n                e.data.manager.handler.keyStop(e, opt);\n                if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                    opt.$menu.trigger('contextmenu:hide', {originalEvent: e});\n                }\n                return;\n\n            default: // 0-9, a-z\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                if (opt.accesskeys && opt.accesskeys[k]) {\n                    // according to the specs accesskeys must be invoked immediately\n                    opt.accesskeys[k].$node.trigger(opt.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup', {originalEvent: e});\n                    return;\n                }\n                break;\n        }\n        // pass event to selected item,\n        // stop propagation to avoid endless recursion\n        e.stopPropagation();\n        if (typeof opt.$selected !== 'undefined' && opt.$selected !== null) {\n            opt.$selected.trigger(e);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    prevItem(e) {\n        e.stopPropagation();\n        let opt = $(this).data('contextMenu') || {};\n        const root = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (opt.$selected) {\n            const $s = opt.$selected;\n            opt = opt.$selected.parent().data('contextMenu') || {};\n            opt.$selected = $s;\n        }\n\n        const $children = opt.$menu.children();\n        let $prev = !opt.$selected || !opt.$selected.prev().length ? $children.last() : opt.$selected.prev();\n        const $round = $prev;\n\n        // skip disabled or hidden elements\n        while ($prev.hasClass(root.classNames.disabled) || $prev.hasClass(root.classNames.notSelectable) || $prev.is(':hidden')) {\n            if ($prev.prev().length) {\n                $prev = $prev.prev();\n            } else {\n                $prev = $children.last();\n            }\n\n            if ($prev.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (opt.$selected) {\n            root.manager.handler.itemMouseleave.call(opt.$selected.get(0), e);\n        }\n\n        // activate next\n        root.manager.handler.itemMouseenter.call($prev.get(0), e);\n\n        // focus input\n        const $input = $prev.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    nextItem(e) {\n        e.stopPropagation();\n        let opt = $(this).data('contextMenu') || {};\n        let root = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (opt.$selected) {\n            const $s = opt.$selected;\n            opt = opt.$selected.parent().data('contextMenu') || {};\n            opt.$selected = $s;\n        }\n\n        const $children = opt.$menu.children();\n        let $next = !opt.$selected || !opt.$selected.next().length ? $children.first() : opt.$selected.next();\n        const $round = $next;\n\n        // skip disabled\n        while ($next.hasClass(root.classNames.disabled) || $next.hasClass(root.classNames.notSelectable) || $next.is(':hidden')) {\n            if ($next.next().length) {\n                $next = $next.next();\n            } else {\n                $next = $children.first();\n            }\n            if ($next.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (opt.$selected) {\n            root.manager.handler.itemMouseleave.call(opt.$selected.get(0), e);\n        }\n\n        // activate next\n        root.manager.handler.itemMouseenter.call($next.get(0), e);\n\n        // focus input\n        const $input = $next.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let opt = data.contextMenu;\n        let root = data.contextMenuRoot;\n\n        root.$selected = opt.$selected = $this;\n        root.isInput = opt.isInput = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let opt = data.contextMenu;\n        let root = data.contextMenuRoot;\n\n        root.isInput = opt.isInput = false;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseenter(e) {\n        let root = $(this).data().contextMenuRoot;\n        root.hovering = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseleave(e) {\n        let root = $(this).data().contextMenuRoot;\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\n            root.hovering = false;\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseenter(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let opt = data.contextMenu;\n        let root = data.contextMenuRoot;\n\n        root.hovering = true;\n\n        // abort if we're re-entering\n        if (e && root.$layer && root.$layer.is(e.relatedTarget)) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // make sure only one item is selected\n        (opt.$menu ? opt : root).$menu\n            .children('.' + root.classNames.hover).trigger('contextmenu:blur')\n            .children('.hover').trigger('contextmenu:blur', {originalEvent: e});\n\n        if ($this.hasClass(root.classNames.disabled) || $this.hasClass(root.classNames.notSelectable)) {\n            opt.$selected = null;\n            return;\n        }\n\n        $this.trigger('contextmenu:focus', {originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseleave(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let opt = data.contextMenu;\n        let root = data.contextMenuRoot;\n\n        if (root !== opt && root.$layer && root.$layer.is(e.relatedTarget)) {\n            if (typeof root.$selected !== 'undefined' && root.$selected !== null) {\n                root.$selected.trigger('contextmenu:blur', {originalEvent: e});\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            root.$selected = opt.$selected = opt.$node;\n            return;\n        }\n\n        if (opt && opt.$menu && opt.$menu.hasClass(root.classNames.visible)) {\n            return;\n        }\n\n        $this.trigger('contextmenu:blur');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemClick(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let opt = data.contextMenu;\n        let root = data.contextMenuRoot;\n        let key = data.contextMenuKey;\n        let callback;\n\n        // abort if the key is unknown or disabled or is a menu\n        if (!opt.items[key] || $this.is('.' + root.classNames.disabled + ', .context-menu-separator, .' + root.classNames.notSelectable) || ($this.is('.context-menu-submenu') && root.selectableSubMenu === false)) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if ($.isFunction(opt.callbacks[key]) && Object.prototype.hasOwnProperty.call(opt.callbacks, key)) {\n            // item-specific callback\n            callback = opt.callbacks[key];\n        } else if ($.isFunction(root.callback)) {\n            // default callback\n            callback = root.callback;\n        } else {\n            // no callback, no action\n            return;\n        }\n\n        // hide menu if callback doesn't stop that\n        if (callback.call(root.$trigger, e, key, opt, root) !== false) {\n            root.$menu.trigger('contextmenu:hide');\n        } else if (root.$menu.parent().length) {\n            root.manager.operations.update.call(root.$trigger, e, root);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    inputClick(e) {\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {Object} data\n     */\n    hideMenu(e, data) {\n        const root = $(this).data('contextMenuRoot');\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusItem(e) {\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const opt = data.contextMenu;\n        const root = data.contextMenuRoot;\n\n        if ($this.hasClass(root.classNames.disabled) || $this.hasClass(root.classNames.notSelectable)) {\n            return;\n        }\n\n        $this\n            .addClass([root.classNames.hover, root.classNames.visible].join(' '))\n            // select other items and included items\n            .parent().find('.context-menu-item').not($this)\n            .removeClass(root.classNames.visible)\n            .filter('.' + root.classNames.hover)\n            .trigger('contextmenu:blur');\n\n        // remember selected\n        opt.$selected = root.$selected = $this;\n\n        if (opt && opt.$node && opt.$node.hasClass('context-menu-submenu')) {\n            opt.$node.addClass(root.classNames.hover);\n        }\n\n        // position sub-menu - do after show so dumb $.ui.position can keep up\n        if (opt.$node) {\n            root.positionSubmenu.call(opt.$node, e, opt.$menu);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurItem(e) {\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const opt = data.contextMenu;\n        const root = data.contextMenuRoot;\n\n        if (root.autoHide) { // for tablets and touch screens this needs to remain\n            $this.removeClass(root.classNames.visible);\n        }\n        $this.removeClass(root.classNames.hover);\n        opt.$selected = null;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/ContextMenuEventHandler.js","import {zindex, splitAccesskey} from '../helpers';\nimport ContextMenuItemTypes from './ContextMenuItemTypes';\n\nexport default class ContextMenuOperations {\n    /**\n     * @constructor\n     * @constructs ContextMenuOperations\n     */\n    constructor() {\n        return this;\n    }\n\n    /**\n     * Show the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @param {number} x\n     * @param {number} y\n     */\n    show(e, opt, x, y) {\n        const $trigger = $(this);\n        const css = {};\n\n        // hide any open menus\n        $('#context-menu-layer').trigger('mousedown');\n\n        // backreference for callbacks\n        opt.$trigger = $trigger;\n\n        // show event\n        if (opt.events.show.call($trigger, opt) === false) {\n            opt.manager.handler.$currentTrigger = null;\n            return;\n        }\n\n        // create or update context menu\n        opt.manager.operations.update.call($trigger, e, opt);\n\n        // position menu\n        opt.position.call($trigger, e, opt, x, y);\n\n        // make sure we're in front\n        if (opt.zIndex) {\n            let additionalZValue = opt.zIndex;\n            // If opt.zIndex is a function, call the function to get the right zIndex.\n            if (typeof opt.zIndex === 'function') {\n                additionalZValue = opt.zIndex.call($trigger, opt);\n            }\n            css.zIndex = zindex($trigger) + additionalZValue;\n        }\n\n        // add layer\n        opt.manager.operations.layer.call(opt.$menu, e, opt, css.zIndex);\n\n        // adjust sub-menu zIndexes\n        opt.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n        // position and show context menu\n        opt.$menu.css(css)[opt.animation.show](opt.animation.duration, () => {\n            $trigger.trigger('contextmenu:visible');\n\n            opt.manager.operations.activated(e, opt);\n            opt.events.activated(e, opt);\n        });\n        // make options available and set state\n        $trigger\n            .data('contextMenu', opt)\n            .addClass('context-menu-active');\n\n        // register key handler\n        $(document).off('keydown.contextMenu').on('keydown.contextMenu', opt, opt.manager.handler.key);\n        // register autoHide handler\n        if (opt.autoHide) {\n            // mouse position handler\n            $(document).on('mousemove.contextMenuAutoHide', function (e) {\n                // need to capture the offset on mousemove,\n                // since the page might've been scrolled since activation\n                const pos = $trigger.offset();\n                pos.right = pos.left + $trigger.outerWidth();\n                pos.bottom = pos.top + $trigger.outerHeight();\n\n                if (opt.$layer && !opt.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\n                    setTimeout(function () {\n                        if (!opt.hovering && opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                            opt.$menu.trigger('contextmenu:hide');\n                        }\n                    }, 50);\n                }\n            });\n        }\n    }\n\n    /**\n     * Hide the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @param {boolean} force\n     */\n    hide(e, opt, force) {\n        const $trigger = $(this);\n        if (typeof opt !== 'object' && $trigger.data('contextMenu')) {\n            opt = $trigger.data('contextMenu');\n        } else if (typeof opt !== 'object') {\n            return;\n        }\n\n        // hide event\n        if (!force && opt.events && opt.events.hide.call($trigger, e, opt) === false) {\n            return;\n        }\n\n        // remove options and revert state\n        $trigger\n            .removeData('contextMenu')\n            .removeClass('context-menu-active');\n\n        if (opt.$layer) {\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\n            setTimeout((function ($layer) {\n                return function () {\n                    $layer.remove();\n                };\n            })(opt.$layer), 10);\n\n            try {\n                delete opt.$layer;\n            } catch (e) {\n                opt.$layer = null;\n            }\n        }\n\n        // remove handle\n        opt.manager.handler.$currentTrigger = null;\n        // remove selected\n        opt.$menu.find('.' + opt.classNames.hover).trigger('contextmenu:blur');\n        opt.$selected = null;\n        // collapse all submenus\n        opt.$menu.find('.' + opt.classNames.visible).removeClass(opt.classNames.visible);\n        // unregister key and mouse handlers\n        $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');\n        // hide menu\n        if (opt.$menu) {\n            opt.$menu[opt.animation.hide](opt.animation.duration, function () {\n                // tear down dynamically built menu after animation is completed.\n                if (opt.build) {\n                    opt.$menu.remove();\n                    Object.keys(opt).forEach((key) => {\n                        switch (key) {\n                            case 'ns':\n                            case 'selector':\n                            case 'build':\n                            case 'trigger':\n                                return true;\n\n                            default:\n                                opt[key] = undefined;\n                                try {\n                                    delete opt[key];\n                                } catch (e) {\n                                }\n                                return true;\n                        }\n                    });\n                }\n\n                setTimeout(function () {\n                    $trigger.trigger('contextmenu:hidden');\n                }, 10);\n            });\n        }\n    }\n\n    /**\n     * Create a menu based on the options. Also created submenus.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @param {ContextMenuData} root\n     */\n    create(e, opt, root) {\n        if (typeof root === 'undefined') {\n            root = opt;\n        }\n\n        // create contextMenu\n        opt.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(opt.className || '').data({\n            'contextMenu': opt,\n            'contextMenuRoot': root\n        });\n\n        $.each(['callbacks', 'commands', 'inputs'], function (i, k) {\n            opt[k] = {};\n            if (!root[k]) {\n                root[k] = {};\n            }\n        });\n\n        if (!root.accesskeys) {\n            root.accesskeys = {};\n        }\n\n        function createNameNode(item) {\n            const $name = $('<span></span>');\n            if (item._accesskey) {\n                if (item._beforeAccesskey) {\n                    $name.append(document.createTextNode(item._beforeAccesskey));\n                }\n                $('<span></span>')\n                    .addClass('context-menu-accesskey')\n                    .text(item._accesskey)\n                    .appendTo($name);\n                if (item._afterAccesskey) {\n                    $name.append(document.createTextNode(item._afterAccesskey));\n                }\n            } else {\n                if (item.isHtmlName) {\n                    // restrict use with access keys\n                    if (typeof item.accesskey !== 'undefined') {\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\n                    }\n                    $name.html(item.name);\n                } else {\n                    $name.text(item.name);\n                }\n            }\n            return $name;\n        }\n\n        // create contextMenu items\n\n        $.each(opt.items, function (key, item) {\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\n            let $label = null;\n            let $input = null;\n\n            // iOS needs to see a click-event bound to an element to actually\n            // have the TouchEvents infrastructure trigger the click event\n            $t.on('click', $.noop);\n\n            // Make old school string separator a real item so checks wont be\n            // akward later.\n            // And normalize 'cm_separator' into 'cm_separator'.\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\n                item = {type: ContextMenuItemTypes.separator};\n            }\n\n            item.$node = $t.data({\n                'contextMenu': opt,\n                'contextMenuRoot': root,\n                'contextMenuKey': key\n            });\n\n            // register accesskey\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n            if (typeof item.accesskey !== 'undefined') {\n                const aks = splitAccesskey(item.accesskey);\n                for (let i = 0, ak; ak = aks[i]; i++) {\n                    if (!root.accesskeys[ak]) {\n                        root.accesskeys[ak] = item;\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\n                        if (matched) {\n                            item._beforeAccesskey = matched[1];\n                            item._accesskey = matched[2];\n                            item._afterAccesskey = matched[3];\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (item.type && root.types[item.type]) {\n                // run custom type handler\n                root.types[item.type].call($t, item, opt, root);\n                // register commands\n                $.each([opt, root], function (i, k) {\n                    k.commands[key] = item;\n                    // Overwrite only if undefined or the item is appended to the root. This so it\n                    // doesn't overwrite callbacks of root elements if the name is the same.\n                    if ($.isFunction(item.callback) && (typeof k.callbacks[key] === 'undefined' || typeof opt.type === 'undefined')) {\n                        k.callbacks[key] = item.callback;\n                    }\n                });\n            } else {\n                // add label for input\n                if (item.type === ContextMenuItemTypes.separator) {\n                    $t.addClass('context-menu-separator ' + root.classNames.notSelectable);\n                } else if (item.type === ContextMenuItemTypes.html) {\n                    $t.addClass('context-menu-html ' + root.classNames.notSelectable);\n                } else if (item.type && item.type !== ContextMenuItemTypes.submenu) {\n                    $label = $('<label></label>').appendTo($t);\n                    createNameNode(item).appendTo($label);\n\n                    $t.addClass('context-menu-input');\n                    opt.hasTypes = true;\n                    $.each([opt, root], function (i, k) {\n                        k.commands[key] = item;\n                        k.inputs[key] = item;\n                    });\n                } else if (item.items) {\n                    item.type = ContextMenuItemTypes.submenu;\n                }\n\n                switch (item.type) {\n                    case ContextMenuItemTypes.separator:\n                        break;\n\n                    case ContextMenuItemTypes.text:\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.textarea:\n                        $input = $('<textarea name=\"\"></textarea>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n\n                        if (item.height) {\n                            $input.height(item.height);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.radio:\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + item.radio)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        $input = $('<select name=\"\"></select>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .appendTo($label);\n                        if (item.options) {\n                            $.each(item.options, function (value, text) {\n                                $('<option></option>').val(value).text(text).appendTo($input);\n                            });\n                            $input.val(item.selected);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.submenu:\n                        createNameNode(item).appendTo($t);\n                        item.appendTo = item.$node;\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\n                        item.callback = null;\n\n                        // If item contains items, and this is a promise, we should create it later\n                        // check if subitems is of type promise. If it is a promise we need to create\n                        // it later, after promise has been resolved.\n                        if (typeof item.items.then === 'function') {\n                            // probably a promise, process it, when completed it will create the sub menu's.\n                            root.manager.operations.processPromises(e, item, root, item.items);\n                        } else {\n                            // normal submenu.\n                            root.manager.operations.create(e, item, root);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.html:\n                        $(item.html).appendTo($t);\n                        break;\n\n                    default:\n                        $.each([opt, root], function (i, k) {\n                            k.commands[key] = item;\n                            // Overwrite only if undefined or the item is appended to the root. This so it\n                            // doesn't overwrite callbacks of root elements if the name is the same.\n                            if ($.isFunction(item.callback) && (typeof k.callbacks[key] === 'undefined' || typeof opt.type === 'undefined')) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                        createNameNode(item).appendTo($t);\n                        break;\n                }\n\n                // disable key listener in <input>\n                if (item.type && item.type !== ContextMenuItemTypes.submenu && item.type !== ContextMenuItemTypes.html && item.type !== ContextMenuItemTypes.separator) {\n                    $input\n                        .on('focus', root.manager.handler.focusInput)\n                        .on('blur', root.manager.handler.blurInput);\n\n                    if (item.events) {\n                        $input.on(item.events, opt);\n                    }\n                }\n\n                // add icons\n                if (item.icon) {\n                    if ($.isFunction(item.icon)) {\n                        item._icon = item.icon.call(this, e, $t, key, item, opt, root);\n                    } else {\n                        if (typeof (item.icon) === 'string' && item.icon.substring(0, 3) === 'fa-') {\n                            // to enable font awesome\n                            item._icon = root.classNames.icon + ' ' + root.classNames.icon + '--fa fa ' + item.icon;\n                        } else {\n                            item._icon = root.classNames.icon + ' ' + root.classNames.icon + '-' + item.icon;\n                        }\n                    }\n                    $t.addClass(item._icon);\n                }\n            }\n\n            // cache contained elements\n            item.$input = $input;\n            item.$label = $label;\n\n            // attach item to menu\n            $t.appendTo(opt.$menu);\n\n            // Disable text selection\n            if (!opt.hasTypes && $.support.eventSelectstart) {\n                // browsers support user-select: none,\n                // IE has a special event for text-selection\n                // browsers supporting neither will not be preventing text-selection\n                $t.on('selectstart.disableTextSelect', opt.manager.handler.abortevent);\n            }\n        });\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n        if (!opt.$node) {\n            opt.$menu.css('display', 'none').addClass('context-menu-root');\n        }\n        opt.$menu.appendTo(opt.appendTo || document.body);\n    }\n\n    /**\n     * Resize the menu to its content.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {ContextMenuEvent} e\n     * @param {JQuery} $menu\n     * @param {boolean?} nested\n     */\n    resize(e, $menu, nested) {\n        let domMenu;\n        // determine widths of submenus, as CSS won't grow them automatically\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n        // kinda sucks hard...\n\n        // determine width of absolutely positioned element\n        $menu.css({position: 'absolute', display: 'block'});\n        // don't apply yet, because that would break nested elements' widths\n        $menu.data('width',\n            (domMenu = $menu.get(0)).getBoundingClientRect\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\n        // reset styles so they allow nested elements to grow/shrink naturally\n        $menu.css({\n            position: 'static',\n            minWidth: '0px',\n            maxWidth: '100000px'\n        });\n        // identify width of nested menus\n        $menu.find('> li > ul').each((index, element) => {\n            e.data.manager.operations.resize(e, $(element), true);\n        });\n        // reset and apply changes in the end because nested\n        // elements' widths wouldn't be calculatable otherwise\n        if (!nested) {\n            $menu.find('ul').addBack().css({\n                position: '',\n                display: '',\n                minWidth: '',\n                maxWidth: ''\n            }).outerWidth(function () {\n                return $(this).data('width');\n            });\n        }\n    }\n\n    /**\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData?} opt\n     * @param {ContextMenuData?} root\n     */\n    update(e, opt, root) {\n        const $trigger = this;\n        if (typeof root === 'undefined') {\n            root = opt;\n            root.manager.operations.resize(e, opt.$menu);\n        }\n        // re-check disabled for each item\n        opt.$menu.children().each(function (index, element) {\n            let $item = $(element);\n            let key = $item.data('contextMenuKey');\n            let item = opt.items[key];\n\n            let disabled = ($.isFunction(item.disabled) && item.disabled.call($trigger, e, key, opt, root)) || item.disabled === true;\n            let visible;\n\n            if ($.isFunction(item.visible)) {\n                visible = item.visible.call($trigger, e, key, opt, root);\n            } else if (typeof item.visible !== 'undefined') {\n                visible = item.visible === true;\n            } else {\n                visible = true;\n            }\n            $item[visible ? 'show' : 'hide']();\n\n            // dis- / enable item\n            $item[disabled ? 'addClass' : 'removeClass'](root.classNames.disabled);\n\n            if ($.isFunction(item.icon)) {\n                $item.removeClass(item._icon);\n                item._icon = item.icon.call(this, $trigger, $item, key, item);\n                $item.addClass(item._icon);\n            }\n\n            if (item.type) {\n                // dis- / enable input elements\n                $item.find('input, select, textarea').prop('disabled', disabled);\n\n                // update input states\n                switch (item.type) {\n                    case ContextMenuItemTypes.text:\n                    case ContextMenuItemTypes.textarea:\n                        item.$input.val(item.value || '');\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                    case ContextMenuItemTypes.radio:\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\n                        break;\n                }\n            }\n\n            if (item.$menu) {\n                // update sub-menu\n                root.manager.operations.update.call($trigger, e, item, root);\n            }\n        });\n    }\n\n    /**\n     * Create the overlay layer so we can capture the click outside the menu and close it.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @param {number} zIndex\n     * @returns {jQuery}\n     */\n    layer(e, opt, zIndex) {\n        const $window = $(window);\n\n        // add transparent layer for click area\n        // filter and background for Internet Explorer, Issue #23\n        const $layer = opt.$layer = $('<div id=\"context-menu-layer\"></div>')\n            .css({\n                height: $window.height(),\n                width: $window.width(),\n                display: 'block',\n                position: 'fixed',\n                'z-index': zIndex,\n                top: 0,\n                left: 0,\n                opacity: 0,\n                filter: 'alpha(opacity=0)',\n                'background-color': '#000'\n            })\n            .data('contextMenuRoot', opt)\n            .insertBefore(this)\n            .on('contextmenu', opt.manager.handler.abortevent)\n            .on('mousedown', opt.manager.handler.layerClick);\n\n        // IE6 doesn't know position:fixed;\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\n            $layer.css({\n                'position': 'absolute',\n                'height': $(document).height()\n            });\n        }\n\n        return $layer;\n    }\n\n    /**\n     * Process submenu promise.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @param {ContextMenuData} root\n     * @param {Promise} promise\n     */\n    processPromises(e, opt, root, promise) {\n        // Start\n        opt.$node.addClass(root.classNames.iconLoadingClass);\n\n        function finishPromiseProcess(opt, root, items) {\n            if (typeof root.$menu === 'undefined' || !root.$menu.is(':visible')) {\n                return;\n            }\n            opt.$node.removeClass(root.classNames.iconLoadingClass);\n            opt.items = items;\n            root.manager.operations.create(e, opt, root); // Create submenu\n            root.manager.operations.update(e, opt, root); // Correctly update position if user is already hovered over menu item\n            root.positionSubmenu.call(opt.$node, e, opt.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\n        }\n\n        function errorPromise(opt, root, errorItem) {\n            // User called promise.reject() with an error item, if not, provide own error item.\n            if (typeof errorItem === 'undefined') {\n                errorItem = {\n                    'error': {\n                        name: 'No items and no error item',\n                        icon: 'context-menu-icon context-menu-icon-quit'\n                    }\n                };\n                if (window.console) {\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\n                }\n            } else if (typeof errorItem === 'string') {\n                errorItem = {'error': {name: errorItem}};\n            }\n            finishPromiseProcess(opt, root, errorItem);\n        }\n\n        function completedPromise(opt, root, items) {\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\n            // be used to create the rest of the context menu.\n            if (typeof items === 'undefined') {\n                // Null result, dev should have checked\n                errorPromise(undefined); // own error object\n            }\n            finishPromiseProcess(opt, root, items);\n        }\n\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the opt\n        // and root to avoid scope problems\n        promise.then(completedPromise.bind(this, opt, root), errorPromise.bind(this, opt, root));\n    }\n\n    /**\n     * Operation that will run after contextMenu showed on screen.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @return {undefined}\n     */\n    activated(e, opt) {\n        const $menu = opt.$menu;\n        const $menuOffset = $menu.offset();\n        const winHeight = $(window).height();\n        const winScrollTop = $(window).scrollTop();\n        const menuHeight = $menu.height();\n        if (menuHeight > winHeight) {\n            $menu.css({\n                'height': winHeight + 'px',\n                'overflow-x': 'hidden',\n                'overflow-y': 'auto',\n                'top': winScrollTop + 'px'\n            });\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\n            $menu.css({\n                'top': '0px'\n            });\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/ContextMenuOperations.js","/**\r\n * Possible ContextMenuItem types\r\n * @enum string\r\n */\r\nconst ContextMenuItemTypes = {\r\n    /**\r\n     * The command is a simple clickable item.\r\n     */\r\n    simple: '',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    text: 'text',\r\n\r\n    /**\r\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    textarea: 'textarea',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    checkbox: 'checkbox',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    radio: 'radio',\r\n\r\n    /**\r\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    select: 'select',\r\n\r\n    /**\r\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\r\n     */\r\n    html: 'html',\r\n\r\n    /**\r\n     * Internal property, used internally when the type is set to a string.\r\n     */\r\n    separator: 'cm_separator',\r\n\r\n    /**\r\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\r\n     */\r\n    submenu: 'sub'\r\n};\r\n\r\nexport default ContextMenuItemTypes;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/ContextMenuItemTypes.js","/**\n * Get the input label for the given node.\n *\n * @param {HTMLElement} node - Html element\n * @returns {string|JQuery|jQuery} - Input label element\n */\nexport function inputLabel(node) {\n    return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n}\n\n/**\n * Helper function for building a menu from a HTML menu element.\n *\n * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\n * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\n * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\n * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\n */\nexport function html5builder(items, $children, counter) {\n    if (!counter) {\n        counter = 0;\n    }\n\n    $children.each(function () {\n        let $node = $(this);\n        let node = this;\n        let nodeName = this.nodeName.toLowerCase();\n        let label;\n        let item;\n\n        // extract <label><input>\n        if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n            label = $node.text();\n            $node = $node.children().first();\n            node = $node.get(0);\n            nodeName = node.nodeName.toLowerCase();\n        }\n\n        /*\n         * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n         * Not being the sadistic kind, $.contextMenu only accepts:\n         * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n         * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n         */\n\n        // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n        switch (nodeName) {\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n            case 'menu':\n                item = {name: $node.attr('label'), items: {}};\n                counter = html5builder(item.items, $node.children(), counter);\n                break;\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n            case 'a':\n            case 'button':\n                item = {\n                    name: $node.text(),\n                    disabled: !!$node.attr('disabled'),\n                    callback: (function () {\n                        return function () {\n                            $node.get(0).click();\n                        };\n                    })()\n                };\n                break;\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n            case 'menuitem':\n            case 'command':\n                switch ($node.attr('type')) {\n                    case undefined:\n                    case 'command':\n                    case 'menuitem':\n                        item = {\n                            name: $node.attr('label'),\n                            disabled: !!$node.attr('disabled'),\n                            icon: $node.attr('icon'),\n                            callback: (function () {\n                                return function () {\n                                    $node.get(0).click();\n                                };\n                            })()\n                        };\n                        break;\n\n                    case 'checkbox':\n                        item = {\n                            type: 'checkbox',\n                            disabled: !!$node.attr('disabled'),\n                            name: $node.attr('label'),\n                            selected: !!$node.attr('checked')\n                        };\n                        break;\n                    case 'radio':\n                        item = {\n                            type: 'radio',\n                            disabled: !!$node.attr('disabled'),\n                            name: $node.attr('label'),\n                            radio: $node.attr('radiogroup'),\n                            value: $node.attr('id'),\n                            selected: !!$node.attr('checked')\n                        };\n                        break;\n\n                    default:\n                        item = undefined;\n                }\n                break;\n\n            case 'hr':\n                item = '-------';\n                break;\n\n            case 'input':\n                switch ($node.attr('type')) {\n                    case 'text':\n                        item = {\n                            type: 'text',\n                            name: label || inputLabel(node),\n                            disabled: !!$node.attr('disabled'),\n                            value: $node.val()\n                        };\n                        break;\n\n                    case 'checkbox':\n                        item = {\n                            type: 'checkbox',\n                            name: label || inputLabel(node),\n                            disabled: !!$node.attr('disabled'),\n                            selected: !!$node.attr('checked')\n                        };\n                        break;\n\n                    case 'radio':\n                        item = {\n                            type: 'radio',\n                            name: label || inputLabel(node),\n                            disabled: !!$node.attr('disabled'),\n                            radio: !!$node.attr('name'),\n                            value: $node.val(),\n                            selected: !!$node.attr('checked')\n                        };\n                        break;\n\n                    default:\n                        item = undefined;\n                        break;\n                }\n                break;\n\n            case 'select':\n                item = {\n                    type: 'select',\n                    name: label || inputLabel(node),\n                    disabled: !!$node.attr('disabled'),\n                    selected: $node.val(),\n                    options: {}\n                };\n                $node.children().each(function () {\n                    item.options[this.value] = $(this).text();\n                });\n                break;\n\n            case 'textarea':\n                item = {\n                    type: 'textarea',\n                    name: label || inputLabel(node),\n                    disabled: !!$node.attr('disabled'),\n                    value: $node.val()\n                };\n                break;\n\n            case 'label':\n                break;\n\n            default:\n                item = {type: 'html', html: $node.clone(true)};\n                break;\n        }\n\n        if (item) {\n            counter++;\n            items['key' + counter] = item;\n        }\n    });\n\n    return counter;\n}\n\n/**\n * Helper function to build ContextMenuItems from an html5 menu element.\n *\n * @param {JQuery|string} element - Menu element to generate the menu from.\n * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\n */\nexport default function fromMenu(element) {\n    const $this = $(element);\n    const items = {};\n\n    html5builder(items, $this.children());\n\n    return items;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/html5builder.js","/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\n *\n * @instance\n * @function external:jQuery.fn.contextmenu\n *\n * @param {(string|Object)} operation\n * @returns {JQuery}\n */\nexport default function (operation) {\n    const $t = this;\n    const $o = operation;\n    if ($t.length > 0) { // this is not a build on demand menu\n        if (typeof operation === 'undefined') {\n            $t.first().trigger('contextmenu');\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\n            $t.first().trigger($.Event('contextmenu', {\n                pageX: operation.x,\n                pageY: operation.y,\n                mouseButton: operation.button\n            }));\n        } else if (operation === 'hide') {\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n            if ($menu) {\n                $menu.trigger('contextmenu:hide');\n            }\n        } else if (operation === 'destroy') {\n            $.contextMenu('destroy', {context: this});\n        } else if ($.isPlainObject(operation)) {\n            operation.context = this;\n            $.contextMenu('create', operation);\n        } else if (operation) {\n            $t.removeClass('context-menu-disabled');\n        } else if (!operation) {\n            $t.addClass('context-menu-disabled');\n        }\n    } else {\n        // eslint-disable-next-line no-undef\n        $.each($.contextMenu.menus, function () {\n            if (this.selector === $t.selector) {\n                $o.data = this;\n\n                $.extend($o.data, {trigger: 'demand'});\n            }\n        });\n\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\n    }\n\n    return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/jqueryContextMenuFunction.js"],"sourceRoot":""}