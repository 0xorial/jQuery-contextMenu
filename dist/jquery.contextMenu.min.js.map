{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d1c1cb66782f725870bd","webpack:///./src/js/defaults/index.js","webpack:///./src/js/contextmenu.js","webpack:///./src/js/classes/ContextMenuManager.js","webpack:///./src/js/classes/ContextMenuOperations.js","webpack:///./src/js/classes/ContextMenuHelper.js","webpack:///./src/js/classes/ContextMenuItemTypes.js","webpack:///./src/js/defaults/position.js","webpack:///./src/js/classes/ContextMenuHtml5Builder.js","webpack:///./src/js/classes/ContextMenuEventHandler.js","webpack:///./src/js/jquery/contextMenuFunction.js"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_position","selector","appendTo","trigger","autoHide","delay","reposition","hideOnSecondTrigger","selectableSubMenu","className","classNames","hover","disabled","visible","notSelectable","icon","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","iconLoadingClass","zIndex","animation","duration","show","hide","events","$","noop","activated","callback","items","build","types","determinePosition","position","positionSubmenu","manager","_ContextMenuManager2","default","contextMenu","operation","options","execute","getInputValues","opt","data","setInputValues","fromMenu","element","html5builder","defaults","handle","handler","operations","menus","namespaces","fn","_contextMenuFunction2","ContextMenuManager","_classCallCheck","_ContextMenuHtml5Builder2","_defaults2","_ContextMenuEventHandler2","_ContextMenuOperations2","initialized","counter","_this","normalizedArguments","normalizeArguments","extend","$document","document","$context","_hasContext","context","length","first","is","update","menu","Error","match","isEmptyObject","ns","itemClick","itemClickEvent","contextMenuItemObj","contextmenu:focus.contextMenu","focusItem","contextmenu:blur.contextMenu","blurItem","contextmenu.contextMenu","abortevent","mouseenter.contextMenu","itemMouseenter","mouseleave.contextMenu","itemMouseleave","on","contextmenu:hide.contextMenu","hideMenu","prevcommand.contextMenu","prevItem","nextcommand.contextMenu","nextItem","menuMouseenter","menuMouseleave","inputClick","contextmenu","mouseenter","mouseleave","click","create","$visibleMenu","keys","forEach","filter","contextMenuRoot","$trigger","find","force","$menu","remove","off","support","htmlCommand","htmlMenuitem","each","id","css","inputs","key","item","type","value","selected","radio","$input","val","prop","ContextMenuOperations","e","x","y","additionalZValue","_ContextMenuHelper2","zindex","layer","addClass","pos","offset","right","left","outerWidth","bottom","top","outerHeight","$layer","hovering","pageX","pageY","setTimeout","$currentTrigger","_typeof","removeData","removeClass","$selected","undefined","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","text","_afterAccesskey","isHtmlName","accesskey","html","k","accesskeys","$t","$label","_ContextMenuItemTypes2","separator","$node","contextMenuKey","ak","aks","splitAccesskey","matched","RegExp","commands","isFunction","callbacks","submenu","hasTypes","attr","textarea","height","checkbox","prependTo","select","then","processPromises","focusInput","blurInput","_icon","substring","eventSelectstart","body","nested","domMenu","display","getBoundingClientRect","Math","ceil","width","minWidth","maxWidth","index","resize","addBack","children","$item","$window","window","z-index","opacity","background-color","insertBefore","layerClick","style","promise","finishPromiseProcess","errorPromise","errorItem","error","console","log","bind","$menuOffset","winHeight","winScrollTop","scrollTop","menuHeight","overflow-x","overflow-y","ContextMenuHelper","zin","$tt","max","parseInt","parent","indexOf","toLowerCase","t","split","charAt","toUpperCase","push","simple","ui","my","at","of","collision","offsetParentOffset","offsetParent","scrollLeft","ContextMenuHtml5Builder","node","$this","$children","nodeName","label","inputLabel","clone","ContextMenuEventHandler","hoveract","preventDefault","stopImmediatePropagation","currentTarget","originalEvent","mouseButton","hasClass","built","showMenu","Event","button","$related","relatedTarget","closest","mousemove","timer","clearTimeout","target","triggerAction","elementFromPoint","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","one","isInput","stopPropagation","targetZIndex","getZIndexOfTriggerTarget","parentElement","keyCode","keyStop","shiftKey","blur","$parent","itemdata","String","fromCharCode","$s","$prev","prev","last","$round","focus","$next","next","join","not","$o","isPlainObject"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ContextMenuManager\"] = factory();\n\telse\n\t\troot[\"ContextMenuManager\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d1c1cb66782f725870bd","import {determinePosition, positionSubmenu, position} from './position';\n/**\n * @class ContextMenuSettings\n * @instance\n * @interface\n * @classdesc\n ## Register new contextMenu\n\n To register a new contextMenu:\n\n ```javascript\n $.contextMenu( contextMenuOptions );\n ```\n\n ## Update contextMenu state\n\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\n\n ```javascript\n $('.context-menu-one').contextMenu('update'); // update single menu\n $.contextMenu('update') // update all open menus\n ```\n\n * @property {null|string} selector - Selector on which the contextMenu triggers.\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\n * @property {JQuery.Selector|DOMElement} [appendTo=document.body] - Specifies the selector `string` or `DOMElement` the generated menu is to be appended to.\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\n\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\n\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\n * @property {number} zIndex=1 - offset to add to zIndex\n * @property {string} className - Class to be appended to the root menu.\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\n * @property {string} classNames.hover=context-menu-hover\n * @property {string} classNames.disabled=context-menu-disabled\n * @property {string} classNames.visible=context-menu-visible\n * @property {string} classNames.notSelectable=context-menu-not-selectable\n * @property {string} classNames.icon=context-menu-icon\n * @property {string} classNames.iconEdit=context-menu-icon-edit\n * @property {string} classNames.iconCut=context-menu-icon-cut\n * @property {string} classNames.iconCopy=context-menu-icon-copy\n * @property {string} classNames.iconPaste=context-menu-icon-paste\n * @property {string} classNames.iconDelete=context-menu-icon-delete\n * @property {string} classNames.iconAdd=context-menu-icon-add\n * @property {string} classNames.iconQuit=context-menu-icon-quit\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\n * @property {Object} animation - Animation settings\n * @property {number} animation.duration=50\n * @property {string} animation.show='slideDown'\n * @property {string} animation.hide='slideUp'\n * @property {Object} events - Event callbacks. This is the trigger element, first argument is the event, and the second argumant {@link ContextMenuData}.\n * @property {Function} events.show - Called when contextmenu is shown.\n * @property {Function} events.hide - Called when contextmenu is hidden.\n * @property {Function} events.activated - Called when contextmenu is activated.\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\n * @property {ContextMenuBuildCallback} build=false\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\n\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\n\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\n\n * @property {(determinePosition)} determinePosition\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\n */\nexport default {\n    // selector of contextMenu trigger\n    selector: null,\n\n    // where to append the menu to\n    appendTo: null,\n\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\n    trigger: 'right',\n\n    // hide menu when mouse leaves trigger / menu elements\n    autoHide: false,\n\n    // ms to wait before showing a hover-triggered context menu\n    delay: 200,\n\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n    // as long as the trigger happened on one of the trigger-element's child nodes\n    reposition: true,\n\n    // Flag denoting if a second trigger should close the menu, as long as\n    // the trigger happened on one of the trigger-element's child nodes.\n    // This overrides the reposition option.\n    hideOnSecondTrigger: false,\n\n    // ability to select submenu\n    selectableSubMenu: false,\n\n    className: '',\n\n    // Default classname configuration to be able avoid conflicts in frameworks\n    classNames: {\n        hover: 'context-menu-hover', // Item hover\n        disabled: 'context-menu-disabled', // Item disabled\n        visible: 'context-menu-visible', // Item visible\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\n\n        icon: 'context-menu-icon',\n        iconEdit: 'context-menu-icon-edit',\n        iconCut: 'context-menu-icon-cut',\n        iconCopy: 'context-menu-icon-copy',\n        iconPaste: 'context-menu-icon-paste',\n        iconDelete: 'context-menu-icon-delete',\n        iconAdd: 'context-menu-icon-add',\n        iconQuit: 'context-menu-icon-quit',\n        iconLoadingClass: 'context-menu-icon-loading'\n    },\n\n    // offset to add to zIndex\n    zIndex: 1,\n\n    // show hide animation settings\n    animation: {\n        duration: 50,\n        show: 'slideDown',\n        hide: 'slideUp'\n    },\n\n    // events\n    events: {\n        show: $.noop,\n        hide: $.noop,\n        activated: $.noop\n    },\n\n    // default callback\n    callback: null,\n\n    // list of contextMenu items\n    items: {},\n\n    // Build callback for creating a menu dynamicly\n    build: false,\n\n    types: {},\n\n    // determine position to show menu at\n    determinePosition,\n\n    // position menu\n    position,\n\n    // position the sub-menu\n    positionSubmenu\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/index.js","'use strict';\nimport '../sass/jquery.contextMenu.scss';\nimport ContextMenuManager from './classes/ContextMenuManager';\nimport elementFunction from './jquery/contextMenuFunction';\n\n/**\n * The jQuery namespace.\n * @external \"jQuery\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * @class jQuery.contextMenu\n * @function external:jQuery.contextMenu\n * @instance\n *\n * @param {string} operation\n * @param {ContextMenuSettings} options\n *\n * @property {ContextMenuManager} manager\n * @property {getInputValues} getInputValues\n * @property {setInputValues} setInputValues\n * @property {fromMenu} ContextMenuHtml5Builder#fromMenu\n * @property {ContextMenuSettings} defaults\n * @property {ContextMenuEventHandler} handle\n * @property {ContextMenuOperations} operations\n * @property {Object<string, ContextMenuData>} menus\n */\nconst manager = new ContextMenuManager();\n\n// manage contextMenu instances\nlet contextMenu = function (operation, options) {\n    manager.execute(operation, options);\n};\n\ncontextMenu.getInputValues = function (opt, data) {\n    return manager.getInputValues(opt, data);\n};\ncontextMenu.setInputValues = function (opt, data) {\n    return manager.getInputValues(opt, data);\n};\ncontextMenu.fromMenu = function (element) {\n    return manager.html5builder.fromMenu(element);\n};\n\n// make defaults accessible\ncontextMenu.defaults = manager.defaults;\ncontextMenu.types = manager.defaults.types;\ncontextMenu.manager = manager;\n\n// export internal functions - undocumented, for hacking only!\ncontextMenu.handle = manager.handler;\ncontextMenu.operations = manager.operations;\ncontextMenu.menus = manager.menus;\ncontextMenu.namespaces = manager.namespaces;\n\n$.fn.contextMenu = elementFunction;\n$.contextMenu = contextMenu;\n\nmodule.exports = ContextMenuManager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/contextmenu.js","import ContextMenuOperations from './ContextMenuOperations';\nimport defaults from '../defaults';\nimport ContextMenuHtml5Builder from './ContextMenuHtml5Builder';\nimport ContextMenuEventHandler from './ContextMenuEventHandler';\n\n/**\n * @typedef {jQuery.Event} ContextMenuEvent\n * @augments jQuery.Event\n * @property {ContextMenuData} data\n */\n\n/**\n * @class ContextMenuData\n * @augments ContextMenuSettings\n * @instance\n * @interface\n *\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {JQuery} $layer - The opened layer when the menu is opened.\n * @property {JQuery} $node - The menu node.\n * @property {JQuery} $trigger - The element that triggered opening the menu.\n * @property {JQuery} $selected - Reference to the `<li>` command element.\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\n * @property {ContextMenuManager} manager - The contextmenu manager instance.\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\n * @property {?boolean} isInput - We are currently originating events from an input.\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\n *\n * @property {boolean} hovering Currently hovering, root menu only.\n */\n\n/**\n * @class ContextMenuItem\n * @instance\n * @interface\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\n\n ```javascript\n var items = {\n  firstCommand: itemOptions,\n  separator1: \"-----\",\n  separator2: { \"type\": \"cm_separator\" },\n  command2: itemOptions\n}\n ```\n\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\n\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\n\n *\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemTypes|string} type - Specifies the type of the command. See {@link ContextMenuItemTypes}.\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\n * @property {string} value - The value of the `<input>` element.\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ContextMenuItemTypes}.\n * @property {string} radio - Specifies the group of the `radio` element.\n * @property {string} options - Specifies the options of the `select` element.\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\n * @property {Object<string, ContextMenuItem>} items - Items to show in a sub-menu. You can nest as many as you like.\n * @property {string} accesskey - Character(s) to be used as accesskey.\n\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\n\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\n *\n * @property {?JQuery} $input - The input element if it was build for this item.\n *\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items.\n */\n\n/**\n * Specifies the icon class to set for the item.\n *\n * When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified.\n *\n * When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n *\n * @example\n * var items = {\n    firstCommand: {\n        name: \"Copy\",\n        icon: function(e, $itemElement, itemKey, item, opt, root){\n            // Set the content to the menu trigger selector and add an bootstrap icon to the item.\n            $itemElement.html('<span class=\"glyphicon glyphicon-star\" aria-hidden=\"true\"></span> ' + opt.selector);\n\n            // Add the context-menu-icon-updated class to the item\n            return 'context-menu-icon-updated';\n        }\n    },\n    secondCommand: {\n        name: \"Paste\",\n        icon: \"paste\" // Class context-menu-icon-paste is used on the menu item.\n    }\n}\n *\n * @callback ContextMenuIconCallback\n * @param {ContextMenuEvent|JQuery.Event} e,\n * @param {JQuery} $t\n * @param {string} key\n * @param {ContextMenuItem} item\n * @param {ContextMenuData} opt\n * @param {ContextMenuData} root\n */\n\n/**\n * The Callback is executed in the context of the triggering object.\n *\n * @callback ContextMenuItemCallback\n * @param {JQuery.Event} e - Event that trigged the menu.\n * @param {string} key - Key of the menu item.\n * @param {ContextMenuData} opt - Data of the (sub)menu in which the item resides.\n * @param {ContextMenuData} root - Data of the root menu in which the item resides. Might be the same as `opt` if triggered in the menu root.\n * @return {boolean}\n */\n\n/**\n * @callback ContextMenuBuildCallback\n * @param {JQuery.Event} e - Event that trigged the menu.\n * @param {JQuery} $currentTrigger - Element that trigged the menu.\n * @return {Object.<string,ContextMenuItem>}\n */\n\nexport default class ContextMenuManager {\n    /**\n     * @constructor\n     * @constructs ContextMenuManager\n     *\n     * @property {ContextMenuSettings|Object} defaults\n     * @property {ContextMenuEventHandler} handle\n     * @property {ContextMenuOperations} operations\n     * @property {Object<string, ContextMenuData>} menus\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\n     * @property {boolean} initialized - Flag the menu as initialized.\n     */\n    constructor() {\n        this.html5builder = new ContextMenuHtml5Builder();\n        this.defaults = defaults;\n        this.handler = new ContextMenuEventHandler();\n        this.operations = new ContextMenuOperations();\n        this.namespaces = {};\n        this.initialized = false;\n        this.menus = {};\n        this.counter = 0;\n    }\n\n    /**\n     * @method execute\n     * @memberOf ContextMenuManager\n     * @instance\n     *\n     * @param {(string|ContextMenuSettings)} operation\n     * @param {(string|ContextMenuSettings)} options\n     * @return {ContextMenuManager}\n     */\n    execute(operation, options) {\n        const normalizedArguments = this.normalizeArguments(operation, options);\n        operation = normalizedArguments.operation;\n        options = normalizedArguments.options;\n\n        // merge with default options\n        const o = $.extend(true, {manager: this}, this.defaults, options || {});\n        const $document = $(document);\n        let $context = $document;\n        let _hasContext = false;\n\n        if (!o.context || !o.context.length) {\n            o.context = document;\n        } else {\n            // you never know what they throw at you...\n            $context = $(o.context).first();\n            o.context = $context.get(0);\n            _hasContext = !$(o.context).is($(document));\n        }\n\n        switch (operation) {\n            case 'update':\n                // Updates visibility and such\n                if (_hasContext) {\n                    this.operations.update(null, $context);\n                } else {\n                    for (let menu in this.menus) {\n                        if (this.menus.hasOwnProperty(menu)) {\n                            this.operations.update(null, this.menus[menu]);\n                        }\n                    }\n                }\n                break;\n\n            case 'create':\n                // no selector no joy\n                if (!o.selector) {\n                    throw new Error('No selector specified');\n                }\n                // make sure internal classes are not bound to\n                if (o.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n                    throw new Error('Cannot bind to selector \"' + o.selector + '\" as it contains a reserved className');\n                }\n                if (!o.build && (!o.items || $.isEmptyObject(o.items))) {\n                    throw new Error('No Items specified');\n                }\n                this.counter++;\n                o.ns = '.contextMenu' + this.counter;\n                if (!_hasContext) {\n                    this.namespaces[o.selector] = o.ns;\n                }\n                this.menus[o.ns] = o;\n\n                // default to right click\n                if (!o.trigger) {\n                    o.trigger = 'right';\n                }\n\n                if (!this.initialized) {\n                    const itemClick = o.itemClickEvent === 'click' ? 'click.contextMenu' : 'mouseup.contextMenu';\n                    const contextMenuItemObj = {\n                        // 'mouseup.contextMenu': this.handler.itemClick,\n                        // 'click.contextMenu': this.handler.itemClick,\n                        'contextmenu:focus.contextMenu': this.handler.focusItem,\n                        'contextmenu:blur.contextMenu': this.handler.blurItem,\n                        'contextmenu.contextMenu': this.handler.abortevent,\n                        'mouseenter.contextMenu': this.handler.itemMouseenter,\n                        'mouseleave.contextMenu': this.handler.itemMouseleave\n                    };\n                    contextMenuItemObj[itemClick] = this.handler.itemClick;\n\n                    // make sure item click is registered first\n                    $document\n                        .on({\n                            'contextmenu:hide.contextMenu': this.handler.hideMenu,\n                            'prevcommand.contextMenu': this.handler.prevItem,\n                            'nextcommand.contextMenu': this.handler.nextItem,\n                            'contextmenu.contextMenu': this.handler.abortevent,\n                            'mouseenter.contextMenu': this.handler.menuMouseenter,\n                            'mouseleave.contextMenu': this.handler.menuMouseleave\n                        }, '.context-menu-list')\n                        .on('mouseup.contextMenu', '.context-menu-input', this.handler.inputClick)\n                        .on(contextMenuItemObj, '.context-menu-item');\n\n                    this.initialized = true;\n                }\n\n                // engage native contextmenu event\n                $context\n                    .on('contextmenu' + o.ns, o.selector, o, this.handler.contextmenu);\n\n                if (_hasContext) {\n                    // add remove hook, just in case\n                    $context.on('remove' + o.ns, function () {\n                        $(this).contextMenu('destroy');\n                    });\n                }\n\n                switch (o.trigger) {\n                    case 'hover':\n                        $context\n                            .on('mouseenter' + o.ns, o.selector, o, this.handler.mouseenter)\n                            .on('mouseleave' + o.ns, o.selector, o, this.handler.mouseleave);\n                        break;\n\n                    case 'left':\n                        $context.on('click' + o.ns, o.selector, o, this.handler.click);\n                        break;\n                    case 'touchstart':\n                        $context.on('touchstart' + o.ns, o.selector, o, this.handler.click);\n                        break;\n                    /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\n                     break;\n                     */\n                }\n\n                // create menu\n                if (!o.build) {\n                    this.operations.create(null, o);\n                }\n                break;\n\n            case 'destroy':\n                let $visibleMenu;\n                if (_hasContext) {\n                    // get proper options\n                    const context = o.context;\n\n                    Object.keys(this.menus).forEach((ns) => {\n                        let o = this.menus[ns];\n\n                        if (!o) {\n                            return true;\n                        }\n\n                        // Is this menu equest to the context called from\n                        if (!$(context).is(o.selector)) {\n                            return true;\n                        }\n\n                        $visibleMenu = $('.context-menu-list').filter(':visible');\n                        if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                            $visibleMenu.trigger('contextmenu:hide', {force: true});\n                        }\n\n                        if (this.menus[o.ns].$menu) {\n                            this.menus[o.ns].$menu.remove();\n                        }\n                        delete this.menus[o.ns];\n\n                        $(o.context).off(o.ns);\n\n                        return true;\n                    });\n                } else if (!o.selector) {\n                    $document.off('.contextMenu .contextMenuAutoHide');\n\n                    Object.keys(this.menus).forEach((ns) => {\n                        let o = this.menus[ns];\n                        $(o.context).off(o.ns);\n                    });\n\n                    this.namespaces = {};\n                    this.menus = {};\n                    this.counter = 0;\n                    this.initialized = false;\n\n                    $('#context-menu-layer, .context-menu-list').remove();\n                } else if (this.namespaces[o.selector]) {\n                    $visibleMenu = $('.context-menu-list').filter(':visible');\n                    if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(o.selector)) {\n                        $visibleMenu.trigger('contextmenu:hide', {force: true});\n                    }\n\n                    if (this.menus[this.namespaces[o.selector]].$menu) {\n                        this.menus[this.namespaces[o.selector]].$menu.remove();\n                    }\n                    delete this.menus[this.namespaces[o.selector]];\n\n                    $document.off(this.namespaces[o.selector]);\n                }\n                break;\n\n            case 'html5':\n                // if <command> and <menuitem> are not handled by the browser,\n                // or options was a bool true,\n                // initialize $.contextMenu for them\n                if ((!$.support.htmlCommand && !$.support.htmlMenuitem) || (typeof options === 'boolean' && options)) {\n                    $('menu[type=\"context\"]').each(function () {\n                        if (this.id) {\n                            $.contextMenu({\n                                selector: '[contextmenu=' + this.id + ']',\n                                items: $.contextMenu.fromMenu(this)\n                            });\n                        }\n                    }).css('display', 'none');\n                }\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    }\n\n    normalizeArguments(operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (typeof options === 'undefined') {\n            options = {};\n        }\n        return {operation, options};\n    }\n\n    /**\n     * import values into <input> commands\n     *\n     * @method setInputValues\n     * @memberOf ContextMenuManager\n     * @instance\n     *\n     * @param {ContextMenuData} opt - {@link ContextMenuData} object\n     * @param {Object} data - Values to set\n     * @return {undefined}\n     */\n    setInputValues(opt, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(opt.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                    item.value = data[key] || '';\n                    break;\n\n                case 'checkbox':\n                    item.selected = !!data[key];\n                    break;\n\n                case 'radio':\n                    item.selected = (data[item.radio] || '') === item.value;\n                    break;\n\n                case 'select':\n                    item.selected = data[key] || '';\n                    break;\n            }\n        });\n    }\n\n    /**\n     * export values from <input> commands\n     *\n     * @method getInputValues\n     * @memberOf ContextMenuManager\n     * @instance\n     *\n     * @param {ContextMenuData} opt - {@link ContextMenuData} object\n     * @param {Object} data - Values object\n     * @return {Object} - Values of input elements\n     */\n    getInputValues(opt, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(opt.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                case 'select':\n                    data[key] = item.$input.val();\n                    break;\n\n                case 'checkbox':\n                    data[key] = item.$input.prop('checked');\n                    break;\n\n                case 'radio':\n                    if (item.$input.prop('checked')) {\n                        data[item.radio] = item.value;\n                    }\n                    break;\n            }\n        });\n\n        return data;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuManager.js","import ContextMenuHelper from './ContextMenuHelper';\nimport ContextMenuItemTypes from './ContextMenuItemTypes';\n\nexport default class ContextMenuOperations {\n    /**\n     * @constructor\n     * @constructs ContextMenuOperations\n     */\n    constructor() {\n        return this;\n    }\n\n    /**\n     * Show the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @param {number} x\n     * @param {number} y\n     */\n    show(e, opt, x, y) {\n        const $trigger = $(this);\n        const css = {};\n\n        // hide any open menus\n        $('#context-menu-layer').trigger('mousedown');\n\n        // backreference for callbacks\n        opt.$trigger = $trigger;\n\n        // show event\n        if (opt.events.show.call($trigger, e, opt) === false) {\n            opt.manager.handler.$currentTrigger = null;\n            return;\n        }\n\n        // create or update context menu\n        opt.manager.operations.update.call($trigger, e, opt);\n\n        // position menu\n        opt.position.call($trigger, e, opt, x, y);\n\n        // make sure we're in front\n        if (opt.zIndex) {\n            let additionalZValue = opt.zIndex;\n            // If opt.zIndex is a function, call the function to get the right zIndex.\n            if (typeof opt.zIndex === 'function') {\n                additionalZValue = opt.zIndex.call($trigger, opt);\n            }\n            css.zIndex = ContextMenuHelper.zindex($trigger) + additionalZValue;\n        }\n\n        // add layer\n        opt.manager.operations.layer.call(opt.$menu, e, opt, css.zIndex);\n\n        // adjust sub-menu zIndexes\n        opt.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n        // position and show context menu\n        opt.$menu.css(css)[opt.animation.show](opt.animation.duration, () => {\n            $trigger.trigger('contextmenu:visible');\n\n            opt.manager.operations.activated(e, opt);\n            opt.events.activated($trigger, e, opt);\n        });\n        // make options available and set state\n        $trigger\n            .data('contextMenu', opt)\n            .addClass('context-menu-active');\n\n        // register key handler\n        $(document).off('keydown.contextMenu').on('keydown.contextMenu', opt, opt.manager.handler.key);\n        // register autoHide handler\n        if (opt.autoHide) {\n            // mouse position handler\n            $(document).on('mousemove.contextMenuAutoHide', function (e) {\n                // need to capture the offset on mousemove,\n                // since the page might've been scrolled since activation\n                const pos = $trigger.offset();\n                pos.right = pos.left + $trigger.outerWidth();\n                pos.bottom = pos.top + $trigger.outerHeight();\n\n                if (opt.$layer && !opt.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\n                    setTimeout(function () {\n                        if (!opt.hovering && opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                            opt.$menu.trigger('contextmenu:hide');\n                        }\n                    }, 50);\n                }\n            });\n        }\n    }\n\n    /**\n     * Hide the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @param {boolean} force\n     */\n    hide(e, opt, force) {\n        const $trigger = $(this);\n        if (typeof opt !== 'object' && $trigger.data('contextMenu')) {\n            opt = $trigger.data('contextMenu');\n        } else if (typeof opt !== 'object') {\n            return;\n        }\n\n        // hide event\n        if (!force && opt.events && opt.events.hide.call($trigger, e, opt) === false) {\n            return;\n        }\n\n        // remove options and revert state\n        $trigger\n            .removeData('contextMenu')\n            .removeClass('context-menu-active');\n\n        if (opt.$layer) {\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\n            setTimeout((function ($layer) {\n                return function () {\n                    $layer.remove();\n                };\n            })(opt.$layer), 10);\n\n            try {\n                delete opt.$layer;\n            } catch (e) {\n                opt.$layer = null;\n            }\n        }\n\n        // remove handle\n        opt.manager.handler.$currentTrigger = null;\n        // remove selected\n        opt.$menu.find('.' + opt.classNames.hover).trigger('contextmenu:blur');\n        opt.$selected = null;\n        // collapse all submenus\n        opt.$menu.find('.' + opt.classNames.visible).removeClass(opt.classNames.visible);\n        // unregister key and mouse handlers\n        $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');\n        // hide menu\n        if (opt.$menu) {\n            opt.$menu[opt.animation.hide](opt.animation.duration, function () {\n                // tear down dynamically built menu after animation is completed.\n                if (opt.build) {\n                    opt.$menu.remove();\n                    Object.keys(opt).forEach((key) => {\n                        switch (key) {\n                            case 'ns':\n                            case 'selector':\n                            case 'build':\n                            case 'trigger':\n                                return true;\n\n                            default:\n                                opt[key] = undefined;\n                                try {\n                                    delete opt[key];\n                                } catch (e) {\n                                }\n                                return true;\n                        }\n                    });\n                }\n\n                setTimeout(function () {\n                    $trigger.trigger('contextmenu:hidden');\n                }, 10);\n            });\n        }\n    }\n\n    /**\n     * Create a menu based on the options. Also created submenus.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @param {ContextMenuData} root\n     */\n    create(e, opt, root) {\n        if (typeof root === 'undefined') {\n            root = opt;\n        }\n\n        // create contextMenu\n        opt.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(opt.className || '').data({\n            'contextMenu': opt,\n            'contextMenuRoot': root\n        });\n\n        $.each(['callbacks', 'commands', 'inputs'], function (i, k) {\n            opt[k] = {};\n            if (!root[k]) {\n                root[k] = {};\n            }\n        });\n\n        if (!root.accesskeys) {\n            root.accesskeys = {};\n        }\n\n        function createNameNode(item) {\n            const $name = $('<span></span>');\n            if (item._accesskey) {\n                if (item._beforeAccesskey) {\n                    $name.append(document.createTextNode(item._beforeAccesskey));\n                }\n                $('<span></span>')\n                    .addClass('context-menu-accesskey')\n                    .text(item._accesskey)\n                    .appendTo($name);\n                if (item._afterAccesskey) {\n                    $name.append(document.createTextNode(item._afterAccesskey));\n                }\n            } else {\n                if (item.isHtmlName) {\n                    // restrict use with access keys\n                    if (typeof item.accesskey !== 'undefined') {\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\n                    }\n                    $name.html(item.name);\n                } else {\n                    $name.text(item.name);\n                }\n            }\n            return $name;\n        }\n\n        // create contextMenu items\n\n        $.each(opt.items, function (key, item) {\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\n            let $label = null;\n            let $input = null;\n\n            // iOS needs to see a click-event bound to an element to actually\n            // have the TouchEvents infrastructure trigger the click event\n            $t.on('click', $.noop);\n\n            // Make old school string separator a real item so checks wont be\n            // akward later.\n            // And normalize 'cm_separator' into 'cm_separator'.\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\n                item = {type: ContextMenuItemTypes.separator};\n            }\n\n            item.$node = $t.data({\n                'contextMenu': opt,\n                'contextMenuRoot': root,\n                'contextMenuKey': key\n            });\n\n            // register accesskey\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n            if (typeof item.accesskey !== 'undefined') {\n                const aks = ContextMenuHelper.splitAccesskey(item.accesskey);\n                for (let i = 0, ak; ak = aks[i]; i++) {\n                    if (!root.accesskeys[ak]) {\n                        root.accesskeys[ak] = item;\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\n                        if (matched) {\n                            item._beforeAccesskey = matched[1];\n                            item._accesskey = matched[2];\n                            item._afterAccesskey = matched[3];\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (item.type && root.types[item.type]) {\n                // run custom type handler\n                root.types[item.type].call($t, item, opt, root);\n                // register commands\n                $.each([opt, root], function (i, k) {\n                    k.commands[key] = item;\n                    // Overwrite only if undefined or the item is appended to the root. This so it\n                    // doesn't overwrite callbacks of root elements if the name is the same.\n                    if ($.isFunction(item.callback) && (typeof k.callbacks[key] === 'undefined' || typeof opt.type === 'undefined')) {\n                        k.callbacks[key] = item.callback;\n                    }\n                });\n            } else {\n                // add label for input\n                if (item.type === ContextMenuItemTypes.separator) {\n                    $t.addClass('context-menu-separator ' + root.classNames.notSelectable);\n                } else if (item.type === ContextMenuItemTypes.html) {\n                    $t.addClass('context-menu-html ' + root.classNames.notSelectable);\n                } else if (item.type && item.type !== ContextMenuItemTypes.submenu) {\n                    $label = $('<label></label>').appendTo($t);\n                    createNameNode(item).appendTo($label);\n\n                    $t.addClass('context-menu-input');\n                    opt.hasTypes = true;\n                    $.each([opt, root], function (i, k) {\n                        k.commands[key] = item;\n                        k.inputs[key] = item;\n                    });\n                } else if (item.items) {\n                    item.type = ContextMenuItemTypes.submenu;\n                }\n\n                switch (item.type) {\n                    case ContextMenuItemTypes.separator:\n                        break;\n\n                    case ContextMenuItemTypes.text:\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.textarea:\n                        $input = $('<textarea name=\"\"></textarea>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n\n                        if (item.height) {\n                            $input.height(item.height);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.radio:\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + item.radio)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        $input = $('<select name=\"\"></select>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .appendTo($label);\n                        if (item.options) {\n                            $.each(item.options, function (value, text) {\n                                $('<option></option>').val(value).text(text).appendTo($input);\n                            });\n                            $input.val(item.selected);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.submenu:\n                        createNameNode(item).appendTo($t);\n                        item.appendTo = item.$node;\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\n                        item.callback = null;\n\n                        // If item contains items, and this is a promise, we should create it later\n                        // check if subitems is of type promise. If it is a promise we need to create\n                        // it later, after promise has been resolved.\n                        if (typeof item.items.then === 'function') {\n                            // probably a promise, process it, when completed it will create the sub menu's.\n                            root.manager.operations.processPromises(e, item, root, item.items);\n                        } else {\n                            // normal submenu.\n                            root.manager.operations.create(e, item, root);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.html:\n                        $(item.html).appendTo($t);\n                        break;\n\n                    default:\n                        $.each([opt, root], function (i, k) {\n                            k.commands[key] = item;\n                            // Overwrite only if undefined or the item is appended to the root. This so it\n                            // doesn't overwrite callbacks of root elements if the name is the same.\n                            if ($.isFunction(item.callback) && (typeof k.callbacks[key] === 'undefined' || typeof opt.type === 'undefined')) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                        createNameNode(item).appendTo($t);\n                        break;\n                }\n\n                // disable key listener in <input>\n                if (item.type && item.type !== ContextMenuItemTypes.submenu && item.type !== ContextMenuItemTypes.html && item.type !== ContextMenuItemTypes.separator) {\n                    $input\n                        .on('focus', root.manager.handler.focusInput)\n                        .on('blur', root.manager.handler.blurInput);\n\n                    if (item.events) {\n                        $input.on(item.events, opt);\n                    }\n                }\n\n                // add icons\n                if (item.icon) {\n                    if ($.isFunction(item.icon)) {\n                        item._icon = item.icon.call(this, e, $t, key, item, opt, root);\n                    } else {\n                        if (typeof (item.icon) === 'string' && item.icon.substring(0, 3) === 'fa-') {\n                            // to enable font awesome\n                            item._icon = root.classNames.icon + ' ' + root.classNames.icon + '--fa fa ' + item.icon;\n                        } else {\n                            item._icon = root.classNames.icon + ' ' + root.classNames.icon + '-' + item.icon;\n                        }\n                    }\n                    $t.addClass(item._icon);\n                }\n            }\n\n            // cache contained elements\n            item.$input = $input;\n            item.$label = $label;\n\n            // attach item to menu\n            $t.appendTo(opt.$menu);\n\n            // Disable text selection\n            if (!opt.hasTypes && $.support.eventSelectstart) {\n                // browsers support user-select: none,\n                // IE has a special event for text-selection\n                // browsers supporting neither will not be preventing text-selection\n                $t.on('selectstart.disableTextSelect', opt.manager.handler.abortevent);\n            }\n        });\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n        if (!opt.$node) {\n            opt.$menu.css('display', 'none').addClass('context-menu-root');\n        }\n        opt.$menu.appendTo(opt.appendTo || document.body);\n    }\n\n    /**\n     * Resize the menu to its content.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {ContextMenuEvent} e\n     * @param {JQuery} $menu\n     * @param {boolean?} nested\n     */\n    resize(e, $menu, nested) {\n        let domMenu;\n        // determine widths of submenus, as CSS won't grow them automatically\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n        // kinda sucks hard...\n\n        // determine width of absolutely positioned element\n        $menu.css({position: 'absolute', display: 'block'});\n        // don't apply yet, because that would break nested elements' widths\n        $menu.data('width',\n            (domMenu = $menu.get(0)).getBoundingClientRect\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\n        // reset styles so they allow nested elements to grow/shrink naturally\n        $menu.css({\n            position: 'static',\n            minWidth: '0px',\n            maxWidth: '100000px'\n        });\n        // identify width of nested menus\n        $menu.find('> li > ul').each((index, element) => {\n            e.data.manager.operations.resize(e, $(element), true);\n        });\n        // reset and apply changes in the end because nested\n        // elements' widths wouldn't be calculatable otherwise\n        if (!nested) {\n            $menu.find('ul').addBack().css({\n                position: '',\n                display: '',\n                minWidth: '',\n                maxWidth: ''\n            }).outerWidth(function () {\n                return $(this).data('width');\n            });\n        }\n    }\n\n    /**\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData?} opt\n     * @param {ContextMenuData?} root\n     */\n    update(e, opt, root) {\n        const $trigger = this;\n        if (typeof root === 'undefined') {\n            root = opt;\n            root.manager.operations.resize(e, opt.$menu);\n        }\n        // re-check disabled for each item\n        opt.$menu.children().each(function (index, element) {\n            let $item = $(element);\n            let key = $item.data('contextMenuKey');\n            let item = opt.items[key];\n\n            let disabled = ($.isFunction(item.disabled) && item.disabled.call($trigger, e, key, opt, root)) || item.disabled === true;\n            let visible;\n\n            if ($.isFunction(item.visible)) {\n                visible = item.visible.call($trigger, e, key, opt, root);\n            } else if (typeof item.visible !== 'undefined') {\n                visible = item.visible === true;\n            } else {\n                visible = true;\n            }\n            $item[visible ? 'show' : 'hide']();\n\n            // dis- / enable item\n            $item[disabled ? 'addClass' : 'removeClass'](root.classNames.disabled);\n\n            if ($.isFunction(item.icon)) {\n                $item.removeClass(item._icon);\n                item._icon = item.icon.call(this, $trigger, $item, key, item);\n                $item.addClass(item._icon);\n            }\n\n            if (item.type) {\n                // dis- / enable input elements\n                $item.find('input, select, textarea').prop('disabled', disabled);\n\n                // update input states\n                switch (item.type) {\n                    case ContextMenuItemTypes.text:\n                    case ContextMenuItemTypes.textarea:\n                        item.$input.val(item.value || '');\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                    case ContextMenuItemTypes.radio:\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\n                        break;\n                }\n            }\n\n            if (item.$menu) {\n                // update sub-menu\n                root.manager.operations.update.call($trigger, e, item, root);\n            }\n        });\n    }\n\n    /**\n     * Create the overlay layer so we can capture the click outside the menu and close it.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @param {number} zIndex\n     * @returns {jQuery}\n     */\n    layer(e, opt, zIndex) {\n        const $window = $(window);\n\n        // add transparent layer for click area\n        // filter and background for Internet Explorer, Issue #23\n        const $layer = opt.$layer = $('<div id=\"context-menu-layer\"></div>')\n            .css({\n                height: $window.height(),\n                width: $window.width(),\n                display: 'block',\n                position: 'fixed',\n                'z-index': zIndex,\n                top: 0,\n                left: 0,\n                opacity: 0,\n                filter: 'alpha(opacity=0)',\n                'background-color': '#000'\n            })\n            .data('contextMenuRoot', opt)\n            .insertBefore(this)\n            .on('contextmenu', opt.manager.handler.abortevent)\n            .on('mousedown', opt.manager.handler.layerClick);\n\n        // IE6 doesn't know position:fixed;\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\n            $layer.css({\n                'position': 'absolute',\n                'height': $(document).height()\n            });\n        }\n\n        return $layer;\n    }\n\n    /**\n     * Process submenu promise.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @param {ContextMenuData} root\n     * @param {Promise} promise\n     */\n    processPromises(e, opt, root, promise) {\n        // Start\n        opt.$node.addClass(root.classNames.iconLoadingClass);\n\n        function finishPromiseProcess(opt, root, items) {\n            if (typeof root.$menu === 'undefined' || !root.$menu.is(':visible')) {\n                return;\n            }\n            opt.$node.removeClass(root.classNames.iconLoadingClass);\n            opt.items = items;\n            root.manager.operations.create(e, opt, root); // Create submenu\n            root.manager.operations.update(e, opt, root); // Correctly update position if user is already hovered over menu item\n            root.positionSubmenu.call(opt.$node, e, opt.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\n        }\n\n        function errorPromise(opt, root, errorItem) {\n            // User called promise.reject() with an error item, if not, provide own error item.\n            if (typeof errorItem === 'undefined') {\n                errorItem = {\n                    'error': {\n                        name: 'No items and no error item',\n                        icon: 'context-menu-icon context-menu-icon-quit'\n                    }\n                };\n                if (window.console) {\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\n                }\n            } else if (typeof errorItem === 'string') {\n                errorItem = {'error': {name: errorItem}};\n            }\n            finishPromiseProcess(opt, root, errorItem);\n        }\n\n        function completedPromise(opt, root, items) {\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\n            // be used to create the rest of the context menu.\n            if (typeof items === 'undefined') {\n                // Null result, dev should have checked\n                errorPromise(undefined); // own error object\n            }\n            finishPromiseProcess(opt, root, items);\n        }\n\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the opt\n        // and root to avoid scope problems\n        promise.then(completedPromise.bind(this, opt, root), errorPromise.bind(this, opt, root));\n    }\n\n    /**\n     * Operation that will run after contextMenu showed on screen.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} opt\n     * @return {undefined}\n     */\n    activated(e, opt) {\n        const $menu = opt.$menu;\n        const $menuOffset = $menu.offset();\n        const winHeight = $(window).height();\n        const winScrollTop = $(window).scrollTop();\n        const menuHeight = $menu.height();\n        if (menuHeight > winHeight) {\n            $menu.css({\n                'height': winHeight + 'px',\n                'overflow-x': 'hidden',\n                'overflow-y': 'auto',\n                'top': winScrollTop + 'px'\n            });\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\n            $menu.css({\n                'top': '0px'\n            });\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuOperations.js","\nexport default class ContextMenuHelper {\n    /**\n     * @param {JQuery} $t - Element to calculate z-index of.\n     * @return {number} - Elements zIndex\n     */\n    static zindex($t) {\n        let zin = 0;\n        let $tt = $t;\n\n        while (true) {\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n            $tt = $tt.parent();\n            if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n                break;\n            }\n        }\n        return zin;\n    }\n\n    /**\n     * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n     * @param {string} val - Accesskey value\n     * @return {Array} - Seperate keys to handle as accesskey\n     */\n    static splitAccesskey(val) {\n        let t = val.split(/\\s+/);\n        let keys = [];\n\n        for (let i = 0, k; k = t[i]; i++) {\n            k = k.charAt(0).toUpperCase(); // first character only\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n            // a map to look up already used access keys would be nice\n            keys.push(k);\n        }\n\n        return keys;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHelper.js","/**\r\n * Possible ContextMenuItem types\r\n * @enum string\r\n */\r\nconst ContextMenuItemTypes = {\r\n    /**\r\n     * The command is a simple clickable item.\r\n     */\r\n    simple: '',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    text: 'text',\r\n\r\n    /**\r\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    textarea: 'textarea',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    checkbox: 'checkbox',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    radio: 'radio',\r\n\r\n    /**\r\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    select: 'select',\r\n\r\n    /**\r\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\r\n     */\r\n    html: 'html',\r\n\r\n    /**\r\n     * Internal property, used internally when the type is set to a string.\r\n     */\r\n    separator: 'cm_separator',\r\n\r\n    /**\r\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\r\n     */\r\n    submenu: 'sub'\r\n};\r\n\r\nexport default ContextMenuItemTypes;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuItemTypes.js","/**\n * Determine the position for a root menu.\n * @memberOf ContextMenuSettings\n * @function ContextMenuSettings#determinePosition\n * @param {(JQuery)} $menu\n */\nexport function determinePosition($menu) {\n    // position to the lower middle of the trigger element\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'center top',\n            at: 'center bottom',\n            of: this,\n            offset: '0 5',\n            collision: 'fit'\n        }).css('display', 'none');\n    } else {\n        // determine contextMenu position\n        const offset = this.offset();\n        offset.top += this.outerHeight();\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n        $menu.css(offset);\n    }\n}\n\n/**\n * Position the root menu.\n * @memberOf ContextMenuSettings\n * @function ContextMenuSettings#position\n * @param {JQuery.Event} e\n * @param {ContextMenuData} opt\n * @param {(number|string)} x\n * @param {(number|string)} y\n */\nexport function position(e, opt, x, y) {\n    const $window = $(window);\n    let offset;\n    // determine contextMenu position\n    if (!x && !y) {\n        opt.determinePosition.call(this, opt.$menu);\n        return;\n    } else if (x === 'maintain' && y === 'maintain') {\n        // x and y must not be changed (after re-show on command click)\n        offset = opt.$menu.position();\n    } else {\n        // x and y are given (by mouse event)\n        const offsetParentOffset = opt.$menu.offsetParent().offset();\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\n    }\n\n    // correct offset if viewport demands it\n    const bottom = $window.scrollTop() + $window.height();\n    const right = $window.scrollLeft() + $window.width();\n    const height = opt.$menu.outerHeight();\n    const width = opt.$menu.outerWidth();\n\n    if (offset.top + height > bottom) {\n        offset.top -= height;\n    }\n\n    if (offset.top < 0) {\n        offset.top = 0;\n    }\n\n    if (offset.left + width > right) {\n        offset.left -= width;\n    }\n\n    if (offset.left < 0) {\n        offset.left = 0;\n    }\n\n    opt.$menu.css(offset);\n}\n\n/**\n * Position a submenu.\n * @memberOf ContextMenuSettings\n * @function ContextMenuSettings#positionSubmenu\n * @param {JQuery.Event} e\n * @param {JQuery} $menu\n */\n// position the sub-menu\nexport function positionSubmenu(e, $menu) {\n    if (typeof $menu === 'undefined') {\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\n        // but the submenu does not exist yet if opt.items is a promise. just return, will\n        // call positionSubmenu after promise is completed.\n        return;\n    }\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'left top-5',\n            at: 'right top',\n            of: this,\n            collision: 'flipfit fit'\n        }).css('display', '');\n    } else {\n        // determine contextMenu position\n        const offset = {\n            top: -9,\n            left: this.outerWidth() - 5\n        };\n        $menu.css(offset);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/position.js","/**\n * @class ContextMenuHtml5Builder\n * @classdesc considering the following HTML `$.contextMenu.fromMenu($('#html5menu'))` will return a proper items object.\n\n ```\n <menu id=\"html5menu\" type=\"context\" style=\"display:none\">\n    <command label=\"rotate\" onclick=\"alert('rotate')\">\n    <command label=\"resize\" onclick=\"alert('resize')\">\n    <menu label=\"share\">\n        <command label=\"twitter\" onclick=\"alert('twitter')\">\n        <hr>\n        <command label=\"facebook\" onclick=\"alert('facebook')\">\n    </menu>\n </menu>\n ```\n\n `$.contextMenu.fromMenu()` will properly import (and thus handle) the following elements. Everything else is imported as `{type: \"html\"}`\n\n ```\n <menu>\n <hr>\n <a>\n <command type=\"command|radio|checkbox\"> (W3C Specification)\n <menuitem type=\"command|radio|checkbox\"> (Firefox)\n <input type=\"text|radio|checkbox\">\n <select>\n <textarea>\n <label for=\"someId\">\n <label> the text <input|textarea|select>\n ```\n\n The `<menu>` must be hidden but not removed, as all command events (clicks) are passed-thru to the original command element!\n\n Note: While the specs note `<option>`s to be renderd as regular commands, `$.contextMenu` will render an actual `<select>`.\n\n ## HTML5 `<menu>` shiv/polyfill\n\n Engaging the HTML5 polyfill (ignoring `$.contextMenu` if context menus are available natively):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\");\n });\n ```\n\n Engaging the HTML5 polyfill (ignoring browser native implementation):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\", true);\n });\n ```\n\n */\nexport default class ContextMenuHtml5Builder {\n    /**\n     * Get the input label for the given node.\n     *\n     * @method inputLabel\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {HTMLElement} node - Html element\n     * @returns {string|JQuery|jQuery} - Input label element\n     */\n    inputLabel(node) {\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n    }\n\n    /**\n     * Helper function to build ContextMenuItems from an html5 menu element.\n     *\n     * @method fromMenu\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {JQuery|string} element - Menu element to generate the menu from.\n     * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\n     */\n    fromMenu(element) {\n        const $this = $(element);\n        const items = {};\n\n        this.build(items, $this.children());\n\n        return items;\n    }\n\n    /**\n     * Helper function for building a menu from a HTML menu element.\n     *\n     * @method build\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\n     * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\n     * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\n     * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\n     */\n    build(items, $children, counter) {\n        if (!counter) {\n            counter = 0;\n        }\n\n        $children.each(function () {\n            let $node = $(this);\n            let node = this;\n            let nodeName = this.nodeName.toLowerCase();\n            let label;\n            let item;\n\n            // extract <label><input>\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n                label = $node.text();\n                $node = $node.children().first();\n                node = $node.get(0);\n                nodeName = node.nodeName.toLowerCase();\n            }\n\n            /*\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n             * Not being the sadistic kind, $.contextMenu only accepts:\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n             */\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n            switch (nodeName) {\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n                case 'menu':\n                    item = {name: $node.attr('label'), items: {}};\n                    counter = this.html5builder(item.items, $node.children(), counter);\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n                case 'a':\n                case 'button':\n                    item = {\n                        name: $node.text(),\n                        disabled: !!$node.attr('disabled'),\n                        callback: (function () {\n                            return function () {\n                                $node.get(0).click();\n                            };\n                        })()\n                    };\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n                case 'menuitem':\n                case 'command':\n                    switch ($node.attr('type')) {\n                        case undefined:\n                        case 'command':\n                        case 'menuitem':\n                            item = {\n                                name: $node.attr('label'),\n                                disabled: !!$node.attr('disabled'),\n                                icon: $node.attr('icon'),\n                                callback: (function () {\n                                    return function () {\n                                        $node.get(0).click();\n                                    };\n                                })()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                radio: $node.attr('radiogroup'),\n                                value: $node.attr('id'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                    }\n                    break;\n\n                case 'hr':\n                    item = '-------';\n                    break;\n\n                case 'input':\n                    switch ($node.attr('type')) {\n                        case 'text':\n                            item = {\n                                type: 'text',\n                                name: label || this.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                value: $node.val()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                name: label || this.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                name: label || this.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                radio: !!$node.attr('name'),\n                                value: $node.val(),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                            break;\n                    }\n                    break;\n\n                case 'select':\n                    item = {\n                        type: 'select',\n                        name: label || this.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        selected: $node.val(),\n                        options: {}\n                    };\n                    $node.children().each(function () {\n                        item.options[this.value] = $(this).text();\n                    });\n                    break;\n\n                case 'textarea':\n                    item = {\n                        type: 'textarea',\n                        name: label || this.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        value: $node.val()\n                    };\n                    break;\n\n                case 'label':\n                    break;\n\n                default:\n                    item = {type: 'html', html: $node.clone(true)};\n                    break;\n            }\n\n            if (item) {\n                counter++;\n                items['key' + counter] = item;\n            }\n        });\n\n        return counter;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHtml5Builder.js","import defaults from '../defaults';\n\nexport default class ContextMenuEventHandler {\n    /**\n     * @constructs ContextMenuEventHandler\n     * @constructor\n     * @property {?JQuery} $currentTrigger\n     * @property {Object} hoveract\n     */\n    constructor() {\n        this.$currentTrigger = null;\n        this.hoveract = {};\n    }\n\n    /**\n     * Helper to abort an event\n     *\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    abortevent(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    contextmenu(e) {\n        const $this = $(e.currentTarget);\n\n        // disable actual context-menu if we are using the right mouse button as the trigger\n        if (e.data.trigger === 'right') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // abort native-triggered events unless we're triggering on right click\n        if ((e.data.trigger !== 'right' && e.data.trigger !== 'demand') && e.originalEvent) {\n            return;\n        }\n\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\n        if (typeof e.mouseButton !== 'undefined' && e.data) {\n            if (!(e.data.trigger === 'left' && e.mouseButton === 0) && !(e.data.trigger === 'right' && e.mouseButton === 2)) {\n                // Mouse click is not valid.\n                return;\n            }\n        }\n\n        // abort event if menu is visible for this trigger\n        if ($this.hasClass('context-menu-active')) {\n            return;\n        }\n\n        if (!$this.hasClass('context-menu-disabled')) {\n            // theoretically need to fire a show event at <menu>\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n            // e.data.$menu.trigger(evt);\n\n            e.data.manager.handler.$currentTrigger = $this;\n            if (e.data.build) {\n                const built = e.data.build(e, $this);\n                // abort if build() returned false\n                if (built === false) {\n                    return;\n                }\n\n                // dynamically build menu on invocation\n                e.data = $.extend(true, {}, defaults, e.data, built || {});\n\n                // abort if there are no items to display\n                if (!e.data.items || $.isEmptyObject(e.data.items)) {\n                    // Note: jQuery captures and ignores errors from event handlers\n                    if (window.console) {\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                    }\n\n                    throw new Error('No Items specified');\n                }\n\n                // backreference for custom command type creation\n                e.data.$trigger = e.data.manager.handler.$currentTrigger;\n\n                e.data.manager.operations.create(e, e.data);\n            }\n            let showMenu = false;\n            for (let item in e.data.items) {\n                if (e.data.items.hasOwnProperty(item)) {\n                    let visible;\n                    if ($.isFunction(e.data.items[item].visible)) {\n                        visible = e.data.items[item].visible.call($this, e, item, e.data, e.data);\n                    } else if (typeof e.data.items[item] !== 'undefined' && e.data.items[item].visible) {\n                        visible = e.data.items[item].visible === true;\n                    } else {\n                        visible = true;\n                    }\n                    if (visible) {\n                        showMenu = true;\n                    }\n                }\n            }\n            if (showMenu) {\n                // show menu\n                e.data.manager.operations.show.call($this, e, e.data, e.pageX, e.pageY);\n            }\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    click(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        $(this).trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e}));\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousedown(e) {\n        // register mouse down\n        const $this = $(this);\n\n        // hide any previous menus\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && !e.data.manager.handler.$currentTrigger.is($this)) {\n            e.data.manager.handler.$currentTrigger.data('contextMenu').$menu.trigger($.Event('contextmenu', {originalEvent: e}));\n        }\n\n        // activate on right click\n        if (e.button === 2) {\n            e.data.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseup(e) {\n        // show menu\n        const $this = $(this);\n        if ($this.data('contextMenuActive') && e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && e.data.manager.handler.$currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.data.manager.handler.$currentTrigger = $this;\n            $this.trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e}));\n        }\n\n        $this.removeData('contextMenuActive');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseenter(e) {\n        const $this = $(this);\n        const $related = $(e.relatedTarget);\n        const $document = $(document);\n\n        // abort if we're coming from a menu\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        // abort if a menu is shown\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length) {\n            return;\n        }\n\n        e.data.manager.handler.hoveract.pageX = e.pageX;\n        e.data.manager.handler.hoveract.pageY = e.pageY;\n        e.data.manager.handler.hoveract.data = e.data;\n        $document.on('mousemove.contextMenuShow', e.data.manager.handler.mousemove);\n        e.data.manager.handler.hoveract.timer = setTimeout(function () {\n            e.data.manager.handler.hoveract.timer = null;\n            $document.off('mousemove.contextMenuShow');\n            e.data.manager.handler.$currentTrigger = $this;\n            $this.trigger($.Event('contextmenu', {\n                data: e.data.manager.handler.hoveract.data,\n                pageX: e.data.manager.handler.hoveract.pageX,\n                pageY: e.data.manager.handler.hoveract.pageY\n            }));\n        }, e.data.delay);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mousemove(e) {\n        e.data.manager.handler.hoveract.pageX = e.pageX;\n        e.data.manager.handler.hoveract.pageY = e.pageY;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    mouseleave(e) {\n        // abort if we're leaving for a menu\n        const $related = $(e.relatedTarget);\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        try {\n            clearTimeout(e.data.manager.handler.hoveract.timer);\n        } catch (e) {\n\n        }\n\n        e.data.manager.handler.hoveract.timer = null;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    layerClick(e) {\n        let $this = $(this);\n        let root = $this.data('contextMenuRoot');\n        let button = e.button;\n        let x = e.pageX;\n        let y = e.pageY;\n        let target;\n        let offset;\n\n        e.preventDefault();\n\n        setTimeout(function () {\n            let $window = $(window);\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n            // find the element that would've been clicked, wasn't the layer in the way\n            if (document.elementFromPoint && root.$layer) {\n                root.$layer.hide();\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\n\n                // also need to try and focus this element if we're in a contenteditable area,\n                // as the layer will prevent the browser mouse action we want\n                if (target.isContentEditable) {\n                    const range = document.createRange();\n                    const sel = window.getSelection();\n                    range.selectNode(target);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n                $(target).trigger(e);\n                root.$layer.show();\n            }\n\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.$menu.trigger('contextmenu:hide', {originalEvent: e});\n                return;\n            }\n\n            if (root.reposition && triggerAction) {\n                if (document.elementFromPoint) {\n                    if (root.$trigger.is(target)) {\n                        root.position.call(root.$trigger, e, root, x, y);\n                        return;\n                    }\n                } else {\n                    offset = root.$trigger.offset();\n                    const $window = $(window);\n                    // while this looks kinda awful, it's the best way to avoid\n                    // unnecessarily calculating any positions\n                    offset.top += $window.scrollTop();\n                    if (offset.top <= e.pageY) {\n                        offset.left += $window.scrollLeft();\n                        if (offset.left <= e.pageX) {\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\n                            if (offset.bottom >= e.pageY) {\n                                offset.right = offset.left + root.$trigger.outerWidth();\n                                if (offset.right >= e.pageX) {\n                                    // reposition\n                                    root.position.call(root.$trigger, e, root, x, y);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (target && triggerAction) {\n                root.$trigger.one('contextmenu:hidden', function () {\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\n                });\n            }\n\n            if (root !== null && typeof root !== 'undefined' && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.$menu.trigger('contextmenu:hide', {originalEvent: e});\n            }\n        }, 50);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {ContextMenuItem} opt\n     */\n    keyStop(e, opt) {\n        if (!opt.isInput) {\n            e.preventDefault();\n        }\n\n        e.stopPropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    key(e) {\n        let opt = {};\n\n        // Only get the data from this.$currentTrigger if it exists\n        if (e.data.manager.handler.$currentTrigger) {\n            opt = e.data.manager.handler.$currentTrigger.data('contextMenu') || {};\n        }\n        // If the trigger happen on a element that are above the contextmenu do this\n        if (typeof opt.zIndex === 'undefined') {\n            opt.zIndex = 0;\n        }\n        const getZIndexOfTriggerTarget = function (target) {\n            if (target.style.zIndex !== '') {\n                return target.style.zIndex;\n            } else {\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.offsetParent);\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.parentElement);\n                }\n            }\n        };\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\n\n        // If targetZIndex is heigher then opt.zIndex dont progress any futher.\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\n        // and its above the contextmenu it wont steal keys events\n        if (opt.$menu && parseInt(targetZIndex, 10) > parseInt(opt.$menu.css('zIndex'), 10)) {\n            return;\n        }\n        switch (e.keyCode) {\n            case 9:\n            case 38: // up\n                e.data.manager.handler.keyStop(e, opt);\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\n                if (opt.isInput) {\n                    if (e.keyCode === 9 && e.shiftKey) {\n                        e.preventDefault();\n                        if (opt.$selected) {\n                            opt.$selected.find('input, textarea, select').blur();\n                        }\n                        if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                            opt.$menu.trigger('prevcommand', {originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 38 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else if (e.keyCode !== 9 || e.shiftKey) {\n                    if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                        opt.$menu.trigger('prevcommand', {originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n            // omitting break;\n            // case 9: // tab - reached through omitted break;\n            case 40: // down\n                e.data.manager.handler.keyStop(e, opt);\n                if (opt.isInput) {\n                    if (e.keyCode === 9) {\n                        e.preventDefault();\n                        if (opt.$selected) {\n                            opt.$selected.find('input, textarea, select').blur();\n                        }\n                        if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                            opt.$menu.trigger('nextcommand', {originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 40 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else {\n                    if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                        opt.$menu.trigger('nextcommand', {originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n\n            case 37: // left\n                e.data.manager.handler.keyStop(e, opt);\n                if (opt.isInput || !opt.$selected || !opt.$selected.length) {\n                    break;\n                }\n\n                if (!opt.$selected.parent().hasClass('context-menu-root')) {\n                    const $parent = opt.$selected.parent().parent();\n                    opt.$selected.trigger('contextmenu:blur', {originalEvent: e});\n                    opt.$selected = $parent;\n                    return;\n                }\n                break;\n\n            case 39: // right\n                e.data.manager.handler.keyStop(e, opt);\n                if (opt.isInput || !opt.$selected || !opt.$selected.length) {\n                    break;\n                }\n\n                const itemdata = opt.$selected.data('contextMenu') || {};\n                if (itemdata.$menu && opt.$selected.hasClass('context-menu-submenu')) {\n                    opt.$selected = null;\n                    itemdata.$selected = null;\n                    itemdata.$menu.trigger('nextcommand', {originalEvent: e});\n                    return;\n                }\n                break;\n\n            case 35: // end\n            case 36: // home\n                if (opt.$selected && opt.$selected.find('input, textarea, select').length) {\n                    break;\n                } else {\n                    ((opt.$selected && opt.$selected.parent()) || opt.$menu)\n                        .children(':not(.' + opt.classNames.disabled + ', .' + opt.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\n                        .trigger('contextmenu:focus', {originalEvent: e});\n                    e.preventDefault();\n                    break;\n                }\n            case 13: // enter\n                e.data.manager.handler.keyStop(e, opt);\n                if (opt.isInput) {\n                    if (opt.$selected && !opt.$selected.is('textarea, select')) {\n                        e.preventDefault();\n                        return;\n                    }\n                    break;\n                }\n                if (typeof opt.$selected !== 'undefined' && opt.$selected !== null) {\n                    opt.$selected.trigger('mouseup', {originalEvent: e});\n                }\n                return;\n            case 32: // space\n            case 33: // page up\n            case 34: // page down\n                // prevent browser from scrolling down while menu is visible\n                e.data.manager.handler.keyStop(e, opt);\n                return;\n\n            case 27: // esc\n                e.data.manager.handler.keyStop(e, opt);\n                if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\n                    opt.$menu.trigger('contextmenu:hide', {originalEvent: e});\n                }\n                return;\n\n            default: // 0-9, a-z\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                if (opt.accesskeys && opt.accesskeys[k]) {\n                    // according to the specs accesskeys must be invoked immediately\n                    opt.accesskeys[k].$node.trigger(opt.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup', {originalEvent: e});\n                    return;\n                }\n                break;\n        }\n        // pass event to selected item,\n        // stop propagation to avoid endless recursion\n        e.stopPropagation();\n        if (typeof opt.$selected !== 'undefined' && opt.$selected !== null) {\n            opt.$selected.trigger(e);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    prevItem(e) {\n        e.stopPropagation();\n        let opt = $(this).data('contextMenu') || {};\n        const root = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (opt.$selected) {\n            const $s = opt.$selected;\n            opt = opt.$selected.parent().data('contextMenu') || {};\n            opt.$selected = $s;\n        }\n\n        const $children = opt.$menu.children();\n        let $prev = !opt.$selected || !opt.$selected.prev().length ? $children.last() : opt.$selected.prev();\n        const $round = $prev;\n\n        // skip disabled or hidden elements\n        while ($prev.hasClass(root.classNames.disabled) || $prev.hasClass(root.classNames.notSelectable) || $prev.is(':hidden')) {\n            if ($prev.prev().length) {\n                $prev = $prev.prev();\n            } else {\n                $prev = $children.last();\n            }\n\n            if ($prev.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (opt.$selected) {\n            root.manager.handler.itemMouseleave.call(opt.$selected.get(0), e);\n        }\n\n        // activate next\n        root.manager.handler.itemMouseenter.call($prev.get(0), e);\n\n        // focus input\n        const $input = $prev.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    nextItem(e) {\n        e.stopPropagation();\n        let opt = $(this).data('contextMenu') || {};\n        let root = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (opt.$selected) {\n            const $s = opt.$selected;\n            opt = opt.$selected.parent().data('contextMenu') || {};\n            opt.$selected = $s;\n        }\n\n        const $children = opt.$menu.children();\n        let $next = !opt.$selected || !opt.$selected.next().length ? $children.first() : opt.$selected.next();\n        const $round = $next;\n\n        // skip disabled\n        while ($next.hasClass(root.classNames.disabled) || $next.hasClass(root.classNames.notSelectable) || $next.is(':hidden')) {\n            if ($next.next().length) {\n                $next = $next.next();\n            } else {\n                $next = $children.first();\n            }\n            if ($next.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (opt.$selected) {\n            root.manager.handler.itemMouseleave.call(opt.$selected.get(0), e);\n        }\n\n        // activate next\n        root.manager.handler.itemMouseenter.call($next.get(0), e);\n\n        // focus input\n        const $input = $next.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let opt = data.contextMenu;\n        let root = data.contextMenuRoot;\n\n        root.$selected = opt.$selected = $this;\n        root.isInput = opt.isInput = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let opt = data.contextMenu;\n        let root = data.contextMenuRoot;\n\n        root.isInput = opt.isInput = false;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseenter(e) {\n        let root = $(this).data().contextMenuRoot;\n        root.hovering = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    menuMouseleave(e) {\n        let root = $(this).data().contextMenuRoot;\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\n            root.hovering = false;\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseenter(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let opt = data.contextMenu;\n        let root = data.contextMenuRoot;\n\n        root.hovering = true;\n\n        // abort if we're re-entering\n        if (e && root.$layer && root.$layer.is(e.relatedTarget)) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // make sure only one item is selected\n        (opt.$menu ? opt : root).$menu\n            .children('.' + root.classNames.hover).trigger('contextmenu:blur')\n            .children('.hover').trigger('contextmenu:blur', {originalEvent: e});\n\n        if ($this.hasClass(root.classNames.disabled) || $this.hasClass(root.classNames.notSelectable)) {\n            opt.$selected = null;\n            return;\n        }\n\n        $this.trigger('contextmenu:focus', {originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemMouseleave(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let opt = data.contextMenu;\n        let root = data.contextMenuRoot;\n\n        if (root !== opt && root.$layer && root.$layer.is(e.relatedTarget)) {\n            if (typeof root.$selected !== 'undefined' && root.$selected !== null) {\n                root.$selected.trigger('contextmenu:blur', {originalEvent: e});\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            root.$selected = opt.$selected = opt.$node;\n            return;\n        }\n\n        if (opt && opt.$menu && opt.$menu.hasClass(root.classNames.visible)) {\n            return;\n        }\n\n        $this.trigger('contextmenu:blur');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    itemClick(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let opt = data.contextMenu;\n        let root = data.contextMenuRoot;\n        let key = data.contextMenuKey;\n        let callback;\n\n        // abort if the key is unknown or disabled or is a menu\n        if (!opt.items[key] || $this.is('.' + root.classNames.disabled + ', .context-menu-separator, .' + root.classNames.notSelectable) || ($this.is('.context-menu-submenu') && root.selectableSubMenu === false)) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if ($.isFunction(opt.callbacks[key]) && Object.prototype.hasOwnProperty.call(opt.callbacks, key)) {\n            // item-specific callback\n            callback = opt.callbacks[key];\n        } else if ($.isFunction(root.callback)) {\n            // default callback\n            callback = root.callback;\n        } else {\n            // no callback, no action\n            return;\n        }\n\n        // hide menu if callback doesn't stop that\n        if (callback.call(root.$trigger, e, key, opt, root) !== false) {\n            root.$menu.trigger('contextmenu:hide');\n        } else if (root.$menu.parent().length) {\n            root.manager.operations.update.call(root.$trigger, e, root);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    inputClick(e) {\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     * @param {Object} data\n     */\n    hideMenu(e, data) {\n        const root = $(this).data('contextMenuRoot');\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    focusItem(e) {\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const opt = data.contextMenu;\n        const root = data.contextMenuRoot;\n\n        if ($this.hasClass(root.classNames.disabled) || $this.hasClass(root.classNames.notSelectable)) {\n            return;\n        }\n\n        $this\n            .addClass([root.classNames.hover, root.classNames.visible].join(' '))\n            // select other items and included items\n            .parent().find('.context-menu-item').not($this)\n            .removeClass(root.classNames.visible)\n            .filter('.' + root.classNames.hover)\n            .trigger('contextmenu:blur');\n\n        // remember selected\n        opt.$selected = root.$selected = $this;\n\n        if (opt && opt.$node && opt.$node.hasClass('context-menu-submenu')) {\n            opt.$node.addClass(root.classNames.hover);\n        }\n\n        // position sub-menu - do after show so dumb $.ui.position can keep up\n        if (opt.$node) {\n            root.positionSubmenu.call(opt.$node, e, opt.$menu);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {ContextMenuEvent|JQuery.Event} e\n     */\n    blurItem(e) {\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const opt = data.contextMenu;\n        const root = data.contextMenuRoot;\n\n        if (root.autoHide) { // for tablets and touch screens this needs to remain\n            $this.removeClass(root.classNames.visible);\n        }\n        $this.removeClass(root.classNames.hover);\n        opt.$selected = null;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuEventHandler.js","/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\n *\n * @instance\n * @function external:jQuery.fn.contextmenu\n *\n * @param {(string|Object)} operation\n * @returns {JQuery}\n */\nexport default function (operation) {\n    const $t = this;\n    const $o = operation;\n    if ($t.length > 0) { // this is not a build on demand menu\n        if (typeof operation === 'undefined') {\n            $t.first().trigger('contextmenu');\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\n            $t.first().trigger($.Event('contextmenu', {\n                pageX: operation.x,\n                pageY: operation.y,\n                mouseButton: operation.button\n            }));\n        } else if (operation === 'hide') {\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n            if ($menu) {\n                $menu.trigger('contextmenu:hide');\n            }\n        } else if (operation === 'destroy') {\n            $.contextMenu('destroy', {context: this});\n        } else if ($.isPlainObject(operation)) {\n            operation.context = this;\n            $.contextMenu('create', operation);\n        } else if (operation) {\n            $t.removeClass('context-menu-disabled');\n        } else if (!operation) {\n            $t.addClass('context-menu-disabled');\n        }\n    } else {\n        // eslint-disable-next-line no-undef\n        $.each($.contextMenu.menus, function () {\n            if (this.selector === $t.selector) {\n                $o.data = this;\n\n                $.extend($o.data, {trigger: 'demand'});\n            }\n        });\n\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\n    }\n\n    return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/jquery/contextMenuFunction.js"],"sourceRoot":""}