{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap faa861863a1a1cbf942e","webpack:///./src/js/defaults/index.js","webpack:///./src/js/contextmenu.js","webpack:///./src/js/classes/ContextMenu.js","webpack:///./src/js/classes/ContextMenuOperations.js","webpack:///./src/js/classes/ContextMenuHelper.js","webpack:///./src/js/classes/ContextMenuItemTypes.js","webpack:///./src/js/defaults/position.js","webpack:///./src/js/classes/ContextMenuHtml5Builder.js","webpack:///./src/js/classes/ContextMenuEventHandler.js","webpack:///./src/js/jquery/contextMenuFunction.js"],"names":["root","factory","exports","module","define","amd","ContextMenu","self","this","e","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","value","_position","selector","appendTo","trigger","autoHide","delay","reposition","hideOnSecondTrigger","selectableSubMenu","className","classNames","hover","disabled","visible","notSelectable","icon","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","iconLoadingClass","zIndex","animation","duration","show","hide","events","$","noop","activated","callback","items","build","types","determinePosition","position","positionSubmenu","a","manager","_ContextMenu2","contextMenu","operation","options","execute","getInputValues","currentMenuData","data","setInputValues","fromMenu","element","html5builder","defaults","handle","handler","operations","menus","namespaces","fn","_contextMenuFunction2","r","_ContextMenuHtml5Builder2","_defaults2","_ContextMenuEventHandler2","_ContextMenuOperations2","initialized","counter","key","normalizedArguments","normalizeArguments","update","create","destroy","html5","Error","buildOptions","document","body","window","each","id","css","_this","$visibleMenu","_hasContext","context","keys","forEach","ns","is","filter","length","contextMenuRoot","$trigger","find","force","$menu","remove","off","$currentTrigger","match","isEmptyObject","itemClick","itemClickEvent","contextMenuItemObj","contextmenu:focus.contextMenu","focusItem","contextmenu:blur.contextMenu","blurItem","contextmenu.contextMenu","abortevent","mouseenter.contextMenu","itemMouseenter","mouseleave.contextMenu","itemMouseleave","on","contextmenu:hide.contextMenu","hideMenu","prevcommand.contextMenu","prevItem","nextcommand.contextMenu","nextItem","menuMouseenter","menuMouseleave","inputClick","contextmenu","mouseenter","mouseleave","click","menu","userOptions","extend","first","contextMenuData","inputs","item","type","selected","radio","$input","val","prop","ContextMenuOperations","TypeError","menuData","x","y","additionalZValue","_ContextMenuHelper2","zindex","layer","addClass","pos","offset","right","left","outerWidth","bottom","top","outerHeight","$layer","hovering","pageX","pageY","setTimeout","_typeof","removeData","removeClass","$selected","rootMenuData","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","text","_afterAccesskey","isHtmlName","accesskey","html","k","accesskeys","$t","$label","_ContextMenuItemTypes2","separator","$node","contextMenuKey","ak","aks","splitAccesskey","matched","RegExp","commands","isFunction","callbacks","submenu","hasTypes","attr","textarea","height","checkbox","prependTo","select","then","processPromises","focusInput","blurInput","_icon","substring","support","eventSelectstart","nested","domMenu","display","getBoundingClientRect","Math","ceil","width","minWidth","maxWidth","index","resize","addBack","children","$item","$window","z-index","opacity","background-color","insertBefore","layerClick","style","promise","finishPromiseProcess","errorPromise","errorItem","error","console","log","bind","$menuOffset","winHeight","winScrollTop","scrollTop","menuHeight","overflow-x","overflow-y","ContextMenuHelper","zin","$tt","max","parseInt","parent","indexOf","toLowerCase","split","charAt","toUpperCase","push","simple","ui","my","at","of","collision","offsetParentOffset","offsetParent","scrollLeft","ContextMenuHtml5Builder","node","$this","$children","builder","nodeName","label","inputLabel","clone","_defaults","ContextMenuEventHandler","hoveract","preventDefault","stopImmediatePropagation","currentTarget","originalEvent","mouseButton","hasClass","built","showMenu","Event","button","$related","relatedTarget","$document","closest","mousemove","timer","clearTimeout","target","triggerAction","elementFromPoint","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","one","isInput","stopPropagation","targetZIndex","getZIndexOfTriggerTarget","parentElement","keyCode","keyStop","shiftKey","blur","$parent","itemdata","String","fromCharCode","$s","$prev","prev","last","$round","focus","$next","next","targetMenu","join","not","$o","isPlainObject"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ContextMenu\"] = factory();\n\telse\n\t\troot[\"ContextMenu\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap faa861863a1a1cbf942e","import {determinePosition, positionSubmenu, position} from './position';\r\n\r\n/**\r\n * @class ContextMenuData\r\n * @augments ContextMenuOptions\r\n * @instance\r\n * @interface\r\n *\r\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\r\n * @property {JQuery} $layer - The opened layer when the menu is opened.\r\n * @property {JQuery} $node - The menu node.\r\n * @property {JQuery} $trigger - The element that triggered opening the menu.\r\n * @property {JQuery} $selected - Reference to the `<li>` command element.\r\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\r\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\r\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\r\n * @property {ContextMenu} manager - The contextmenu manager instance.\r\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\r\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\r\n * @property {?boolean} isInput - We are currently originating events from an input.\r\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\r\n * @property {Object<string, ContextMenuItemTypeCallback>} types - Custom ContextMenuItemTypes, key is the {@link ContextMenuItem} type property, value is a {@link ContextMenuItemTypeCallback} callback.\r\n *\r\n * @property {boolean} hovering Currently hovering, root menu only.\r\n */\r\n\r\n/**\r\n * @class ContextMenuOptions\r\n * @instance\r\n * @interface\r\n * @classdesc\r\n ## Register new contextMenu\r\n\r\n To register a new contextMenu:\r\n\r\n ```javascript\r\n $.contextMenu( contextMenuOptions );\r\n ```\r\n\r\n ## Update contextMenu state\r\n\r\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\r\n\r\n ```javascript\r\n $('.context-menu-one').contextMenu('update'); // update single menu\r\n $.contextMenu('update') // update all open menus\r\n ```\r\n\r\n * @property {null|string} selector - Selector on which the contextMenu triggers.\r\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\r\n * @property {JQuery.Selector|DOMElement} [appendTo=document.body] - Specifies the selector `string` or `DOMElement` the generated menu is to be appended to.\r\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\r\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\r\n\r\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\r\n\r\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\r\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\r\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\r\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\r\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\r\n * @property {number|Function} zIndex=1 - offset to add to zIndex\r\n * @property {string} className - Class to be appended to the root menu.\r\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\r\n * @property {string} classNames.hover=context-menu-hover\r\n * @property {string} classNames.disabled=context-menu-disabled\r\n * @property {string} classNames.visible=context-menu-visible\r\n * @property {string} classNames.notSelectable=context-menu-not-selectable\r\n * @property {string} classNames.icon=context-menu-icon\r\n * @property {string} classNames.iconEdit=context-menu-icon-edit\r\n * @property {string} classNames.iconCut=context-menu-icon-cut\r\n * @property {string} classNames.iconCopy=context-menu-icon-copy\r\n * @property {string} classNames.iconPaste=context-menu-icon-paste\r\n * @property {string} classNames.iconDelete=context-menu-icon-delete\r\n * @property {string} classNames.iconAdd=context-menu-icon-add\r\n * @property {string} classNames.iconQuit=context-menu-icon-quit\r\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\r\n * @property {Object} animation - Animation settings\r\n * @property {number} animation.duration=50\r\n * @property {string} animation.show='slideDown'\r\n * @property {string} animation.hide='slideUp'\r\n * @property {Object} events - Event callbacks. This is the trigger element, first argument is the event, and the second argumant {@link ContextMenuData}.\r\n * @property {Function} events.show - Called when contextmenu is shown.\r\n * @property {Function} events.hide - Called when contextmenu is hidden.\r\n * @property {Function} events.activated - Called when contextmenu is activated.\r\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\r\n * @property {ContextMenuBuildCallback} build=false\r\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\r\n\r\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\r\n\r\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\r\n\r\n * @property {(determinePosition)} determinePosition\r\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\r\n * @property {boolean} _hasContext - Set to true if the call was done from an element.\r\n */\r\nexport default {\r\n    selector: null,\r\n\r\n    // where to append the menu to\r\n    appendTo: null,\r\n\r\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\r\n    trigger: 'right',\r\n\r\n    // hide menu when mouse leaves trigger / menu elements\r\n    autoHide: false,\r\n\r\n    // ms to wait before showing a hover-triggered context menu\r\n    delay: 200,\r\n\r\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\r\n    // as long as the trigger happened on one of the trigger-element's child nodes\r\n    reposition: true,\r\n\r\n    // Flag denoting if a second trigger should close the menu, as long as\r\n    // the trigger happened on one of the trigger-element's child nodes.\r\n    // This overrides the reposition option.\r\n    hideOnSecondTrigger: false,\r\n\r\n    // ability to select submenu\r\n    selectableSubMenu: false,\r\n\r\n    className: '',\r\n\r\n    // Default classname configuration to be able avoid conflicts in frameworks\r\n    classNames: {\r\n        hover: 'context-menu-hover', // Item hover\r\n        disabled: 'context-menu-disabled', // Item disabled\r\n        visible: 'context-menu-visible', // Item visible\r\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\r\n\r\n        icon: 'context-menu-icon',\r\n        iconEdit: 'context-menu-icon-edit',\r\n        iconCut: 'context-menu-icon-cut',\r\n        iconCopy: 'context-menu-icon-copy',\r\n        iconPaste: 'context-menu-icon-paste',\r\n        iconDelete: 'context-menu-icon-delete',\r\n        iconAdd: 'context-menu-icon-add',\r\n        iconQuit: 'context-menu-icon-quit',\r\n        iconLoadingClass: 'context-menu-icon-loading'\r\n    },\r\n\r\n    // offset to add to zIndex\r\n    zIndex: 1,\r\n\r\n    // show hide animation settings\r\n    animation: {\r\n        duration: 50,\r\n        show: 'slideDown',\r\n        hide: 'slideUp'\r\n    },\r\n\r\n    // events\r\n    events: {\r\n        show: $.noop,\r\n        hide: $.noop,\r\n        activated: $.noop\r\n    },\r\n\r\n    // default callback\r\n    callback: null,\r\n\r\n    // list of contextMenu items\r\n    items: {},\r\n\r\n    // Build callback for creating a menu dynamicly\r\n    build: false,\r\n\r\n    types: {},\r\n\r\n    // determine position to show menu at\r\n    determinePosition,\r\n\r\n    // position menu\r\n    position,\r\n\r\n    // position the sub-menu\r\n    positionSubmenu\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/index.js","'use strict';\r\nimport '../sass/jquery.contextMenu.scss';\r\nimport ContextMenu from './classes/ContextMenu';\r\nimport elementFunction from './jquery/contextMenuFunction';\r\n\r\n/**\r\n * The jQuery namespace.\r\n * @external \"jQuery\"\r\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\r\n */\r\n\r\n/**\r\n * @class jQuery.contextMenu\r\n * @function external:jQuery.contextMenu\r\n * @instance\r\n *\r\n * @param {string} operation\r\n * @param {ContextMenuOptions} options\r\n *\r\n * @property {ContextMenu} manager\r\n * @property {getInputValues} getInputValues\r\n * @property {setInputValues} setInputValues\r\n * @property {fromMenu} ContextMenuHtml5Builder#fromMenu\r\n * @property {ContextMenuOptions} defaults\r\n * @property {ContextMenuEventHandler} handle\r\n * @property {ContextMenuOperations} operations\r\n * @property {Object<string, ContextMenuData>} menus\r\n */\r\nconst manager = new ContextMenu();\r\n\r\n// manage contextMenu instances\r\nlet contextMenu = function (operation, options) {\r\n    manager.execute(operation, options);\r\n};\r\n\r\ncontextMenu.getInputValues = function (currentMenuData, data) {\r\n    return manager.getInputValues(currentMenuData, data);\r\n};\r\ncontextMenu.setInputValues = function (currentMenuData, data) {\r\n    return manager.getInputValues(currentMenuData, data);\r\n};\r\ncontextMenu.fromMenu = function (element) {\r\n    return manager.html5builder.fromMenu(element);\r\n};\r\n\r\n// make defaults accessible\r\ncontextMenu.defaults = manager.defaults;\r\ncontextMenu.types = manager.defaults.types;\r\ncontextMenu.manager = manager;\r\n\r\n// export internal functions - undocumented, for hacking only!\r\ncontextMenu.handle = manager.handler;\r\ncontextMenu.operations = manager.operations;\r\ncontextMenu.menus = manager.menus;\r\ncontextMenu.namespaces = manager.namespaces;\r\n\r\n$.fn.contextMenu = elementFunction;\r\n$.contextMenu = contextMenu;\r\n\r\nmodule.exports = ContextMenu;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/contextmenu.js","import ContextMenuOperations from './ContextMenuOperations';\r\nimport defaults from '../defaults';\r\nimport ContextMenuHtml5Builder from './ContextMenuHtml5Builder';\r\nimport ContextMenuEventHandler from './ContextMenuEventHandler';\r\n\r\nexport default class ContextMenu {\r\n    /**\r\n     * @constructor\r\n     * @constructs ContextMenu\r\n     * @classdesc The ContextMenu is the core class that manages contextmenu's. You can call this class directly and skip going through jQuery.\r\n     * @class ContextMenu\r\n     *\r\n     * @example\r\n     * // You can call this class directly and skip going through jQuery, although it still requires jQuery to run.\r\n     * const manager = new ContextMenu();\r\n     * manager.execute(\"create\", options);\r\n     *\r\n     * @property {ContextMenuOptions|Object} defaults\r\n     * @property {ContextMenuEventHandler} handle\r\n     * @property {ContextMenuOperations} operations\r\n     * @property {Object<string, ContextMenuData>} menus\r\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\r\n     * @property {boolean} initialized - Flag the menu as initialized.\r\n     */\r\n    constructor() {\r\n        this.html5builder = new ContextMenuHtml5Builder();\r\n        this.defaults = defaults;\r\n        this.handler = new ContextMenuEventHandler();\r\n        this.operations = new ContextMenuOperations();\r\n        this.namespaces = {};\r\n        this.initialized = false;\r\n        this.menus = {};\r\n        this.counter = 0;\r\n    }\r\n\r\n    /**\r\n     * @method execute\r\n     * @memberOf ContextMenu\r\n     * @instance\r\n     *\r\n     * @param {(string|ContextMenuOptions)} operation\r\n     * @param {(string|ContextMenuOptions)} options\r\n     * @return {ContextMenu}\r\n     */\r\n    execute(operation, options) {\r\n        const normalizedArguments = this.normalizeArguments(operation, options);\r\n        operation = normalizedArguments.operation;\r\n        options = normalizedArguments.options;\r\n\r\n        switch (operation) {\r\n            case 'update':\r\n                // Updates visibility and such\r\n                this.update(options);\r\n                break;\r\n\r\n            case 'create':\r\n                // no selector no joy\r\n                this.create(options);\r\n                break;\r\n\r\n            case 'destroy':\r\n                this.destroy(options);\r\n                break;\r\n\r\n            case 'html5':\r\n                this.html5(options);\r\n                break;\r\n\r\n            default:\r\n                throw new Error('Unknown operation \"' + operation + '\"');\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * if <menuitem> is not handled by the browser, or options was a bool true, initialize $.contextMenu for them.\r\n     * @param {ContextMenuOptions|boolean} options\r\n     */\r\n    html5(options) {\r\n        options = this.buildOptions(options);\r\n\r\n        const menuItemSupport = ('contextMenu' in document.body && 'HTMLMenuItemElement' in window);\r\n\r\n        if (!menuItemSupport || (typeof options === 'boolean' && options === true)) {\r\n            $('menu[type=\"context\"]').each(function () {\r\n                if (this.id) {\r\n                    $.contextMenu({\r\n                        selector: '[contextmenu=' + this.id + ']',\r\n                        items: $.contextMenu.fromMenu(this)\r\n                    });\r\n                }\r\n            }).css('display', 'none');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy the ContextMenu\r\n     * @param {ContextMenuOptions} options\r\n     */\r\n    destroy(options) {\r\n        options = this.buildOptions(options);\r\n\r\n        let $visibleMenu;\r\n        if (options._hasContext) {\r\n            // get proper options\r\n            const context = options.context;\r\n\r\n            Object.keys(this.menus).forEach((ns) => {\r\n                let o = this.menus[ns];\r\n\r\n                if (!o) {\r\n                    return true;\r\n                }\r\n\r\n                // Is this menu equest to the context called from\r\n                if (!$(context).is(o.selector)) {\r\n                    return true;\r\n                }\r\n\r\n                $visibleMenu = $('.context-menu-list').filter(':visible');\r\n                if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\r\n                    $visibleMenu.trigger('contextmenu:hide', {force: true});\r\n                }\r\n\r\n                if (this.menus[o.ns].$menu) {\r\n                    this.menus[o.ns].$menu.remove();\r\n                }\r\n                delete this.menus[o.ns];\r\n\r\n                $(o.context).off(o.ns);\r\n                return true;\r\n            });\r\n        } else if (!options.selector) {\r\n            $(document).off('.contextMenu .contextMenuAutoHide');\r\n\r\n            Object.keys(this.menus).forEach((ns) => {\r\n                let o = this.menus[ns];\r\n                $(o.context).off(o.ns);\r\n            });\r\n\r\n            this.namespaces = {};\r\n            this.menus = {};\r\n            this.counter = 0;\r\n            this.initialized = false;\r\n\r\n            $('#context-menu-layer, .context-menu-list').remove();\r\n        } else if (this.namespaces[options.selector]) {\r\n            $visibleMenu = $('.context-menu-list').filter(':visible');\r\n            if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(options.selector)) {\r\n                $visibleMenu.trigger('contextmenu:hide', {force: true});\r\n            }\r\n\r\n            if (this.menus[this.namespaces[options.selector]].$menu) {\r\n                this.menus[this.namespaces[options.selector]].$menu.remove();\r\n            }\r\n            delete this.menus[this.namespaces[options.selector]];\r\n\r\n            $(document).off(this.namespaces[options.selector]);\r\n        }\r\n        this.handler.$currentTrigger = null;\r\n    }\r\n\r\n    /**\r\n     * Create a ContextMenu\r\n     * @param {ContextMenuOptions} options\r\n     */\r\n    create(options) {\r\n        options = this.buildOptions(options);\r\n\r\n        if (!options.selector) {\r\n            throw new Error('No selector specified');\r\n        }\r\n        // make sure internal classes are not bound to\r\n        if (options.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\r\n            throw new Error('Cannot bind to selector \"' + options.selector + '\" as it contains a reserved className');\r\n        }\r\n        if (!options.build && (!options.items || $.isEmptyObject(options.items))) {\r\n            throw new Error('No Items specified');\r\n        }\r\n        this.counter++;\r\n        options.ns = '.contextMenu' + this.counter;\r\n        if (!options._hasContext) {\r\n            this.namespaces[options.selector] = options.ns;\r\n        }\r\n        this.menus[options.ns] = options;\r\n\r\n        // default to right click\r\n        if (!options.trigger) {\r\n            options.trigger = 'right';\r\n        }\r\n\r\n        if (!this.initialized) {\r\n            const itemClick = options.itemClickEvent === 'click' ? 'click.contextMenu' : 'mouseup.contextMenu';\r\n            const contextMenuItemObj = {\r\n                // 'mouseup.contextMenu': this.handler.itemClick,\r\n                // 'click.contextMenu': this.handler.itemClick,\r\n                'contextmenu:focus.contextMenu': this.handler.focusItem,\r\n                'contextmenu:blur.contextMenu': this.handler.blurItem,\r\n                'contextmenu.contextMenu': this.handler.abortevent,\r\n                'mouseenter.contextMenu': this.handler.itemMouseenter,\r\n                'mouseleave.contextMenu': this.handler.itemMouseleave\r\n            };\r\n            contextMenuItemObj[itemClick] = this.handler.itemClick;\r\n\r\n            // make sure item click is registered first\r\n            $(document)\r\n                .on({\r\n                    'contextmenu:hide.contextMenu': this.handler.hideMenu,\r\n                    'prevcommand.contextMenu': this.handler.prevItem,\r\n                    'nextcommand.contextMenu': this.handler.nextItem,\r\n                    'contextmenu.contextMenu': this.handler.abortevent,\r\n                    'mouseenter.contextMenu': this.handler.menuMouseenter,\r\n                    'mouseleave.contextMenu': this.handler.menuMouseleave\r\n                }, '.context-menu-list')\r\n                .on('mouseup.contextMenu', '.context-menu-input', this.handler.inputClick)\r\n                .on(contextMenuItemObj, '.context-menu-item');\r\n\r\n            this.initialized = true;\r\n        }\r\n\r\n        // engage native contextmenu event\r\n        options.context\r\n            .on('contextmenu' + options.ns, options.selector, options, this.handler.contextmenu);\r\n\r\n        switch (options.trigger) {\r\n            case 'hover':\r\n                options.context\r\n                    .on('mouseenter' + options.ns, options.selector, options, this.handler.mouseenter)\r\n                    .on('mouseleave' + options.ns, options.selector, options, this.handler.mouseleave);\r\n                break;\r\n\r\n            case 'left':\r\n                options.context.on('click' + options.ns, options.selector, options, this.handler.click);\r\n                break;\r\n            case 'touchstart':\r\n                options.context.on('touchstart' + options.ns, options.selector, options, this.handler.click);\r\n                break;\r\n            /*\r\n                     default:\r\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\r\n                     $document\r\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\r\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\r\n                     break;\r\n                     */\r\n        }\r\n\r\n        // create menu\r\n        if (!options.build) {\r\n            this.operations.create(null, options);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the ContextMenu or all ContextMenu's\r\n     * @param {ContextMenuOptions} options\r\n     */\r\n    update(options) {\r\n        options = this.buildOptions(options);\r\n\r\n        if (options._hasContext) {\r\n            this.operations.update(null, $(options.context).data('contextMenu'), $(options.context).data('contextMenuRoot'));\r\n        } else {\r\n            for (let menu in this.menus) {\r\n                if (this.menus.hasOwnProperty(menu)) {\r\n                    this.operations.update(null, this.menus[menu]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Build the options, by applying the Manager, defaults, user options and normalizing the context.\r\n     * @param {ContextMenuOptions} userOptions\r\n     * @return {ContextMenuOptions}\r\n     */\r\n    buildOptions(userOptions) {\r\n        if (typeof userOptions === 'string') {\r\n            userOptions = {selector: userOptions};\r\n        }\r\n\r\n        const options = $.extend(true, {manager: this}, this.defaults, userOptions);\r\n\r\n        if (!options.context || !options.context.length) {\r\n            options.context = $(document);\r\n            options._hasContext = false;\r\n        } else {\r\n            // you never know what they throw at you...\r\n            options.context = $(options.context).first();\r\n            options._hasContext = !$(options.context).is($(document));\r\n        }\r\n        return options;\r\n    }\r\n\r\n    /**\r\n     * @param {string|Object} operation\r\n     * @param {string|Object|ContextMenuOptions} options\r\n     * @returns {{operation: string, options: ContextMenuOptions}}\r\n     */\r\n    normalizeArguments(operation, options) {\r\n        if (typeof operation !== 'string') {\r\n            options = operation;\r\n            operation = 'create';\r\n        }\r\n\r\n        if (typeof options === 'string') {\r\n            options = {selector: options};\r\n        } else if (typeof options === 'undefined') {\r\n            options = {};\r\n        }\r\n        return {operation, options};\r\n    }\r\n\r\n    /**\r\n     * import values into `<input>` commands\r\n     *\r\n     * @method setInputValues\r\n     * @memberOf ContextMenu\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\r\n     * @param {Object} data - Values to set\r\n     * @return {undefined}\r\n     */\r\n    setInputValues(contextMenuData, data) {\r\n        if (typeof data === 'undefined') {\r\n            data = {};\r\n        }\r\n\r\n        $.each(contextMenuData.inputs, function (key, item) {\r\n            switch (item.type) {\r\n                case 'text':\r\n                case 'textarea':\r\n                    item.value = data[key] || '';\r\n                    break;\r\n\r\n                case 'checkbox':\r\n                    item.selected = !!data[key];\r\n                    break;\r\n\r\n                case 'radio':\r\n                    item.selected = (data[item.radio] || '') === item.value;\r\n                    break;\r\n\r\n                case 'select':\r\n                    item.selected = data[key] || '';\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * export values from `<input>` commands\r\n     *\r\n     * @method getInputValues\r\n     * @memberOf ContextMenu\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\r\n     * @param {Object} data - Values object\r\n     * @return {Object} - Values of input elements\r\n     */\r\n    getInputValues(contextMenuData, data) {\r\n        if (typeof data === 'undefined') {\r\n            data = {};\r\n        }\r\n\r\n        $.each(contextMenuData.inputs, function (key, item) {\r\n            switch (item.type) {\r\n                case 'text':\r\n                case 'textarea':\r\n                case 'select':\r\n                    data[key] = item.$input.val();\r\n                    break;\r\n\r\n                case 'checkbox':\r\n                    data[key] = item.$input.prop('checked');\r\n                    break;\r\n\r\n                case 'radio':\r\n                    if (item.$input.prop('checked')) {\r\n                        data[item.radio] = item.value;\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return data;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenu.js","import ContextMenuHelper from './ContextMenuHelper';\r\nimport ContextMenuItemTypes from './ContextMenuItemTypes';\r\n\r\nexport default class ContextMenuOperations {\r\n    /**\r\n     * @constructor\r\n     * @constructs ContextMenuOperations\r\n     */\r\n    constructor() {\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Show the menu.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} menuData\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    show(e, menuData, x, y) {\r\n        const $trigger = $(this);\r\n        const css = {};\r\n\r\n        // hide any open menus\r\n        $('#context-menu-layer').trigger('mousedown');\r\n\r\n        // backreference for callbacks\r\n        menuData.$trigger = $trigger;\r\n\r\n        // show event\r\n        if (menuData.events.show.call($trigger, e, menuData) === false) {\r\n            menuData.manager.handler.$currentTrigger = null;\r\n            return;\r\n        }\r\n\r\n        // create or update context menu\r\n        menuData.manager.operations.update.call($trigger, e, menuData);\r\n\r\n        // position menu\r\n        menuData.position.call($trigger, e, menuData, x, y);\r\n\r\n        // make sure we're in front\r\n        if (menuData.zIndex) {\r\n            let additionalZValue = menuData.zIndex;\r\n            // If menuData.zIndex is a function, call the function to get the right zIndex.\r\n            if (typeof menuData.zIndex === 'function') {\r\n                additionalZValue = menuData.zIndex.call($trigger, menuData);\r\n            }\r\n            css.zIndex = ContextMenuHelper.zindex($trigger) + additionalZValue;\r\n        }\r\n\r\n        // add layer\r\n        menuData.manager.operations.layer.call(menuData.$menu, e, menuData, css.zIndex);\r\n\r\n        // adjust sub-menu zIndexes\r\n        menuData.$menu.find('ul').css('zIndex', css.zIndex + 1);\r\n\r\n        // position and show context menu\r\n        menuData.$menu.css(css)[menuData.animation.show](menuData.animation.duration, () => {\r\n            $trigger.trigger('contextmenu:visible');\r\n\r\n            menuData.manager.operations.activated(e, menuData);\r\n            menuData.events.activated($trigger, e, menuData);\r\n        });\r\n        // make options available and set state\r\n        $trigger\r\n            .data('contextMenu', menuData)\r\n            .addClass('context-menu-active');\r\n\r\n        // register key handler\r\n        $(document).off('keydown.contextMenu').on('keydown.contextMenu', menuData, menuData.manager.handler.key);\r\n        // register autoHide handler\r\n        if (menuData.autoHide) {\r\n            // mouse position handler\r\n            $(document).on('mousemove.contextMenuAutoHide', function (e) {\r\n                // need to capture the offset on mousemove,\r\n                // since the page might've been scrolled since activation\r\n                const pos = $trigger.offset();\r\n                pos.right = pos.left + $trigger.outerWidth();\r\n                pos.bottom = pos.top + $trigger.outerHeight();\r\n\r\n                if (menuData.$layer && !menuData.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\r\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\r\n                    setTimeout(function () {\r\n                        if (!menuData.hovering && menuData.$menu !== null && typeof menuData.$menu !== 'undefined') {\r\n                            menuData.$menu.trigger('contextmenu:hide');\r\n                        }\r\n                    }, 50);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hide the menu.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} menuData\r\n     * @param {boolean} force\r\n     */\r\n    hide(e, menuData, force) {\r\n        const $trigger = $(this);\r\n        if (typeof menuData !== 'object' && $trigger.data('contextMenu')) {\r\n            menuData = $trigger.data('contextMenu');\r\n        } else if (typeof menuData !== 'object') {\r\n            return;\r\n        }\r\n\r\n        // hide event\r\n        if (!force && menuData.events && menuData.events.hide.call($trigger, e, menuData) === false) {\r\n            return;\r\n        }\r\n\r\n        // remove options and revert state\r\n        $trigger\r\n            .removeData('contextMenu')\r\n            .removeClass('context-menu-active');\r\n\r\n        if (menuData.$layer) {\r\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\r\n            setTimeout((function ($layer) {\r\n                return function () {\r\n                    $layer.remove();\r\n                };\r\n            })(menuData.$layer), 10);\r\n\r\n            try {\r\n                delete menuData.$layer;\r\n            } catch (e) {\r\n                menuData.$layer = null;\r\n            }\r\n        }\r\n\r\n        // remove handle\r\n        menuData.manager.handler.$currentTrigger = null;\r\n        // remove selected\r\n        menuData.$menu.find('.' + menuData.classNames.hover).trigger('contextmenu:blur');\r\n        menuData.$selected = null;\r\n        // collapse all submenus\r\n        menuData.$menu.find('.' + menuData.classNames.visible).removeClass(menuData.classNames.visible);\r\n        // unregister key and mouse handlers\r\n        $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');\r\n        // hide menu\r\n        if (menuData.$menu) {\r\n            menuData.$menu[menuData.animation.hide](menuData.animation.duration, function () {\r\n                // tear down dynamically built menu after animation is completed.\r\n                if (menuData.build) {\r\n                    menuData.$menu.remove();\r\n                    Object.keys(menuData).forEach((key) => {\r\n                        switch (key) {\r\n                            case 'ns':\r\n                            case 'selector':\r\n                            case 'build':\r\n                            case 'trigger':\r\n                                return true;\r\n\r\n                            default:\r\n                                menuData[key] = undefined;\r\n                                try {\r\n                                    delete menuData[key];\r\n                                } catch (e) {\r\n                                }\r\n                                return true;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                setTimeout(function () {\r\n                    $trigger.trigger('contextmenu:hidden');\r\n                }, 10);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a menu based on the options. Also created submenus.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} currentMenuData\r\n     * @param {ContextMenuData?} rootMenuData\r\n     */\r\n    create(e, currentMenuData, rootMenuData) {\r\n        if (typeof rootMenuData === 'undefined') {\r\n            rootMenuData = currentMenuData;\r\n        }\r\n\r\n        // create contextMenu\r\n        currentMenuData.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(currentMenuData.className || '').data({\r\n            'contextMenu': currentMenuData,\r\n            'contextMenuRoot': rootMenuData\r\n        });\r\n\r\n        $.each(['callbacks', 'commands', 'inputs'], function (i, k) {\r\n            currentMenuData[k] = {};\r\n            if (!rootMenuData[k]) {\r\n                rootMenuData[k] = {};\r\n            }\r\n        });\r\n\r\n        if (!rootMenuData.accesskeys) {\r\n            rootMenuData.accesskeys = {};\r\n        }\r\n\r\n        function createNameNode(item) {\r\n            const $name = $('<span></span>');\r\n            if (item._accesskey) {\r\n                if (item._beforeAccesskey) {\r\n                    $name.append(document.createTextNode(item._beforeAccesskey));\r\n                }\r\n                $('<span></span>')\r\n                    .addClass('context-menu-accesskey')\r\n                    .text(item._accesskey)\r\n                    .appendTo($name);\r\n                if (item._afterAccesskey) {\r\n                    $name.append(document.createTextNode(item._afterAccesskey));\r\n                }\r\n            } else {\r\n                if (item.isHtmlName) {\r\n                    // restrict use with access keys\r\n                    if (typeof item.accesskey !== 'undefined') {\r\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\r\n                    }\r\n                    $name.html(item.name);\r\n                } else {\r\n                    $name.text(item.name);\r\n                }\r\n            }\r\n            return $name;\r\n        }\r\n\r\n        // create contextMenu items\r\n\r\n        $.each(currentMenuData.items, function (key, item) {\r\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\r\n            let $label = null;\r\n            let $input = null;\r\n\r\n            // iOS needs to see a click-event bound to an element to actually\r\n            // have the TouchEvents infrastructure trigger the click event\r\n            $t.on('click', $.noop);\r\n\r\n            // Make old school string separator a real item so checks wont be\r\n            // akward later.\r\n            // And normalize 'cm_separator' into 'cm_separator'.\r\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\r\n                item = {type: ContextMenuItemTypes.separator};\r\n            }\r\n\r\n            item.$node = $t.data({\r\n                'contextMenu': currentMenuData,\r\n                'contextMenuRoot': rootMenuData,\r\n                'contextMenuKey': key\r\n            });\r\n\r\n            // register accesskey\r\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\r\n            if (typeof item.accesskey !== 'undefined') {\r\n                const aks = ContextMenuHelper.splitAccesskey(item.accesskey);\r\n                for (let i = 0, ak; ak = aks[i]; i++) {\r\n                    if (!rootMenuData.accesskeys[ak]) {\r\n                        rootMenuData.accesskeys[ak] = item;\r\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\r\n                        if (matched) {\r\n                            item._beforeAccesskey = matched[1];\r\n                            item._accesskey = matched[2];\r\n                            item._afterAccesskey = matched[3];\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (item.type && rootMenuData.types[item.type]) {\r\n                // run custom type handler\r\n                rootMenuData.types[item.type].call($t, e, item, currentMenuData, rootMenuData);\r\n                // register commands\r\n                $.each([currentMenuData, rootMenuData], function (i, k) {\r\n                    k.commands[key] = item;\r\n                    // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\r\n                    // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\r\n                    if ($.isFunction(item.callback) && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\r\n                        k.callbacks[key] = item.callback;\r\n                    }\r\n                });\r\n            } else {\r\n                // add label for input\r\n                if (item.type === ContextMenuItemTypes.separator) {\r\n                    $t.addClass('context-menu-separator ' + rootMenuData.classNames.notSelectable);\r\n                } else if (item.type === ContextMenuItemTypes.html) {\r\n                    $t.addClass('context-menu-html ' + rootMenuData.classNames.notSelectable);\r\n                } else if (item.type && item.type !== ContextMenuItemTypes.submenu) {\r\n                    $label = $('<label></label>').appendTo($t);\r\n                    createNameNode(item).appendTo($label);\r\n\r\n                    $t.addClass('context-menu-input');\r\n                    currentMenuData.hasTypes = true;\r\n                    $.each([currentMenuData, rootMenuData], function (i, k) {\r\n                        k.commands[key] = item;\r\n                        k.inputs[key] = item;\r\n                    });\r\n                } else if (item.items) {\r\n                    item.type = ContextMenuItemTypes.submenu;\r\n                }\r\n\r\n                switch (item.type) {\r\n                    case ContextMenuItemTypes.separator:\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.text:\r\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\r\n                            .attr('name', 'context-menu-input-' + key)\r\n                            .val(item.value || '')\r\n                            .appendTo($label);\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.textarea:\r\n                        $input = $('<textarea name=\"\"></textarea>')\r\n                            .attr('name', 'context-menu-input-' + key)\r\n                            .val(item.value || '')\r\n                            .appendTo($label);\r\n\r\n                        if (item.height) {\r\n                            $input.height(item.height);\r\n                        }\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.checkbox:\r\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\r\n                            .attr('name', 'context-menu-input-' + key)\r\n                            .val(item.value || '')\r\n                            .prop('checked', !!item.selected)\r\n                            .prependTo($label);\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.radio:\r\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\r\n                            .attr('name', 'context-menu-input-' + item.radio)\r\n                            .val(item.value || '')\r\n                            .prop('checked', !!item.selected)\r\n                            .prependTo($label);\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.select:\r\n                        $input = $('<select name=\"\"></select>')\r\n                            .attr('name', 'context-menu-input-' + key)\r\n                            .appendTo($label);\r\n                        if (item.options) {\r\n                            $.each(item.options, function (value, text) {\r\n                                $('<option></option>').val(value).text(text).appendTo($input);\r\n                            });\r\n                            $input.val(item.selected);\r\n                        }\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.submenu:\r\n                        createNameNode(item).appendTo($t);\r\n                        item.appendTo = item.$node;\r\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\r\n                        item.callback = null;\r\n\r\n                        // If item contains items, and this is a promise, we should create it later\r\n                        // check if subitems is of type promise. If it is a promise we need to create\r\n                        // it later, after promise has been resolved.\r\n                        if (typeof item.items.then === 'function') {\r\n                            // probably a promise, process it, when completed it will create the sub menu's.\r\n                            rootMenuData.manager.operations.processPromises(e, item, rootMenuData, item.items);\r\n                        } else {\r\n                            // normal submenu.\r\n                            rootMenuData.manager.operations.create(e, item, rootMenuData);\r\n                        }\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.html:\r\n                        $(item.html).appendTo($t);\r\n                        break;\r\n\r\n                    default:\r\n                        $.each([currentMenuData, rootMenuData], function (i, k) {\r\n                            k.commands[key] = item;\r\n                            // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\r\n                            // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\r\n                            if ($.isFunction(item.callback) && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\r\n                                k.callbacks[key] = item.callback;\r\n                            }\r\n                        });\r\n                        createNameNode(item).appendTo($t);\r\n                        break;\r\n                }\r\n\r\n                // disable key listener in <input>\r\n                if (item.type && item.type !== ContextMenuItemTypes.submenu && item.type !== ContextMenuItemTypes.html && item.type !== ContextMenuItemTypes.separator) {\r\n                    $input\r\n                        .on('focus', rootMenuData.manager.handler.focusInput)\r\n                        .on('blur', rootMenuData.manager.handler.blurInput);\r\n\r\n                    if (item.events) {\r\n                        $input.on(item.events, currentMenuData);\r\n                    }\r\n                }\r\n\r\n                // add icons\r\n                if (item.icon) {\r\n                    if ($.isFunction(item.icon)) {\r\n                        item._icon = item.icon.call(this, e, $t, key, item, currentMenuData, rootMenuData);\r\n                    } else {\r\n                        if (typeof (item.icon) === 'string' && item.icon.substring(0, 3) === 'fa-') {\r\n                            // to enable font awesome\r\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '--fa fa ' + item.icon;\r\n                        } else {\r\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '-' + item.icon;\r\n                        }\r\n                    }\r\n                    $t.addClass(item._icon);\r\n                }\r\n            }\r\n\r\n            // cache contained elements\r\n            item.$input = $input;\r\n            item.$label = $label;\r\n\r\n            // attach item to menu\r\n            $t.appendTo(currentMenuData.$menu);\r\n\r\n            // Disable text selection\r\n            if (!currentMenuData.hasTypes && $.support.eventSelectstart) {\r\n                // browsers support user-select: none,\r\n                // IE has a special event for text-selection\r\n                // browsers supporting neither will not be preventing text-selection\r\n                $t.on('selectstart.disableTextSelect', currentMenuData.manager.handler.abortevent);\r\n            }\r\n        });\r\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\r\n        if (!currentMenuData.$node) {\r\n            currentMenuData.$menu.css('display', 'none').addClass('context-menu-rootMenuData');\r\n        }\r\n        currentMenuData.$menu.appendTo(currentMenuData.appendTo || document.body);\r\n    }\r\n\r\n    /**\r\n     * Resize the menu to its content.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent} e\r\n     * @param {JQuery} $menu\r\n     * @param {boolean?} nested\r\n     */\r\n    resize(e, $menu, nested) {\r\n        let domMenu;\r\n        // determine widths of submenus, as CSS won't grow them automatically\r\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\r\n        // kinda sucks hard...\r\n\r\n        // determine width of absolutely positioned element\r\n        $menu.css({position: 'absolute', display: 'block'});\r\n        // don't apply yet, because that would break nested elements' widths\r\n        $menu.data('width',\r\n            (domMenu = $menu.get(0)).getBoundingClientRect\r\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\r\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\r\n        // reset styles so they allow nested elements to grow/shrink naturally\r\n        $menu.css({\r\n            position: 'static',\r\n            minWidth: '0px',\r\n            maxWidth: '100000px'\r\n        });\r\n        // identify width of nested menus\r\n        $menu.find('> li > ul').each((index, element) => {\r\n            e.data.manager.operations.resize(e, $(element), true);\r\n        });\r\n        // reset and apply changes in the end because nested\r\n        // elements' widths wouldn't be calculatable otherwise\r\n        if (!nested) {\r\n            $menu.find('ul').addBack().css({\r\n                position: '',\r\n                display: '',\r\n                minWidth: '',\r\n                maxWidth: ''\r\n            }).outerWidth(function () {\r\n                return $(this).data('width');\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData?} currentMenuData\r\n     * @param {ContextMenuData?} rootMenuData\r\n     */\r\n    update(e, currentMenuData, rootMenuData) {\r\n        const $trigger = this;\r\n        if (typeof rootMenuData === 'undefined') {\r\n            rootMenuData = currentMenuData;\r\n            rootMenuData.manager.operations.resize(e, currentMenuData.$menu);\r\n        }\r\n        // re-check disabled for each item\r\n        currentMenuData.$menu.children().each(function (index, element) {\r\n            let $item = $(element);\r\n            let key = $item.data('contextMenuKey');\r\n            let item = currentMenuData.items[key];\r\n\r\n            let disabled = ($.isFunction(item.disabled) && item.disabled.call($trigger, e, key, currentMenuData, rootMenuData)) || item.disabled === true;\r\n            let visible;\r\n\r\n            if ($.isFunction(item.visible)) {\r\n                visible = item.visible.call($trigger, e, key, currentMenuData, rootMenuData);\r\n            } else if (typeof item.visible !== 'undefined') {\r\n                visible = item.visible === true;\r\n            } else {\r\n                visible = true;\r\n            }\r\n            $item[visible ? 'show' : 'hide']();\r\n\r\n            // dis- / enable item\r\n            $item[disabled ? 'addClass' : 'removeClass'](rootMenuData.classNames.disabled);\r\n\r\n            if ($.isFunction(item.icon)) {\r\n                $item.removeClass(item._icon);\r\n                item._icon = item.icon.call(this, $trigger, $item, key, item);\r\n                $item.addClass(item._icon);\r\n            }\r\n\r\n            if (item.type) {\r\n                // dis- / enable input elements\r\n                $item.find('input, select, textarea').prop('disabled', disabled);\r\n\r\n                // update input states\r\n                switch (item.type) {\r\n                    case ContextMenuItemTypes.text:\r\n                    case ContextMenuItemTypes.textarea:\r\n                        item.$input.val(item.value || '');\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.checkbox:\r\n                    case ContextMenuItemTypes.radio:\r\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\r\n                        break;\r\n\r\n                    case ContextMenuItemTypes.select:\r\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (item.$menu) {\r\n                // update sub-menu\r\n                rootMenuData.manager.operations.update.call($trigger, e, item, rootMenuData);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create the overlay layer so we can capture the click outside the menu and close it.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} menuData\r\n     * @param {number} zIndex\r\n     * @returns {jQuery}\r\n     */\r\n    layer(e, menuData, zIndex) {\r\n        const $window = $(window);\r\n\r\n        // add transparent layer for click area\r\n        // filter and background for Internet Explorer, Issue #23\r\n        const $layer = menuData.$layer = $('<div id=\"context-menu-layer\"></div>')\r\n            .css({\r\n                height: $window.height(),\r\n                width: $window.width(),\r\n                display: 'block',\r\n                position: 'fixed',\r\n                'z-index': zIndex,\r\n                top: 0,\r\n                left: 0,\r\n                opacity: 0,\r\n                filter: 'alpha(opacity=0)',\r\n                'background-color': '#000'\r\n            })\r\n            .data('contextMenuRoot', menuData)\r\n            .insertBefore(this)\r\n            .on('contextmenu', menuData.manager.handler.abortevent)\r\n            .on('mousedown', menuData.manager.handler.layerClick);\r\n\r\n        // IE6 doesn't know position:fixed;\r\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\r\n            $layer.css({\r\n                'position': 'absolute',\r\n                'height': $(document).height()\r\n            });\r\n        }\r\n\r\n        return $layer;\r\n    }\r\n\r\n    /**\r\n     * Process submenu promise.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} currentMenuData\r\n     * @param {ContextMenuData} rootMenuData\r\n     * @param {Promise} promise\r\n     */\r\n    processPromises(e, currentMenuData, rootMenuData, promise) {\r\n        // Start\r\n        currentMenuData.$node.addClass(rootMenuData.classNames.iconLoadingClass);\r\n\r\n        function finishPromiseProcess(currentMenuData, rootMenuData, items) {\r\n            if (typeof rootMenuData.$menu === 'undefined' || !rootMenuData.$menu.is(':visible')) {\r\n                return;\r\n            }\r\n            currentMenuData.$node.removeClass(rootMenuData.classNames.iconLoadingClass);\r\n            currentMenuData.items = items;\r\n            rootMenuData.manager.operations.create(e, currentMenuData, rootMenuData); // Create submenu\r\n            rootMenuData.manager.operations.update(e, currentMenuData, rootMenuData); // Correctly update position if user is already hovered over menu item\r\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\r\n        }\r\n\r\n        function errorPromise(currentMenuData, rootMenuData, errorItem) {\r\n            // User called promise.reject() with an error item, if not, provide own error item.\r\n            if (typeof errorItem === 'undefined') {\r\n                errorItem = {\r\n                    'error': {\r\n                        name: 'No items and no error item',\r\n                        icon: 'context-menu-icon context-menu-icon-quit'\r\n                    }\r\n                };\r\n                if (window.console) {\r\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\r\n                }\r\n            } else if (typeof errorItem === 'string') {\r\n                errorItem = {'error': {name: errorItem}};\r\n            }\r\n            finishPromiseProcess(currentMenuData, rootMenuData, errorItem);\r\n        }\r\n\r\n        function completedPromise(currentMenuData, rootMenuData, items) {\r\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\r\n            // be used to create the rest of the context menu.\r\n            if (typeof items === 'undefined') {\r\n                // Null result, dev should have checked\r\n                errorPromise(undefined); // own error object\r\n            }\r\n            finishPromiseProcess(currentMenuData, rootMenuData, items);\r\n        }\r\n\r\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the currentMenuData\r\n        // and rootMenuData to avoid scope problems\r\n        promise.then(completedPromise.bind(this, currentMenuData, rootMenuData), errorPromise.bind(this, currentMenuData, rootMenuData));\r\n    }\r\n\r\n    /**\r\n     * Operation that will run after contextMenu showed on screen.\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuOperations\r\n     * @instance\r\n     *\r\n     * @param {JQuery.Event} e\r\n     * @param {ContextMenuData} menuData\r\n     * @return {undefined}\r\n     */\r\n    activated(e, menuData) {\r\n        const $menu = menuData.$menu;\r\n        const $menuOffset = $menu.offset();\r\n        const winHeight = $(window).height();\r\n        const winScrollTop = $(window).scrollTop();\r\n        const menuHeight = $menu.height();\r\n        if (menuHeight > winHeight) {\r\n            $menu.css({\r\n                'height': winHeight + 'px',\r\n                'overflow-x': 'hidden',\r\n                'overflow-y': 'auto',\r\n                'top': winScrollTop + 'px'\r\n            });\r\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\r\n            $menu.css({\r\n                'top': '0px'\r\n            });\r\n        }\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuOperations.js","\r\nexport default class ContextMenuHelper {\r\n    /**\r\n     * @param {JQuery} $t - Element to calculate z-index of.\r\n     * @return {number} - Elements zIndex\r\n     */\r\n    static zindex($t) {\r\n        let zin = 0;\r\n        let $tt = $t;\r\n\r\n        while (true) {\r\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\r\n            $tt = $tt.parent();\r\n            if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\r\n                break;\r\n            }\r\n        }\r\n        return zin;\r\n    }\r\n\r\n    /**\r\n     * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\r\n     * @param {string} val - Accesskey value\r\n     * @return {Array} - Seperate keys to handle as accesskey\r\n     */\r\n    static splitAccesskey(val) {\r\n        let t = val.split(/\\s+/);\r\n        let keys = [];\r\n\r\n        for (let i = 0, k; k = t[i]; i++) {\r\n            k = k.charAt(0).toUpperCase(); // first character only\r\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\r\n            // a map to look up already used access keys would be nice\r\n            keys.push(k);\r\n        }\r\n\r\n        return keys;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHelper.js","/**\r\n * @class ContextMenuItem\r\n * @instance\r\n * @interface\r\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\r\n\r\n ```javascript\r\n var items = {\r\n  firstCommand: itemOptions,\r\n  separator1: \"-----\",\r\n  separator2: { \"type\": \"cm_separator\" },\r\n  command2: itemOptions\r\n}\r\n ```\r\n\r\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\r\n\r\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\r\n\r\n *\r\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\r\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\r\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\r\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\r\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\r\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\r\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\r\n * @property {ContextMenuItemTypes|string} type - Specifies the type of the command. See {@link ContextMenuItemTypes}.\r\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\r\n * @property {string} value - The value of the `<input>` element.\r\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ContextMenuItemTypes}.\r\n * @property {string} radio - Specifies the group of the `radio` element.\r\n * @property {string} options - Specifies the options of the `select` element.\r\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\r\n * @property {Object<string, ContextMenuItem>} items - Items to show in a sub-menu. You can nest as many as you like.\r\n * @property {string} accesskey - Character(s) to be used as accesskey.\r\n\r\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\r\n\r\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\r\n *\r\n * @property {?JQuery} $input - The input element if it was build for this item.\r\n *\r\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items.\r\n */\r\n\r\n/**\r\n * Possible ContextMenuItem types\r\n * @enum string\r\n */\r\nconst ContextMenuItemTypes = {\r\n    /**\r\n     * The command is a simple clickable item.\r\n     */\r\n    simple: '',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    text: 'text',\r\n\r\n    /**\r\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    textarea: 'textarea',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    checkbox: 'checkbox',\r\n\r\n    /**\r\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    radio: 'radio',\r\n\r\n    /**\r\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\r\n     */\r\n    select: 'select',\r\n\r\n    /**\r\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\r\n     */\r\n    html: 'html',\r\n\r\n    /**\r\n     * Internal property, used internally when the type is set to a string.\r\n     */\r\n    separator: 'cm_separator',\r\n\r\n    /**\r\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\r\n     */\r\n    submenu: 'sub'\r\n};\r\n\r\nexport default ContextMenuItemTypes;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuItemTypes.js","/**\r\n * Determine the position for a root menu.\r\n * @memberOf ContextMenuOptions\r\n * @function ContextMenuOptions#determinePosition\r\n * @param {(JQuery)} $menu\r\n */\r\nexport function determinePosition($menu) {\r\n    // position to the lower middle of the trigger element\r\n    if ($.ui && $.ui.position) {\r\n        // .position() is provided as a jQuery UI utility\r\n        // (...and it won't work on hidden elements)\r\n        $menu.css('display', 'block').position({\r\n            my: 'center top',\r\n            at: 'center bottom',\r\n            of: this,\r\n            offset: '0 5',\r\n            collision: 'fit'\r\n        }).css('display', 'none');\r\n    } else {\r\n        // determine contextMenu position\r\n        const offset = this.offset();\r\n        offset.top += this.outerHeight();\r\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\r\n        $menu.css(offset);\r\n    }\r\n}\r\n\r\n/**\r\n * Position the root menu.\r\n * @memberOf ContextMenuOptions\r\n * @function ContextMenuOptions#position\r\n * @param {JQuery.Event} e\r\n * @param {ContextMenuData} currentMenuData\r\n * @param {(number|string)} x\r\n * @param {(number|string)} y\r\n */\r\nexport function position(e, currentMenuData, x, y) {\r\n    const $window = $(window);\r\n    let offset;\r\n    // determine contextMenu position\r\n    if (!x && !y) {\r\n        currentMenuData.determinePosition.call(this, currentMenuData.$menu);\r\n        return;\r\n    } else if (x === 'maintain' && y === 'maintain') {\r\n        // x and y must not be changed (after re-show on command click)\r\n        offset = currentMenuData.$menu.position();\r\n    } else {\r\n        // x and y are given (by mouse event)\r\n        const offsetParentOffset = currentMenuData.$menu.offsetParent().offset();\r\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\r\n    }\r\n\r\n    // correct offset if viewport demands it\r\n    const bottom = $window.scrollTop() + $window.height();\r\n    const right = $window.scrollLeft() + $window.width();\r\n    const height = currentMenuData.$menu.outerHeight();\r\n    const width = currentMenuData.$menu.outerWidth();\r\n\r\n    if (offset.top + height > bottom) {\r\n        offset.top -= height;\r\n    }\r\n\r\n    if (offset.top < 0) {\r\n        offset.top = 0;\r\n    }\r\n\r\n    if (offset.left + width > right) {\r\n        offset.left -= width;\r\n    }\r\n\r\n    if (offset.left < 0) {\r\n        offset.left = 0;\r\n    }\r\n\r\n    currentMenuData.$menu.css(offset);\r\n}\r\n\r\n/**\r\n * Position a submenu.\r\n * @memberOf ContextMenuOptions\r\n * @function ContextMenuOptions#positionSubmenu\r\n * @param {JQuery.Event} e\r\n * @param {JQuery} $menu\r\n */\r\n// position the sub-menu\r\nexport function positionSubmenu(e, $menu) {\r\n    if (typeof $menu === 'undefined') {\r\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\r\n        // but the submenu does not exist yet if ContextMenuData.items is a promise. just return, will\r\n        // call positionSubmenu after promise is completed.\r\n        return;\r\n    }\r\n    if ($.ui && $.ui.position) {\r\n        // .position() is provided as a jQuery UI utility\r\n        // (...and it won't work on hidden elements)\r\n        $menu.css('display', 'block').position({\r\n            my: 'left top-5',\r\n            at: 'right top',\r\n            of: this,\r\n            collision: 'flipfit fit'\r\n        }).css('display', '');\r\n    } else {\r\n        // determine contextMenu position\r\n        const offset = {\r\n            top: -9,\r\n            left: this.outerWidth() - 5\r\n        };\r\n        $menu.css(offset);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/position.js","/**\r\n * @class ContextMenuHtml5Builder\r\n * @classdesc considering the following HTML `$.contextMenu.fromMenu($('#html5menu'))` will return a proper items object.\r\n\r\n ```\r\n <menu id=\"html5menu\" type=\"context\" style=\"display:none\">\r\n    <command label=\"rotate\" onclick=\"alert('rotate')\">\r\n    <command label=\"resize\" onclick=\"alert('resize')\">\r\n    <menu label=\"share\">\r\n        <command label=\"twitter\" onclick=\"alert('twitter')\">\r\n        <hr>\r\n        <command label=\"facebook\" onclick=\"alert('facebook')\">\r\n    </menu>\r\n </menu>\r\n ```\r\n\r\n `$.contextMenu.fromMenu()` will properly import (and thus handle) the following elements. Everything else is imported as `{type: \"html\"}`\r\n\r\n ```\r\n <menu>\r\n <hr>\r\n <a>\r\n <command type=\"command|radio|checkbox\"> (W3C Specification)\r\n <menuitem type=\"command|radio|checkbox\"> (Firefox)\r\n <input type=\"text|radio|checkbox\">\r\n <select>\r\n <textarea>\r\n <label for=\"someId\">\r\n <label> the text <input|textarea|select>\r\n ```\r\n\r\n The `<menu>` must be hidden but not removed, as all command events (clicks) are passed-thru to the original command element!\r\n\r\n Note: While the specs note `<option>`s to be renderd as regular commands, `$.contextMenu` will render an actual `<select>`.\r\n\r\n ## HTML5 `<menu>` shiv/polyfill\r\n\r\n Engaging the HTML5 polyfill (ignoring `$.contextMenu` if context menus are available natively):\r\n\r\n ```\r\n $(function(){\r\n    $.contextMenu(\"html5\");\r\n });\r\n ```\r\n\r\n Engaging the HTML5 polyfill (ignoring browser native implementation):\r\n\r\n ```\r\n $(function(){\r\n    $.contextMenu(\"html5\", true);\r\n });\r\n ```\r\n\r\n */\r\nexport default class ContextMenuHtml5Builder {\r\n    /**\r\n     * Get the input label for the given node.\r\n     *\r\n     * @method inputLabel\r\n     * @memberOf ContextMenuHtml5Builder\r\n     * @instance\r\n     *\r\n     * @param {HTMLElement} node - Html element\r\n     * @returns {string|JQuery|jQuery} - Input label element\r\n     */\r\n    inputLabel(node) {\r\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\r\n    }\r\n\r\n    /**\r\n     * Helper function to build ContextMenuItems from an html5 menu element.\r\n     *\r\n     * @method fromMenu\r\n     * @memberOf ContextMenuHtml5Builder\r\n     * @instance\r\n     *\r\n     * @param {JQuery|string} element - Menu element to generate the menu from.\r\n     * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\r\n     */\r\n    fromMenu(element) {\r\n        const $this = $(element);\r\n        const items = {};\r\n\r\n        this.build(items, $this.children());\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Helper function for building a menu from a HTML menu element.\r\n     *\r\n     * @method build\r\n     * @memberOf ContextMenuHtml5Builder\r\n     * @instance\r\n     *\r\n     * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\r\n     * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\r\n     * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\r\n     * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\r\n     */\r\n    build(items, $children, counter) {\r\n        if (!counter) {\r\n            counter = 0;\r\n        }\r\n\r\n        let builder = this;\r\n\r\n        $children.each(function () {\r\n            let $node = $(this);\r\n            let node = this;\r\n            let nodeName = this.nodeName.toLowerCase();\r\n            let label;\r\n            let item;\r\n\r\n            // extract <label><input>\r\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\r\n                label = $node.text();\r\n                $node = $node.children().first();\r\n                node = $node.get(0);\r\n                nodeName = node.nodeName.toLowerCase();\r\n            }\r\n\r\n            /*\r\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\r\n             * Not being the sadistic kind, $.contextMenu only accepts:\r\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\r\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\r\n             */\r\n\r\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\r\n            switch (nodeName) {\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\r\n                case 'menu':\r\n                    item = {name: $node.attr('label'), items: {}};\r\n                    counter = builder.build(item.items, $node.children(), counter);\r\n                    break;\r\n\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\r\n                case 'a':\r\n                case 'button':\r\n                    item = {\r\n                        name: $node.text(),\r\n                        disabled: !!$node.attr('disabled'),\r\n                        callback: (function () {\r\n                            return function () {\r\n                                $node.get(0).click();\r\n                            };\r\n                        })()\r\n                    };\r\n                    break;\r\n\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\r\n                case 'menuitem':\r\n                case 'command':\r\n                    switch ($node.attr('type')) {\r\n                        case undefined:\r\n                        case 'command':\r\n                        case 'menuitem':\r\n                            item = {\r\n                                name: $node.attr('label'),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                icon: $node.attr('icon'),\r\n                                callback: (function () {\r\n                                    return function () {\r\n                                        $node.get(0).click();\r\n                                    };\r\n                                })()\r\n                            };\r\n                            break;\r\n\r\n                        case 'checkbox':\r\n                            item = {\r\n                                type: 'checkbox',\r\n                                disabled: !!$node.attr('disabled'),\r\n                                name: $node.attr('label'),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n                        case 'radio':\r\n                            item = {\r\n                                type: 'radio',\r\n                                disabled: !!$node.attr('disabled'),\r\n                                name: $node.attr('label'),\r\n                                radio: $node.attr('radiogroup'),\r\n                                value: $node.attr('id'),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n\r\n                        default:\r\n                            item = undefined;\r\n                    }\r\n                    break;\r\n\r\n                case 'hr':\r\n                    item = '-------';\r\n                    break;\r\n\r\n                case 'input':\r\n                    switch ($node.attr('type')) {\r\n                        case 'text':\r\n                            item = {\r\n                                type: 'text',\r\n                                name: label || builder.inputLabel(node),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                value: $node.val()\r\n                            };\r\n                            break;\r\n\r\n                        case 'checkbox':\r\n                            item = {\r\n                                type: 'checkbox',\r\n                                name: label || builder.inputLabel(node),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n\r\n                        case 'radio':\r\n                            item = {\r\n                                type: 'radio',\r\n                                name: label || builder.inputLabel(node),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                radio: !!$node.attr('name'),\r\n                                value: $node.val(),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n\r\n                        default:\r\n                            item = undefined;\r\n                            break;\r\n                    }\r\n                    break;\r\n\r\n                case 'select':\r\n                    item = {\r\n                        type: 'select',\r\n                        name: label || builder.inputLabel(node),\r\n                        disabled: !!$node.attr('disabled'),\r\n                        selected: $node.val(),\r\n                        options: {}\r\n                    };\r\n                    $node.children().each(function () {\r\n                        item.options[this.value] = $(this).text();\r\n                    });\r\n                    break;\r\n\r\n                case 'textarea':\r\n                    item = {\r\n                        type: 'textarea',\r\n                        name: label || builder.inputLabel(node),\r\n                        disabled: !!$node.attr('disabled'),\r\n                        value: $node.val()\r\n                    };\r\n                    break;\r\n\r\n                case 'label':\r\n                    break;\r\n\r\n                default:\r\n                    item = {type: 'html', html: $node.clone(true)};\r\n                    break;\r\n            }\r\n\r\n            if (item) {\r\n                counter++;\r\n                items['key' + counter] = item;\r\n            }\r\n        });\r\n\r\n        return counter;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHtml5Builder.js","import defaults from '../defaults';\r\n\r\n/**\r\n * @typedef {jQuery.Event} ContextMenuEvent\r\n * @augments jQuery.Event\r\n * @property {ContextMenuData} data\r\n */\r\n\r\nexport default class ContextMenuEventHandler {\r\n    /**\r\n     * @constructs ContextMenuEventHandler\r\n     * @constructor\r\n     * @property {?JQuery} $currentTrigger\r\n     * @property {Object} hoveract\r\n     */\r\n    constructor() {\r\n        this.$currentTrigger = null;\r\n        this.hoveract = {};\r\n    }\r\n\r\n    /**\r\n     * Helper to abort an event\r\n     *\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    abortevent(e) {\r\n        e.preventDefault();\r\n        e.stopImmediatePropagation();\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    contextmenu(e) {\r\n        const $this = $(e.currentTarget);\r\n\r\n        if (!e.data) {\r\n            throw new Error('No data attached');\r\n        }\r\n\r\n        // disable actual context-menu if we are using the right mouse button as the trigger\r\n        if (e.data.trigger === 'right') {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        // abort native-triggered events unless we're triggering on right click\r\n        if ((e.data.trigger !== 'right' && e.data.trigger !== 'demand') && e.originalEvent) {\r\n            return;\r\n        }\r\n\r\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\r\n        if (typeof e.mouseButton !== 'undefined') {\r\n            if (!(e.data.trigger === 'left' && e.mouseButton === 0) && !(e.data.trigger === 'right' && e.mouseButton === 2)) {\r\n                // Mouse click is not valid.\r\n                return;\r\n            }\r\n        }\r\n\r\n        // abort event if menu is visible for this trigger\r\n        if ($this.hasClass('context-menu-active')) {\r\n            return;\r\n        }\r\n\r\n        if (!$this.hasClass('context-menu-disabled')) {\r\n            // theoretically need to fire a show event at <menu>\r\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\r\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\r\n            // e.data.$menu.trigger(evt);\r\n\r\n            e.data.manager.handler.$currentTrigger = $this;\r\n            if (e.data.build) {\r\n                const built = e.data.build(e, $this);\r\n                // abort if build() returned false\r\n                if (built === false) {\r\n                    return;\r\n                }\r\n\r\n                // dynamically build menu on invocation\r\n                e.data = $.extend(true, {}, defaults, e.data, built || {});\r\n\r\n                // abort if there are no items to display\r\n                if (!e.data.items || $.isEmptyObject(e.data.items)) {\r\n                    // Note: jQuery captures and ignores errors from event handlers\r\n                    if (window.console) {\r\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\r\n                    }\r\n\r\n                    throw new Error('No Items specified');\r\n                }\r\n\r\n                // backreference for custom command type creation\r\n                e.data.$trigger = e.data.manager.handler.$currentTrigger;\r\n\r\n                e.data.manager.operations.create(e, e.data);\r\n            }\r\n            let showMenu = false;\r\n            for (let item in e.data.items) {\r\n                if (e.data.items.hasOwnProperty(item)) {\r\n                    let visible;\r\n                    if ($.isFunction(e.data.items[item].visible)) {\r\n                        visible = e.data.items[item].visible.call($this, e, item, e.data, e.data);\r\n                    } else if (typeof e.data.items[item] !== 'undefined' && e.data.items[item].visible) {\r\n                        visible = e.data.items[item].visible === true;\r\n                    } else {\r\n                        visible = true;\r\n                    }\r\n                    if (visible) {\r\n                        showMenu = true;\r\n                    }\r\n                }\r\n            }\r\n            if (showMenu) {\r\n                // show menu\r\n                e.data.manager.operations.show.call($this, e, e.data, e.pageX, e.pageY);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    click(e) {\r\n        e.preventDefault();\r\n        e.stopImmediatePropagation();\r\n        $(this).trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e}));\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    mousedown(e) {\r\n        // register mouse down\r\n        const $this = $(this);\r\n\r\n        // hide any previous menus\r\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && !e.data.manager.handler.$currentTrigger.is($this)) {\r\n            e.data.manager.handler.$currentTrigger.data('contextMenu').$menu.trigger($.Event('contextmenu', {data: e.data, originalEvent: e}));\r\n        }\r\n\r\n        // activate on right click\r\n        if (e.button === 2) {\r\n            e.data.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    mouseup(e) {\r\n        // show menu\r\n        const $this = $(this);\r\n        if ($this.data('contextMenuActive') && e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && e.data.manager.handler.$currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            e.data.manager.handler.$currentTrigger = $this;\r\n            $this.trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e}));\r\n        }\r\n\r\n        $this.removeData('contextMenuActive');\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    mouseenter(e) {\r\n        const $this = $(this);\r\n        const $related = $(e.relatedTarget);\r\n        const $document = $(document);\r\n\r\n        // abort if we're coming from a menu\r\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\r\n            return;\r\n        }\r\n\r\n        // abort if a menu is shown\r\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length) {\r\n            return;\r\n        }\r\n\r\n        e.data.manager.handler.hoveract.pageX = e.pageX;\r\n        e.data.manager.handler.hoveract.pageY = e.pageY;\r\n        e.data.manager.handler.hoveract.data = e.data;\r\n        $document.on('mousemove.contextMenuShow', e.data.manager.handler.mousemove);\r\n        e.data.manager.handler.hoveract.timer = setTimeout(function () {\r\n            e.data.manager.handler.hoveract.timer = null;\r\n            $document.off('mousemove.contextMenuShow');\r\n            e.data.manager.handler.$currentTrigger = $this;\r\n            $this.trigger($.Event('contextmenu', {\r\n                data: e.data.manager.handler.hoveract.data,\r\n                pageX: e.data.manager.handler.hoveract.pageX,\r\n                pageY: e.data.manager.handler.hoveract.pageY\r\n            }));\r\n        }, e.data.delay);\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    mousemove(e) {\r\n        e.data.manager.handler.hoveract.pageX = e.pageX;\r\n        e.data.manager.handler.hoveract.pageY = e.pageY;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    mouseleave(e) {\r\n        // abort if we're leaving for a menu\r\n        const $related = $(e.relatedTarget);\r\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            clearTimeout(e.data.manager.handler.hoveract.timer);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        e.data.manager.handler.hoveract.timer = null;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    layerClick(e) {\r\n        let $this = $(this);\r\n        let root = $this.data('contextMenuRoot');\r\n\r\n        if (root === null || typeof root === 'undefined') {\r\n            throw new Error('No ContextMenuData found');\r\n        }\r\n\r\n        let button = e.button;\r\n        let x = e.pageX;\r\n        let y = e.pageY;\r\n        let target;\r\n        let offset;\r\n\r\n        e.preventDefault();\r\n\r\n        setTimeout(function () {\r\n            let $window = $(window);\r\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\r\n\r\n            // find the element that would've been clicked, wasn't the layer in the way\r\n            if (document.elementFromPoint && root.$layer) {\r\n                root.$layer.hide();\r\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\r\n\r\n                // also need to try and focus this element if we're in a contenteditable area,\r\n                // as the layer will prevent the browser mouse action we want\r\n                if (target.isContentEditable) {\r\n                    const range = document.createRange();\r\n                    const sel = window.getSelection();\r\n                    range.selectNode(target);\r\n                    range.collapse(true);\r\n                    sel.removeAllRanges();\r\n                    sel.addRange(range);\r\n                }\r\n                $(target).trigger(e);\r\n                root.$layer.show();\r\n            }\r\n\r\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\r\n                root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\r\n                return;\r\n            }\r\n\r\n            if (root.reposition && triggerAction) {\r\n                if (document.elementFromPoint) {\r\n                    if (root.$trigger.is(target)) {\r\n                        root.position.call(root.$trigger, e, root, x, y);\r\n                        return;\r\n                    }\r\n                } else {\r\n                    offset = root.$trigger.offset();\r\n                    const $window = $(window);\r\n                    // while this looks kinda awful, it's the best way to avoid\r\n                    // unnecessarily calculating any positions\r\n                    offset.top += $window.scrollTop();\r\n                    if (offset.top <= e.pageY) {\r\n                        offset.left += $window.scrollLeft();\r\n                        if (offset.left <= e.pageX) {\r\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\r\n                            if (offset.bottom >= e.pageY) {\r\n                                offset.right = offset.left + root.$trigger.outerWidth();\r\n                                if (offset.right >= e.pageX) {\r\n                                    // reposition\r\n                                    root.position.call(root.$trigger, e, root, x, y);\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (target && triggerAction) {\r\n                root.$trigger.one('contextmenu:hidden', function () {\r\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\r\n                });\r\n            }\r\n\r\n            if (root.$menu !== null && typeof root.$menu !== 'undefined') {\r\n                root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\r\n            }\r\n        }, 50);\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     * @param {ContextMenuItem} currentMenuData\r\n     */\r\n    keyStop(e, currentMenuData) {\r\n        if (!currentMenuData.isInput) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    key(e) {\r\n        let rootMenuData = {};\r\n\r\n        // Only get the data from this.$currentTrigger if it exists\r\n        if (e.data.manager.handler.$currentTrigger) {\r\n            rootMenuData = e.data.manager.handler.$currentTrigger.data('contextMenu') || {};\r\n        }\r\n        // If the trigger happen on a element that are above the contextmenu do this\r\n        if (typeof rootMenuData.zIndex === 'undefined') {\r\n            rootMenuData.zIndex = 0;\r\n        }\r\n        const getZIndexOfTriggerTarget = function (target) {\r\n            if (target.style.zIndex !== '') {\r\n                return target.style.zIndex;\r\n            } else {\r\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\r\n                    return getZIndexOfTriggerTarget(target.offsetParent);\r\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\r\n                    return getZIndexOfTriggerTarget(target.parentElement);\r\n                }\r\n            }\r\n        };\r\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\r\n\r\n        // If targetZIndex is heigher then rootMenuData.zIndex dont progress any futher.\r\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\r\n        // and its above the contextmenu it wont steal keys events\r\n        if (rootMenuData.$menu && parseInt(targetZIndex, 10) > parseInt(rootMenuData.$menu.css('zIndex'), 10)) {\r\n            return;\r\n        }\r\n        switch (e.keyCode) {\r\n            case 9:\r\n            case 38: // up\r\n                e.data.manager.handler.keyStop(e, rootMenuData);\r\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\r\n                if (rootMenuData.isInput) {\r\n                    if (e.keyCode === 9 && e.shiftKey) {\r\n                        e.preventDefault();\r\n                        if (rootMenuData.$selected) {\r\n                            rootMenuData.$selected.find('input, textarea, select').blur();\r\n                        }\r\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\r\n                            rootMenuData.$menu.trigger('prevcommand', {data: rootMenuData, originalEvent: e});\r\n                        }\r\n                        return;\r\n                    } else if (e.keyCode === 38 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\r\n                        // checkboxes don't capture this key\r\n                        e.preventDefault();\r\n                        return;\r\n                    }\r\n                } else if (e.keyCode !== 9 || e.shiftKey) {\r\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\r\n                        rootMenuData.$menu.trigger('prevcommand', {data: rootMenuData, originalEvent: e});\r\n                    }\r\n                    return;\r\n                }\r\n                break;\r\n            // omitting break;\r\n            // case 9: // tab - reached through omitted break;\r\n            case 40: // down\r\n                e.data.manager.handler.keyStop(e, rootMenuData);\r\n                if (rootMenuData.isInput) {\r\n                    if (e.keyCode === 9) {\r\n                        e.preventDefault();\r\n                        if (rootMenuData.$selected) {\r\n                            rootMenuData.$selected.find('input, textarea, select').blur();\r\n                        }\r\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\r\n                            rootMenuData.$menu.trigger('nextcommand', {data: rootMenuData, originalEvent: e});\r\n                        }\r\n                        return;\r\n                    } else if (e.keyCode === 40 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\r\n                        // checkboxes don't capture this key\r\n                        e.preventDefault();\r\n                        return;\r\n                    }\r\n                } else {\r\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\r\n                        rootMenuData.$menu.trigger('nextcommand', {data: rootMenuData, originalEvent: e});\r\n                    }\r\n                    return;\r\n                }\r\n                break;\r\n\r\n            case 37: // left\r\n                e.data.manager.handler.keyStop(e, rootMenuData);\r\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\r\n                    break;\r\n                }\r\n\r\n                if (!rootMenuData.$selected.parent().hasClass('context-menu-root')) {\r\n                    const $parent = rootMenuData.$selected.parent().parent();\r\n                    rootMenuData.$selected.trigger('contextmenu:blur', {data: rootMenuData, originalEvent: e});\r\n                    rootMenuData.$selected = $parent;\r\n                    return;\r\n                }\r\n                break;\r\n\r\n            case 39: // right\r\n                e.data.manager.handler.keyStop(e, rootMenuData);\r\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\r\n                    break;\r\n                }\r\n\r\n                const itemdata = rootMenuData.$selected.data('contextMenu') || {};\r\n                if (itemdata.$menu && rootMenuData.$selected.hasClass('context-menu-submenu')) {\r\n                    rootMenuData.$selected = null;\r\n                    itemdata.$selected = null;\r\n                    itemdata.$menu.trigger('nextcommand', {data: itemdata, originalEvent: e});\r\n                    return;\r\n                }\r\n                break;\r\n\r\n            case 35: // end\r\n            case 36: // home\r\n                if (rootMenuData.$selected && rootMenuData.$selected.find('input, textarea, select').length) {\r\n                    break;\r\n                } else {\r\n                    ((rootMenuData.$selected && rootMenuData.$selected.parent()) || rootMenuData.$menu)\r\n                        .children(':not(.' + rootMenuData.classNames.disabled + ', .' + rootMenuData.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\r\n                        .trigger('contextmenu:focus', {data: rootMenuData, originalEvent: e});\r\n                    e.preventDefault();\r\n                    break;\r\n                }\r\n            case 13: // enter\r\n                e.data.manager.handler.keyStop(e, rootMenuData);\r\n                if (rootMenuData.isInput) {\r\n                    if (rootMenuData.$selected && !rootMenuData.$selected.is('textarea, select')) {\r\n                        e.preventDefault();\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n                if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\r\n                    rootMenuData.$selected.trigger('mouseup', {data: rootMenuData, originalEvent: e});\r\n                }\r\n                return;\r\n            case 32: // space\r\n            case 33: // page up\r\n            case 34: // page down\r\n                // prevent browser from scrolling down while menu is visible\r\n                e.data.manager.handler.keyStop(e, rootMenuData);\r\n                return;\r\n\r\n            case 27: // esc\r\n                e.data.manager.handler.keyStop(e, rootMenuData);\r\n                if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\r\n                    rootMenuData.$menu.trigger('contextmenu:hide', {data: rootMenuData, originalEvent: e});\r\n                }\r\n                return;\r\n\r\n            default: // 0-9, a-z\r\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\r\n                if (rootMenuData.accesskeys && rootMenuData.accesskeys[k]) {\r\n                    // according to the specs accesskeys must be invoked immediately\r\n                    rootMenuData.accesskeys[k].$node.trigger(rootMenuData.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup', {data: rootMenuData, originalEvent: e});\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        // pass event to selected item,\r\n        // stop propagation to avoid endless recursion\r\n        e.stopPropagation();\r\n        if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\r\n            rootMenuData.$selected.trigger(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    prevItem(e) {\r\n        e.stopPropagation();\r\n        let currentMenuData = $(this).data('contextMenu') || {};\r\n        const rootMenuData = $(this).data('contextMenuRoot') || {};\r\n\r\n        // obtain currently selected menu\r\n        if (currentMenuData.$selected) {\r\n            const $s = currentMenuData.$selected;\r\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\r\n            currentMenuData.$selected = $s;\r\n        }\r\n\r\n        const $children = currentMenuData.$menu.children();\r\n        let $prev = !currentMenuData.$selected || !currentMenuData.$selected.prev().length ? $children.last() : currentMenuData.$selected.prev();\r\n        const $round = $prev;\r\n\r\n        // skip disabled or hidden elements\r\n        while ($prev.hasClass(rootMenuData.classNames.disabled) || $prev.hasClass(rootMenuData.classNames.notSelectable) || $prev.is(':hidden')) {\r\n            if ($prev.prev().length) {\r\n                $prev = $prev.prev();\r\n            } else {\r\n                $prev = $children.last();\r\n            }\r\n\r\n            if ($prev.is($round)) {\r\n                // break endless loop\r\n                return;\r\n            }\r\n        }\r\n\r\n        // leave current\r\n        if (currentMenuData.$selected) {\r\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\r\n        }\r\n\r\n        // activate next\r\n        rootMenuData.manager.handler.itemMouseenter.call($prev.get(0), e);\r\n\r\n        // focus input\r\n        const $input = $prev.find('input, textarea, select');\r\n        if ($input.length) {\r\n            $input.focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    nextItem(e) {\r\n        e.stopPropagation();\r\n        let currentMenuData = $(this).data('contextMenu') || {};\r\n        let rootMenuData = $(this).data('contextMenuRoot') || {};\r\n\r\n        // obtain currently selected menu\r\n        if (currentMenuData.$selected) {\r\n            const $s = currentMenuData.$selected;\r\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\r\n            currentMenuData.$selected = $s;\r\n        }\r\n\r\n        const $children = currentMenuData.$menu.children();\r\n        let $next = !currentMenuData.$selected || !currentMenuData.$selected.next().length ? $children.first() : currentMenuData.$selected.next();\r\n        const $round = $next;\r\n\r\n        // skip disabled\r\n        while ($next.hasClass(rootMenuData.classNames.disabled) || $next.hasClass(rootMenuData.classNames.notSelectable) || $next.is(':hidden')) {\r\n            if ($next.next().length) {\r\n                $next = $next.next();\r\n            } else {\r\n                $next = $children.first();\r\n            }\r\n            if ($next.is($round)) {\r\n                // break endless loop\r\n                return;\r\n            }\r\n        }\r\n\r\n        // leave current\r\n        if (currentMenuData.$selected) {\r\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\r\n        }\r\n\r\n        // activate next\r\n        rootMenuData.manager.handler.itemMouseenter.call($next.get(0), e);\r\n\r\n        // focus input\r\n        const $input = $next.find('input, textarea, select');\r\n        if ($input.length) {\r\n            $input.focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    focusInput(e) {\r\n        let $this = $(this).closest('.context-menu-item');\r\n        let data = $this.data();\r\n        let currentMenuData = data.contextMenu;\r\n        let rootMenuData = data.contextMenuRoot;\r\n\r\n        rootMenuData.$selected = currentMenuData.$selected = $this;\r\n        rootMenuData.isInput = currentMenuData.isInput = true;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    blurInput(e) {\r\n        let $this = $(this).closest('.context-menu-item');\r\n        let data = $this.data();\r\n        let currentMenuData = data.contextMenu;\r\n        let rootMenuData = data.contextMenuRoot;\r\n\r\n        rootMenuData.isInput = currentMenuData.isInput = false;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    menuMouseenter(e) {\r\n        let root = $(this).data().contextMenuRoot;\r\n        root.hovering = true;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    menuMouseleave(e) {\r\n        let root = $(this).data().contextMenuRoot;\r\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\r\n            root.hovering = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    itemMouseenter(e) {\r\n        let $this = $(this);\r\n        let data = $this.data();\r\n        let currentMenuData = data.contextMenu;\r\n        let rootMenuData = data.contextMenuRoot;\r\n\r\n        rootMenuData.hovering = true;\r\n\r\n        // abort if we're re-entering\r\n        if (e && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        // make sure only one item is selected\r\n        let targetMenu = (currentMenuData.$menu ? currentMenuData : rootMenuData);\r\n        targetMenu.$menu\r\n            .children('.' + rootMenuData.classNames.hover).trigger('contextmenu:blur', {data: targetMenu, originalEvent: e})\r\n            .children('.hover').trigger('contextmenu:blur', {data: targetMenu, originalEvent: e});\r\n\r\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\r\n            currentMenuData.$selected = null;\r\n            return;\r\n        }\r\n\r\n        $this.trigger('contextmenu:focus', {data: currentMenuData, originalEvent: e});\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    itemMouseleave(e) {\r\n        let $this = $(this);\r\n        let data = $this.data();\r\n        let currentMenuData = data.contextMenu;\r\n        let rootMenuData = data.contextMenuRoot;\r\n\r\n        if (rootMenuData !== currentMenuData && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\r\n            if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\r\n                rootMenuData.$selected.trigger('contextmenu:blur', {data: rootMenuData, originalEvent: e});\r\n            }\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            rootMenuData.$selected = currentMenuData.$selected = currentMenuData.$node;\r\n            return;\r\n        }\r\n\r\n        if (currentMenuData && currentMenuData.$menu && currentMenuData.$menu.hasClass(rootMenuData.classNames.visible)) {\r\n            return;\r\n        }\r\n\r\n        $this.trigger('contextmenu:blur');\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    itemClick(e) {\r\n        let $this = $(this);\r\n        let data = $this.data();\r\n        let currentMenuData = data.contextMenu;\r\n        let rootMenuData = data.contextMenuRoot;\r\n        let key = data.contextMenuKey;\r\n        let callback;\r\n\r\n        // abort if the key is unknown or disabled or is a menu\r\n        if (!currentMenuData.items[key] || $this.is('.' + rootMenuData.classNames.disabled + ', .context-menu-separator, .' + rootMenuData.classNames.notSelectable) || ($this.is('.context-menu-submenu') && rootMenuData.selectableSubMenu === false)) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.stopImmediatePropagation();\r\n\r\n        if ($.isFunction(currentMenuData.callbacks[key]) && Object.prototype.hasOwnProperty.call(currentMenuData.callbacks, key)) {\r\n            // item-specific callback\r\n            callback = currentMenuData.callbacks[key];\r\n        } else if ($.isFunction(rootMenuData.callback)) {\r\n            // default callback\r\n            callback = rootMenuData.callback;\r\n        } else {\r\n            // no callback, no action\r\n            return;\r\n        }\r\n\r\n        // hide menu if callback doesn't stop that\r\n        if (callback.call(rootMenuData.$trigger, e, key, currentMenuData, rootMenuData) !== false) {\r\n            rootMenuData.$menu.trigger('contextmenu:hide');\r\n        } else if (rootMenuData.$menu.parent().length) {\r\n            rootMenuData.manager.operations.update.call(rootMenuData.$trigger, e, rootMenuData);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    inputClick(e) {\r\n        e.stopImmediatePropagation();\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     * @param {Object} data\r\n     */\r\n    hideMenu(e, data) {\r\n        console.log(e);\r\n        console.log(e.originalEvent);\r\n        const root = $(this).data('contextMenuRoot');\r\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    focusItem(e) {\r\n        e.stopPropagation();\r\n        const $this = $(this);\r\n        const data = $this.data();\r\n        const currentMenuData = data.contextMenu;\r\n        const rootMenuData = data.contextMenuRoot;\r\n\r\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\r\n            return;\r\n        }\r\n\r\n        $this\r\n            .addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '))\r\n            // select other items and included items\r\n            .parent().find('.context-menu-item').not($this)\r\n            .removeClass(rootMenuData.classNames.visible)\r\n            .filter('.' + rootMenuData.classNames.hover)\r\n            .trigger('contextmenu:blur');\r\n\r\n        // remember selected\r\n        currentMenuData.$selected = rootMenuData.$selected = $this;\r\n\r\n        if (currentMenuData.$node && currentMenuData.$node.hasClass('context-menu-submenu')) {\r\n            currentMenuData.$node.addClass(rootMenuData.classNames.hover);\r\n        }\r\n\r\n        // position sub-menu - do after show so dumb $.ui.position can keep up\r\n        if (currentMenuData.$node) {\r\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @memberOf ContextMenuEventHandler\r\n     * @instance\r\n     *\r\n     * @param {ContextMenuEvent|JQuery.Event} e\r\n     */\r\n    blurItem(e) {\r\n        e.stopPropagation();\r\n        const $this = $(this);\r\n        const data = $this.data();\r\n        const currentMenuData = data.contextMenu;\r\n        const rootMenuData = data.contextMenuRoot;\r\n\r\n        if (rootMenuData.autoHide) { // for tablets and touch screens this needs to remain\r\n            $this.removeClass(rootMenuData.classNames.visible);\r\n        }\r\n        $this.removeClass(rootMenuData.classNames.hover);\r\n        currentMenuData.$selected = null;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuEventHandler.js","/**\r\n * The jQuery plugin namespace.\r\n * @external \"jQuery.fn\"\r\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\r\n */\r\n\r\n/**\r\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\r\n *\r\n * @instance\r\n * @function external:jQuery.fn.contextmenu\r\n *\r\n * @param {(string|Object)} operation\r\n * @returns {JQuery}\r\n */\r\nexport default function (operation) {\r\n    const $t = this;\r\n    const $o = operation;\r\n    if ($t.length > 0) { // this is not a build on demand menu\r\n        if (typeof operation === 'undefined') {\r\n            $t.first().trigger('contextmenu');\r\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\r\n            $t.first().trigger($.Event('contextmenu', {\r\n                pageX: operation.x,\r\n                pageY: operation.y,\r\n                mouseButton: operation.button\r\n            }));\r\n        } else if (operation === 'hide') {\r\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\r\n            if ($menu) {\r\n                $menu.trigger('contextmenu:hide');\r\n            }\r\n        } else if (operation === 'destroy') {\r\n            $.contextMenu('destroy', {context: this});\r\n        } else if (operation === 'update') {\r\n            $.contextMenu('update', {context: this});\r\n        } else if ($.isPlainObject(operation)) {\r\n            operation.context = this;\r\n            $.contextMenu('create', operation);\r\n        } else if (operation === true) {\r\n            $t.removeClass('context-menu-disabled');\r\n        } else if (operation === false) {\r\n            $t.addClass('context-menu-disabled');\r\n        }\r\n    } else {\r\n        // eslint-disable-next-line no-undef\r\n        $.each($.contextMenu.menus, function () {\r\n            if (this.selector === $t.selector) {\r\n                $o.data = this;\r\n\r\n                $.extend($o.data, {trigger: 'demand'});\r\n            }\r\n        });\r\n\r\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\r\n    }\r\n\r\n    return this;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/jquery/contextMenuFunction.js"],"sourceRoot":""}